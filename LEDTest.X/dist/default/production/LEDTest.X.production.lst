

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Aug 17 13:44:26 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1707
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	swtext1,local,class=CONST,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.00
    59                           ; Generated 27/05/2018 GMT
    60                           ; 
    61                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F1707 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  011C                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018E                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0197                     	;# 
   155  020C                     	;# 
   156  020D                     	;# 
   157  020E                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  028C                     	;# 
   175  028D                     	;# 
   176  028E                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0293                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  029A                     	;# 
   187  030C                     	;# 
   188  030D                     	;# 
   189  030E                     	;# 
   190  038C                     	;# 
   191  038D                     	;# 
   192  038E                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  0397                     	;# 
   200  0398                     	;# 
   201  0399                     	;# 
   202  0511                     	;# 
   203  0515                     	;# 
   204  0E0F                     	;# 
   205  0E10                     	;# 
   206  0E11                     	;# 
   207  0E12                     	;# 
   208  0E13                     	;# 
   209  0E14                     	;# 
   210  0E15                     	;# 
   211  0E20                     	;# 
   212  0E21                     	;# 
   213  0E22                     	;# 
   214  0E90                     	;# 
   215  0E91                     	;# 
   216  0E92                     	;# 
   217  0E94                     	;# 
   218  0E95                     	;# 
   219  0E9C                     	;# 
   220  0E9D                     	;# 
   221  0E9E                     	;# 
   222  0E9F                     	;# 
   223  0EA0                     	;# 
   224  0EA1                     	;# 
   225  0EA2                     	;# 
   226  0EA3                     	;# 
   227  0EA4                     	;# 
   228  0EA5                     	;# 
   229  0EA6                     	;# 
   230  0EA7                     	;# 
   231  0F9E                     	;# 
   232  0FE4                     	;# 
   233  0FE5                     	;# 
   234  0FE6                     	;# 
   235  0FE7                     	;# 
   236  0FE8                     	;# 
   237  0FE9                     	;# 
   238  0FEA                     	;# 
   239  0FEB                     	;# 
   240  0FED                     	;# 
   241  0FEE                     	;# 
   242  0FEF                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  0116                     	;# 
   292  0117                     	;# 
   293  011C                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  018E                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0197                     	;# 
   306  020C                     	;# 
   307  020D                     	;# 
   308  020E                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0213                     	;# 
   315  0214                     	;# 
   316  0214                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0216                     	;# 
   323  0217                     	;# 
   324  0217                     	;# 
   325  028C                     	;# 
   326  028D                     	;# 
   327  028E                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0293                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029A                     	;# 
   338  030C                     	;# 
   339  030D                     	;# 
   340  030E                     	;# 
   341  038C                     	;# 
   342  038D                     	;# 
   343  038E                     	;# 
   344  0391                     	;# 
   345  0392                     	;# 
   346  0393                     	;# 
   347  0394                     	;# 
   348  0395                     	;# 
   349  0396                     	;# 
   350  0397                     	;# 
   351  0398                     	;# 
   352  0399                     	;# 
   353  0511                     	;# 
   354  0515                     	;# 
   355  0E0F                     	;# 
   356  0E10                     	;# 
   357  0E11                     	;# 
   358  0E12                     	;# 
   359  0E13                     	;# 
   360  0E14                     	;# 
   361  0E15                     	;# 
   362  0E20                     	;# 
   363  0E21                     	;# 
   364  0E22                     	;# 
   365  0E90                     	;# 
   366  0E91                     	;# 
   367  0E92                     	;# 
   368  0E94                     	;# 
   369  0E95                     	;# 
   370  0E9C                     	;# 
   371  0E9D                     	;# 
   372  0E9E                     	;# 
   373  0E9F                     	;# 
   374  0EA0                     	;# 
   375  0EA1                     	;# 
   376  0EA2                     	;# 
   377  0EA3                     	;# 
   378  0EA4                     	;# 
   379  0EA5                     	;# 
   380  0EA6                     	;# 
   381  0EA7                     	;# 
   382  0F9E                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  0116                     	;# 
   443  0117                     	;# 
   444  011C                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  018E                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0194                     	;# 
   454  0195                     	;# 
   455  0196                     	;# 
   456  0197                     	;# 
   457  020C                     	;# 
   458  020D                     	;# 
   459  020E                     	;# 
   460  0211                     	;# 
   461  0211                     	;# 
   462  0212                     	;# 
   463  0212                     	;# 
   464  0213                     	;# 
   465  0213                     	;# 
   466  0214                     	;# 
   467  0214                     	;# 
   468  0215                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0216                     	;# 
   473  0216                     	;# 
   474  0217                     	;# 
   475  0217                     	;# 
   476  028C                     	;# 
   477  028D                     	;# 
   478  028E                     	;# 
   479  0291                     	;# 
   480  0291                     	;# 
   481  0292                     	;# 
   482  0293                     	;# 
   483  0293                     	;# 
   484  0298                     	;# 
   485  0298                     	;# 
   486  0299                     	;# 
   487  029A                     	;# 
   488  029A                     	;# 
   489  030C                     	;# 
   490  030D                     	;# 
   491  030E                     	;# 
   492  038C                     	;# 
   493  038D                     	;# 
   494  038E                     	;# 
   495  0391                     	;# 
   496  0392                     	;# 
   497  0393                     	;# 
   498  0394                     	;# 
   499  0395                     	;# 
   500  0396                     	;# 
   501  0397                     	;# 
   502  0398                     	;# 
   503  0399                     	;# 
   504  0511                     	;# 
   505  0515                     	;# 
   506  0E0F                     	;# 
   507  0E10                     	;# 
   508  0E11                     	;# 
   509  0E12                     	;# 
   510  0E13                     	;# 
   511  0E14                     	;# 
   512  0E15                     	;# 
   513  0E20                     	;# 
   514  0E21                     	;# 
   515  0E22                     	;# 
   516  0E90                     	;# 
   517  0E91                     	;# 
   518  0E92                     	;# 
   519  0E94                     	;# 
   520  0E95                     	;# 
   521  0E9C                     	;# 
   522  0E9D                     	;# 
   523  0E9E                     	;# 
   524  0E9F                     	;# 
   525  0EA0                     	;# 
   526  0EA1                     	;# 
   527  0EA2                     	;# 
   528  0EA3                     	;# 
   529  0EA4                     	;# 
   530  0EA5                     	;# 
   531  0EA6                     	;# 
   532  0EA7                     	;# 
   533  0F9E                     	;# 
   534  0FE4                     	;# 
   535  0FE5                     	;# 
   536  0FE6                     	;# 
   537  0FE7                     	;# 
   538  0FE8                     	;# 
   539  0FE9                     	;# 
   540  0FEA                     	;# 
   541  0FEB                     	;# 
   542  0FED                     	;# 
   543  0FEE                     	;# 
   544  0FEF                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0097                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009A                     	;# 
   584  009B                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  009F                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  011C                     	;# 
   596  018C                     	;# 
   597  018D                     	;# 
   598  018E                     	;# 
   599  0191                     	;# 
   600  0191                     	;# 
   601  0192                     	;# 
   602  0193                     	;# 
   603  0193                     	;# 
   604  0194                     	;# 
   605  0195                     	;# 
   606  0196                     	;# 
   607  0197                     	;# 
   608  020C                     	;# 
   609  020D                     	;# 
   610  020E                     	;# 
   611  0211                     	;# 
   612  0211                     	;# 
   613  0212                     	;# 
   614  0212                     	;# 
   615  0213                     	;# 
   616  0213                     	;# 
   617  0214                     	;# 
   618  0214                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0216                     	;# 
   624  0216                     	;# 
   625  0217                     	;# 
   626  0217                     	;# 
   627  028C                     	;# 
   628  028D                     	;# 
   629  028E                     	;# 
   630  0291                     	;# 
   631  0291                     	;# 
   632  0292                     	;# 
   633  0293                     	;# 
   634  0293                     	;# 
   635  0298                     	;# 
   636  0298                     	;# 
   637  0299                     	;# 
   638  029A                     	;# 
   639  029A                     	;# 
   640  030C                     	;# 
   641  030D                     	;# 
   642  030E                     	;# 
   643  038C                     	;# 
   644  038D                     	;# 
   645  038E                     	;# 
   646  0391                     	;# 
   647  0392                     	;# 
   648  0393                     	;# 
   649  0394                     	;# 
   650  0395                     	;# 
   651  0396                     	;# 
   652  0397                     	;# 
   653  0398                     	;# 
   654  0399                     	;# 
   655  0511                     	;# 
   656  0515                     	;# 
   657  0E0F                     	;# 
   658  0E10                     	;# 
   659  0E11                     	;# 
   660  0E12                     	;# 
   661  0E13                     	;# 
   662  0E14                     	;# 
   663  0E15                     	;# 
   664  0E20                     	;# 
   665  0E21                     	;# 
   666  0E22                     	;# 
   667  0E90                     	;# 
   668  0E91                     	;# 
   669  0E92                     	;# 
   670  0E94                     	;# 
   671  0E95                     	;# 
   672  0E9C                     	;# 
   673  0E9D                     	;# 
   674  0E9E                     	;# 
   675  0E9F                     	;# 
   676  0EA0                     	;# 
   677  0EA1                     	;# 
   678  0EA2                     	;# 
   679  0EA3                     	;# 
   680  0EA4                     	;# 
   681  0EA5                     	;# 
   682  0EA6                     	;# 
   683  0EA7                     	;# 
   684  0F9E                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  008C                     	;# 
   724  008D                     	;# 
   725  008E                     	;# 
   726  0091                     	;# 
   727  0092                     	;# 
   728  0093                     	;# 
   729  0095                     	;# 
   730  0096                     	;# 
   731  0097                     	;# 
   732  0098                     	;# 
   733  0099                     	;# 
   734  009A                     	;# 
   735  009B                     	;# 
   736  009B                     	;# 
   737  009C                     	;# 
   738  009D                     	;# 
   739  009E                     	;# 
   740  009F                     	;# 
   741  010C                     	;# 
   742  010D                     	;# 
   743  010E                     	;# 
   744  0116                     	;# 
   745  0117                     	;# 
   746  011C                     	;# 
   747  018C                     	;# 
   748  018D                     	;# 
   749  018E                     	;# 
   750  0191                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0197                     	;# 
   759  020C                     	;# 
   760  020D                     	;# 
   761  020E                     	;# 
   762  0211                     	;# 
   763  0211                     	;# 
   764  0212                     	;# 
   765  0212                     	;# 
   766  0213                     	;# 
   767  0213                     	;# 
   768  0214                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0216                     	;# 
   775  0216                     	;# 
   776  0217                     	;# 
   777  0217                     	;# 
   778  028C                     	;# 
   779  028D                     	;# 
   780  028E                     	;# 
   781  0291                     	;# 
   782  0291                     	;# 
   783  0292                     	;# 
   784  0293                     	;# 
   785  0293                     	;# 
   786  0298                     	;# 
   787  0298                     	;# 
   788  0299                     	;# 
   789  029A                     	;# 
   790  029A                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0391                     	;# 
   798  0392                     	;# 
   799  0393                     	;# 
   800  0394                     	;# 
   801  0395                     	;# 
   802  0396                     	;# 
   803  0397                     	;# 
   804  0398                     	;# 
   805  0399                     	;# 
   806  0511                     	;# 
   807  0515                     	;# 
   808  0E0F                     	;# 
   809  0E10                     	;# 
   810  0E11                     	;# 
   811  0E12                     	;# 
   812  0E13                     	;# 
   813  0E14                     	;# 
   814  0E15                     	;# 
   815  0E20                     	;# 
   816  0E21                     	;# 
   817  0E22                     	;# 
   818  0E90                     	;# 
   819  0E91                     	;# 
   820  0E92                     	;# 
   821  0E94                     	;# 
   822  0E95                     	;# 
   823  0E9C                     	;# 
   824  0E9D                     	;# 
   825  0E9E                     	;# 
   826  0E9F                     	;# 
   827  0EA0                     	;# 
   828  0EA1                     	;# 
   829  0EA2                     	;# 
   830  0EA3                     	;# 
   831  0EA4                     	;# 
   832  0EA5                     	;# 
   833  0EA6                     	;# 
   834  0EA7                     	;# 
   835  0F9E                     	;# 
   836  0FE4                     	;# 
   837  0FE5                     	;# 
   838  0FE6                     	;# 
   839  0FE7                     	;# 
   840  0FE8                     	;# 
   841  0FE9                     	;# 
   842  0FEA                     	;# 
   843  0FEB                     	;# 
   844  0FED                     	;# 
   845  0FEE                     	;# 
   846  0FEF                     	;# 
   847  0000                     	;# 
   848  0001                     	;# 
   849  0002                     	;# 
   850  0003                     	;# 
   851  0004                     	;# 
   852  0005                     	;# 
   853  0006                     	;# 
   854  0007                     	;# 
   855  0008                     	;# 
   856  0009                     	;# 
   857  000A                     	;# 
   858  000B                     	;# 
   859  000C                     	;# 
   860  000D                     	;# 
   861  000E                     	;# 
   862  0011                     	;# 
   863  0012                     	;# 
   864  0013                     	;# 
   865  0015                     	;# 
   866  0016                     	;# 
   867  0016                     	;# 
   868  0017                     	;# 
   869  0018                     	;# 
   870  0019                     	;# 
   871  001A                     	;# 
   872  001B                     	;# 
   873  001C                     	;# 
   874  008C                     	;# 
   875  008D                     	;# 
   876  008E                     	;# 
   877  0091                     	;# 
   878  0092                     	;# 
   879  0093                     	;# 
   880  0095                     	;# 
   881  0096                     	;# 
   882  0097                     	;# 
   883  0098                     	;# 
   884  0099                     	;# 
   885  009A                     	;# 
   886  009B                     	;# 
   887  009B                     	;# 
   888  009C                     	;# 
   889  009D                     	;# 
   890  009E                     	;# 
   891  009F                     	;# 
   892  010C                     	;# 
   893  010D                     	;# 
   894  010E                     	;# 
   895  0116                     	;# 
   896  0117                     	;# 
   897  011C                     	;# 
   898  018C                     	;# 
   899  018D                     	;# 
   900  018E                     	;# 
   901  0191                     	;# 
   902  0191                     	;# 
   903  0192                     	;# 
   904  0193                     	;# 
   905  0193                     	;# 
   906  0194                     	;# 
   907  0195                     	;# 
   908  0196                     	;# 
   909  0197                     	;# 
   910  020C                     	;# 
   911  020D                     	;# 
   912  020E                     	;# 
   913  0211                     	;# 
   914  0211                     	;# 
   915  0212                     	;# 
   916  0212                     	;# 
   917  0213                     	;# 
   918  0213                     	;# 
   919  0214                     	;# 
   920  0214                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0216                     	;# 
   926  0216                     	;# 
   927  0217                     	;# 
   928  0217                     	;# 
   929  028C                     	;# 
   930  028D                     	;# 
   931  028E                     	;# 
   932  0291                     	;# 
   933  0291                     	;# 
   934  0292                     	;# 
   935  0293                     	;# 
   936  0293                     	;# 
   937  0298                     	;# 
   938  0298                     	;# 
   939  0299                     	;# 
   940  029A                     	;# 
   941  029A                     	;# 
   942  030C                     	;# 
   943  030D                     	;# 
   944  030E                     	;# 
   945  038C                     	;# 
   946  038D                     	;# 
   947  038E                     	;# 
   948  0391                     	;# 
   949  0392                     	;# 
   950  0393                     	;# 
   951  0394                     	;# 
   952  0395                     	;# 
   953  0396                     	;# 
   954  0397                     	;# 
   955  0398                     	;# 
   956  0399                     	;# 
   957  0511                     	;# 
   958  0515                     	;# 
   959  0E0F                     	;# 
   960  0E10                     	;# 
   961  0E11                     	;# 
   962  0E12                     	;# 
   963  0E13                     	;# 
   964  0E14                     	;# 
   965  0E15                     	;# 
   966  0E20                     	;# 
   967  0E21                     	;# 
   968  0E22                     	;# 
   969  0E90                     	;# 
   970  0E91                     	;# 
   971  0E92                     	;# 
   972  0E94                     	;# 
   973  0E95                     	;# 
   974  0E9C                     	;# 
   975  0E9D                     	;# 
   976  0E9E                     	;# 
   977  0E9F                     	;# 
   978  0EA0                     	;# 
   979  0EA1                     	;# 
   980  0EA2                     	;# 
   981  0EA3                     	;# 
   982  0EA4                     	;# 
   983  0EA5                     	;# 
   984  0EA6                     	;# 
   985  0EA7                     	;# 
   986  0F9E                     	;# 
   987  0FE4                     	;# 
   988  0FE5                     	;# 
   989  0FE6                     	;# 
   990  0FE7                     	;# 
   991  0FE8                     	;# 
   992  0FE9                     	;# 
   993  0FEA                     	;# 
   994  0FEB                     	;# 
   995  0FED                     	;# 
   996  0FEE                     	;# 
   997  0FEF                     	;# 
   998                           
   999                           	psect	idataBANK0
  1000  07F7                     __pidataBANK0:	
  1001                           
  1002                           ;initializer for _Decimal
  1003  07F7  3401               	retlw	1
  1004                           
  1005                           	psect	idataBANK1
  1006  07B7                     __pidataBANK1:	
  1007                           
  1008                           ;initializer for _Digits
  1009  07B7  34FC               	retlw	252
  1010  07B8  3460               	retlw	96
  1011  07B9  34DA               	retlw	218
  1012  07BA  34F2               	retlw	242
  1013  07BB  3466               	retlw	102
  1014  07BC  34B6               	retlw	182
  1015  07BD  343E               	retlw	62
  1016  07BE  34E0               	retlw	224
  1017  07BF  34FE               	retlw	254
  1018  07C0  34E6               	retlw	230
  1019                           
  1020                           	psect	nvBANK1
  1021  00D9                     __pnvBANK1:	
  1022  00D9                     _TMR2_InterruptHandler:	
  1023  00D9                     	ds	2
  1024  001C                     _T2CONbits	set	28
  1025  001A                     _TMR2	set	26
  1026  001B                     _PR2	set	27
  1027  001C                     _T2CON	set	28
  1028  0012                     _PIR2bits	set	18
  1029  000B                     _INTCONbits	set	11
  1030  0011                     _PIR1bits	set	17
  1031  005F                     _GIE	set	95
  1032  0092                     _PIE2bits	set	146
  1033  0097                     _WDTCON	set	151
  1034  0098                     _OSCTUNE	set	152
  1035  009A                     _OSCSTAT	set	154
  1036  0099                     _OSCCON	set	153
  1037  0091                     _PIE1bits	set	145
  1038  0095                     _OPTION_REGbits	set	149
  1039  008E                     _TRISC	set	142
  1040  008D                     _TRISB	set	141
  1041  008C                     _TRISA	set	140
  1042  010E                     _LATCbits	set	270
  1043  010E                     _LATC	set	270
  1044  010D                     _LATB	set	269
  1045  010C                     _LATA	set	268
  1046  018C                     _ANSELA	set	396
  1047  018D                     _ANSELB	set	397
  1048  018E                     _ANSELC	set	398
  1049  0211                     _SSP1BUF	set	529
  1050  0216                     _SSP1CON2bits	set	534
  1051  0215                     _SSP1CON1bits	set	533
  1052  0212                     _SSP1ADD	set	530
  1053  0217                     _SSP1CON3	set	535
  1054  0215                     _SSP1CON1	set	533
  1055  0214                     _SSP1STAT	set	532
  1056  020E                     _WPUC	set	526
  1057  020C                     _WPUA	set	524
  1058  020D                     _WPUB	set	525
  1059  028E                     _ODCONC	set	654
  1060  028D                     _ODCONB	set	653
  1061  028C                     _ODCONA	set	652
  1062  0E20                     _SSPCLKPPSbits	set	3616
  1063  0E21                     _SSPDATPPSbits	set	3617
  1064  0E0F                     _PPSLOCKbits	set	3599
  1065  0E0F                     _PPSLOCK	set	3599
  1066  0E9E                     _RB6PPSbits	set	3742
  1067  0E9C                     _RB4PPSbits	set	3740
  1068                           
  1069                           ; #config settings
  1070  0000                     
  1071                           	psect	cinit
  1072  0026                     start_initialization:	
  1073  0026                     __initialization:	
  1074                           
  1075                           ; Initialize objects allocated to BANK0
  1076  0026  27F7               	fcall	__pidataBANK0	;fetch initializer
  1077  0027  00EE               	movwf	__pdataBANK0& (0+127)
  1078                           
  1079                           ; Initialize objects allocated to BANK1
  1080  0028  30B7               	movlw	low __pidataBANK1
  1081  0029  0084               	movwf	4
  1082  002A  3087               	movlw	(high __pidataBANK1)| (0+128)
  1083  002B  0085               	movwf	5
  1084  002C  30CF               	movlw	low __pdataBANK1
  1085  002D  0086               	movwf	6
  1086  002E  3000               	movlw	high __pdataBANK1
  1087  002F  0087               	movwf	7
  1088  0030  300A               	movlw	10
  1089  0031  27D4               	fcall	init_ram
  1090                           
  1091                           ; Clear objects allocated to COMMON
  1092  0032  01F0               	clrf	__pbssCOMMON& (0+127)
  1093  0033  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1094  0034  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1095  0035  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1096  0036  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1097  0037  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1098                           
  1099                           ; Clear objects allocated to BANK0
  1100  0038  01EB               	clrf	__pbssBANK0& (0+127)
  1101  0039  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  1102  003A  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  1103                           
  1104                           ; Clear objects allocated to BANK1
  1105  003B  30A0               	movlw	low __pbssBANK1
  1106  003C  0084               	movwf	4
  1107  003D  3000               	movlw	high __pbssBANK1
  1108  003E  0085               	movwf	5
  1109  003F  3022               	movlw	34
  1110  0040  27DA               	fcall	clear_ram0
  1111  0041                     end_of_initialization:	
  1112                           ;End of C runtime variable initialization code
  1113                           
  1114  0041                     __end_of__initialization:	
  1115  0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1116  0042  0020               	movlb	0
  1117  0043  2B2E               	ljmp	_main	;jump to C main() function
  1118                           
  1119                           	psect	bssCOMMON
  1120  0070                     __pbssCOMMON:	
  1121  0070                     _p_i2c_current:	
  1122  0070                     	ds	1
  1123  0071                     _p_i2c_trb_current:	
  1124  0071                     	ds	1
  1125  0072                     _i2c_trb_count:	
  1126  0072                     	ds	1
  1127  0073                     _i2c_state:	
  1128  0073                     	ds	1
  1129  0074                     I2C_ISR@i2c_address:	
  1130  0074                     	ds	2
  1131                           
  1132                           	psect	bssBANK0
  1133  006B                     __pbssBANK0:	
  1134  006B                     I2C_ISR@i2c_10bit_address_restart:	
  1135  006B                     	ds	1
  1136  006C                     I2C_ISR@i2c_bytes_left:	
  1137  006C                     	ds	1
  1138  006D                     I2C_ISR@pi2c_buf_ptr:	
  1139  006D                     	ds	1
  1140                           
  1141                           	psect	dataBANK0
  1142  006E                     __pdataBANK0:	
  1143  006E                     _Decimal:	
  1144  006E                     	ds	1
  1145                           
  1146                           	psect	bssBANK1
  1147  00A0                     __pbssBANK1:	
  1148  00A0                     __bmp280_calib:	
  1149  00A0                     	ds	6
  1150  00A6                     _i2c_object:	
  1151  00A6                     	ds	5
  1152  00AB                     _t_fine:	
  1153  00AB                     	ds	4
  1154  00AF                     BMP280_read24_le@F2349:	
  1155  00AF                     	ds	3
  1156  00B2                     TMR2_ISR@CountCallBack:	
  1157  00B2                     	ds	2
  1158  00B4                     _curTemp:	
  1159  00B4                     	ds	2
  1160  00B6                     _checkTemp:	
  1161  00B6                     	ds	1
  1162  00B7                     I2C_MasterRead@trBlock:	
  1163  00B7                     	ds	4
  1164  00BB                     I2C_MasterWrite@trBlock:	
  1165  00BB                     	ds	4
  1166  00BF                     _i2c_tr_queue:	
  1167  00BF                     	ds	3
  1168                           
  1169                           	psect	dataBANK1
  1170  00CF                     __pdataBANK1:	
  1171  00CF                     _Digits:	
  1172  00CF                     	ds	10
  1173                           
  1174                           	psect	inittext
  1175  07D4                     init_ram:	
  1176  07D4  00FE               	movwf	126
  1177  07D5                     initloop:	
  1178  07D5  0012               	moviw fsr0++
  1179  07D6  001E               	movwi fsr1++
  1180  07D7  0BFE               	decfsz	126,f
  1181  07D8  2FD5               	goto	initloop
  1182  07D9  3400               	retlw	0
  1183                           
  1184                           	psect	clrtext
  1185  07DA                     clear_ram0:	
  1186                           ;	Called with FSR0 containing the base address, and
  1187                           ;	WREG with the size to clear
  1188                           
  1189  07DA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1190  07DB                     clrloop0:	
  1191  07DB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1192  07DC  3101               	addfsr 0,1
  1193  07DD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1194  07DE  2FDB               	goto	clrloop0	;have we reached the end yet?
  1195  07DF  3400               	retlw	0	;all done for this memory range, return
  1196                           
  1197                           	psect	cstackBANK1
  1198  00C2                     __pcstackBANK1:	
  1199  00C2                     _BMP280_readTemperature$1161:	
  1200                           
  1201                           ; 4 bytes @ 0x0
  1202  00C2                     	ds	4
  1203  00C6                     BMP280_readTemperature@T:	
  1204                           
  1205                           ; 2 bytes @ 0x4
  1206  00C6                     	ds	2
  1207  00C8                     BMP280_readTemperature@adc_T:	
  1208                           
  1209                           ; 4 bytes @ 0x6
  1210  00C8                     	ds	4
  1211  00CC                     _main$1162:	
  1212                           
  1213                           ; 2 bytes @ 0xA
  1214  00CC                     	ds	2
  1215  00CE                     main@chipId:	
  1216                           
  1217                           ; 1 bytes @ 0xC
  1218  00CE                     	ds	1
  1219                           
  1220                           	psect	cstackCOMMON
  1221  0076                     __pcstackCOMMON:	
  1222  0076                     ?_I2C_Stop:	
  1223  0076                     ??_I2C_Stop:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0076                     ?_I2C_FunctionComplete:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0076                     ??_I2C_FunctionComplete:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0076                     ?_OSCILLATOR_Initialize:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0076                     ?_WDT_Initialize:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0076                     ?_TMR2_Initialize:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0076                     ?_TMR2_ISR:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0076                     ??_TMR2_ISR:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0076                     ?_TMR2_StartTimer:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0076                     ?_TMR2_DefaultInterruptHandler:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0076                     ??_TMR2_DefaultInterruptHandler:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256  0076                     ?_TMR2_CallBack:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0076                     ??_TMR2_CallBack:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0076                     ?_PIN_MANAGER_Initialize:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0076                     ?_I2C_Initialize:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0076                     ?_I2C_ISR:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0076                     ?_I2C_BusCollisionISR:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0076                     ??_I2C_BusCollisionISR:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0076                     ?_SYSTEM_Initialize:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0076                     ?_INTERRUPT_InterruptManager:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0076                     ?_BMP280_read8:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0076                     ?_BMP280_readCoefficients:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0076                     ?_ShiftOut:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0076                     ?_TickISR:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0076                     ??_TickISR:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0076                     ?_main:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301                           
  1302                           ; 1 bytes @ 0x0
  1303  0076                     	ds	1
  1304  0077                     I2C_Stop@completion_code:	
  1305                           
  1306                           ; 1 bytes @ 0x1
  1307  0077                     	ds	1
  1308  0078                     ??_I2C_ISR:	
  1309                           
  1310                           ; 1 bytes @ 0x2
  1311  0078                     	ds	4
  1312  007C                     ??_INTERRUPT_InterruptManager:	
  1313                           
  1314                           	psect	cstackBANK0
  1315  0020                     __pcstackBANK0:	
  1316                           ; 1 bytes @ 0x6
  1317                           
  1318  0020                     ?_I2C_MasterWriteTRBBuild:	
  1319  0020                     ?_I2C_MasterTRBInsert:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0020                     ?_I2C_MasterReadTRBBuild:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0020                     ??_OSCILLATOR_Initialize:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0020                     ??_WDT_Initialize:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0020                     ?_TMR2_SetInterruptHandler:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0020                     ??_TMR2_StartTimer:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0020                     ??_PIN_MANAGER_Initialize:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0020                     ??_I2C_Initialize:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0020                     ??_ShiftOut:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0020                     ?___wmul:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0020                     ?___lwmod:	
  1350                           ; 2 bytes @ 0x0
  1351                           
  1352  0020                     ?___lmul:	
  1353                           ; 2 bytes @ 0x0
  1354                           
  1355  0020                     PIN_MANAGER_Initialize@state:	
  1356                           ; 4 bytes @ 0x0
  1357                           
  1358  0020                     I2C_MasterTRBInsert@ptrb_list:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0020                     I2C_MasterReadTRBBuild@pdata:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0020                     I2C_MasterWriteTRBBuild@pdata:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0020                     ___wmul@multiplier:	
  1371                           ; 2 bytes @ 0x0
  1372                           
  1373  0020                     ___lwmod@divisor:	
  1374                           ; 2 bytes @ 0x0
  1375                           
  1376  0020                     ___lmul@multiplier:	
  1377                           ; 2 bytes @ 0x0
  1378                           
  1379                           
  1380                           ; 4 bytes @ 0x0
  1381  0020                     	ds	1
  1382  0021                     I2C_MasterTRBInsert@pflag:	
  1383  0021                     I2C_MasterReadTRBBuild@length:	
  1384                           ; 1 bytes @ 0x1
  1385                           
  1386  0021                     I2C_MasterWriteTRBBuild@length:	
  1387                           ; 1 bytes @ 0x1
  1388                           
  1389  0021                     ShiftOut@thisByte:	
  1390                           ; 1 bytes @ 0x1
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x1
  1394  0021                     	ds	1
  1395  0022                     ??_I2C_MasterTRBInsert:	
  1396  0022                     ??_TMR2_Initialize:	
  1397                           ; 1 bytes @ 0x2
  1398                           
  1399  0022                     ??_TMR2_SetInterruptHandler:	
  1400                           ; 1 bytes @ 0x2
  1401                           
  1402  0022                     ??_SYSTEM_Initialize:	
  1403                           ; 1 bytes @ 0x2
  1404                           
  1405  0022                     ShiftOut@i:	
  1406                           ; 1 bytes @ 0x2
  1407                           
  1408  0022                     I2C_MasterReadTRBBuild@address:	
  1409                           ; 1 bytes @ 0x2
  1410                           
  1411  0022                     I2C_MasterWriteTRBBuild@address:	
  1412                           ; 2 bytes @ 0x2
  1413                           
  1414  0022                     ___wmul@multiplicand:	
  1415                           ; 2 bytes @ 0x2
  1416                           
  1417  0022                     ___lwmod@dividend:	
  1418                           ; 2 bytes @ 0x2
  1419                           
  1420                           
  1421                           ; 2 bytes @ 0x2
  1422  0022                     	ds	1
  1423  0023                     I2C_MasterTRBInsert@count:	
  1424                           
  1425                           ; 1 bytes @ 0x3
  1426  0023                     	ds	1
  1427  0024                     ??_I2C_MasterWriteTRBBuild:	
  1428  0024                     ??_I2C_MasterReadTRBBuild:	
  1429                           ; 1 bytes @ 0x4
  1430                           
  1431  0024                     ??___wmul:	
  1432                           ; 1 bytes @ 0x4
  1433                           
  1434  0024                     ??___lwmod:	
  1435                           ; 1 bytes @ 0x4
  1436                           
  1437  0024                     ___wmul@product:	
  1438                           ; 1 bytes @ 0x4
  1439                           
  1440  0024                     ___lmul@multiplicand:	
  1441                           ; 2 bytes @ 0x4
  1442                           
  1443                           
  1444                           ; 4 bytes @ 0x4
  1445  0024                     	ds	1
  1446  0025                     ___lwmod@counter:	
  1447                           
  1448                           ; 1 bytes @ 0x5
  1449  0025                     	ds	1
  1450  0026                     ?___lwdiv:	
  1451  0026                     I2C_MasterReadTRBBuild@ptrb:	
  1452                           ; 2 bytes @ 0x6
  1453                           
  1454  0026                     I2C_MasterWriteTRBBuild@ptrb:	
  1455                           ; 1 bytes @ 0x6
  1456                           
  1457  0026                     ___lwdiv@divisor:	
  1458                           ; 1 bytes @ 0x6
  1459                           
  1460                           
  1461                           ; 2 bytes @ 0x6
  1462  0026                     	ds	1
  1463  0027                     ?_I2C_MasterWrite:	
  1464  0027                     ?_I2C_MasterRead:	
  1465                           ; 1 bytes @ 0x7
  1466                           
  1467  0027                     I2C_MasterWrite@length:	
  1468                           ; 1 bytes @ 0x7
  1469                           
  1470  0027                     I2C_MasterRead@length:	
  1471                           ; 1 bytes @ 0x7
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x7
  1475  0027                     	ds	1
  1476  0028                     ??___lmul:	
  1477  0028                     I2C_MasterWrite@address:	
  1478                           ; 1 bytes @ 0x8
  1479                           
  1480  0028                     I2C_MasterRead@address:	
  1481                           ; 2 bytes @ 0x8
  1482                           
  1483  0028                     ___lwdiv@dividend:	
  1484                           ; 2 bytes @ 0x8
  1485                           
  1486  0028                     ___lmul@product:	
  1487                           ; 2 bytes @ 0x8
  1488                           
  1489                           
  1490                           ; 4 bytes @ 0x8
  1491  0028                     	ds	2
  1492  002A                     ??___lwdiv:	
  1493  002A                     I2C_MasterWrite@pflag:	
  1494                           ; 1 bytes @ 0xA
  1495                           
  1496  002A                     I2C_MasterRead@pflag:	
  1497                           ; 1 bytes @ 0xA
  1498                           
  1499                           
  1500                           ; 1 bytes @ 0xA
  1501  002A                     	ds	1
  1502  002B                     ??_I2C_MasterWrite:	
  1503  002B                     ??_I2C_MasterRead:	
  1504                           ; 1 bytes @ 0xB
  1505                           
  1506  002B                     ___lwdiv@counter:	
  1507                           ; 1 bytes @ 0xB
  1508                           
  1509                           
  1510                           ; 1 bytes @ 0xB
  1511  002B                     	ds	1
  1512  002C                     ___lwdiv@quotient:	
  1513                           
  1514                           ; 2 bytes @ 0xC
  1515  002C                     	ds	1
  1516  002D                     I2C_MasterWrite@pdata:	
  1517  002D                     I2C_MasterRead@pdata:	
  1518                           ; 1 bytes @ 0xD
  1519                           
  1520                           
  1521                           ; 1 bytes @ 0xD
  1522  002D                     	ds	1
  1523  002E                     ?_BMP280_Write8:	
  1524  002E                     ?_BMP280_Read:	
  1525                           ; 1 bytes @ 0xE
  1526                           
  1527  002E                     ?_DisplayNum:	
  1528                           ; 1 bytes @ 0xE
  1529                           
  1530  002E                     BMP280_Write8@pData:	
  1531                           ; 1 bytes @ 0xE
  1532                           
  1533  002E                     BMP280_Read@pData:	
  1534                           ; 1 bytes @ 0xE
  1535                           
  1536  002E                     DisplayNum@val:	
  1537                           ; 1 bytes @ 0xE
  1538                           
  1539                           
  1540                           ; 2 bytes @ 0xE
  1541  002E                     	ds	1
  1542  002F                     ??_BMP280_Write8:	
  1543  002F                     BMP280_Read@nCount:	
  1544                           ; 1 bytes @ 0xF
  1545                           
  1546                           
  1547                           ; 2 bytes @ 0xF
  1548  002F                     	ds	1
  1549  0030                     DisplayNum@decPos:	
  1550                           
  1551                           ; 1 bytes @ 0x10
  1552  0030                     	ds	1
  1553  0031                     ??_BMP280_Read:	
  1554  0031                     ??_DisplayNum:	
  1555                           ; 1 bytes @ 0x11
  1556                           
  1557  0031                     BMP280_Write8@address:	
  1558                           ; 1 bytes @ 0x11
  1559                           
  1560                           
  1561                           ; 1 bytes @ 0x11
  1562  0031                     	ds	1
  1563  0032                     BMP280_Read@ret:	
  1564  0032                     DisplayNum@outChar:	
  1565                           ; 1 bytes @ 0x12
  1566                           
  1567  0032                     BMP280_Write8@writeBuffer:	
  1568                           ; 1 bytes @ 0x12
  1569                           
  1570                           
  1571                           ; 2 bytes @ 0x12
  1572  0032                     	ds	1
  1573  0033                     DisplayNum@i:	
  1574  0033                     BMP280_Read@writeBuffer:	
  1575                           ; 1 bytes @ 0x13
  1576                           
  1577                           
  1578                           ; 3 bytes @ 0x13
  1579  0033                     	ds	1
  1580  0034                     BMP280_Write8@status:	
  1581                           
  1582                           ; 1 bytes @ 0x14
  1583  0034                     	ds	2
  1584  0036                     BMP280_Read@address:	
  1585                           
  1586                           ; 1 bytes @ 0x16
  1587  0036                     	ds	1
  1588  0037                     BMP280_Read@counter:	
  1589                           
  1590                           ; 2 bytes @ 0x17
  1591  0037                     	ds	2
  1592  0039                     BMP280_Read@pD:	
  1593                           
  1594                           ; 1 bytes @ 0x19
  1595  0039                     	ds	1
  1596  003A                     BMP280_Read@timeOut:	
  1597                           
  1598                           ; 2 bytes @ 0x1A
  1599  003A                     	ds	2
  1600  003C                     BMP280_Read@status:	
  1601                           
  1602                           ; 1 bytes @ 0x1C
  1603  003C                     	ds	1
  1604  003D                     ??_BMP280_read8:	
  1605  003D                     ?_BMP280_read16:	
  1606                           ; 1 bytes @ 0x1D
  1607                           
  1608  003D                     ?_BMP280_read24_le:	
  1609                           ; 2 bytes @ 0x1D
  1610                           
  1611                           
  1612                           ; 4 bytes @ 0x1D
  1613  003D                     	ds	1
  1614  003E                     BMP280_read8@reg:	
  1615                           
  1616                           ; 1 bytes @ 0x1E
  1617  003E                     	ds	1
  1618  003F                     ??_BMP280_read16:	
  1619  003F                     BMP280_read8@value:	
  1620                           ; 1 bytes @ 0x1F
  1621                           
  1622                           
  1623                           ; 1 bytes @ 0x1F
  1624  003F                     	ds	1
  1625  0040                     BMP280_read16@reg:	
  1626                           
  1627                           ; 1 bytes @ 0x20
  1628  0040                     	ds	1
  1629  0041                     ??_BMP280_read24_le:	
  1630  0041                     BMP280_read16@value:	
  1631                           ; 1 bytes @ 0x21
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0x21
  1635  0041                     	ds	2
  1636  0043                     ?_BMP280_readS16:	
  1637                           
  1638                           ; 2 bytes @ 0x23
  1639  0043                     	ds	3
  1640  0046                     ??_BMP280_readS16:	
  1641  0046                     BMP280_readS16@reg:	
  1642                           ; 1 bytes @ 0x26
  1643                           
  1644                           
  1645                           ; 1 bytes @ 0x26
  1646  0046                     	ds	1
  1647  0047                     ??_BMP280_readCoefficients:	
  1648                           
  1649                           ; 1 bytes @ 0x27
  1650  0047                     	ds	6
  1651  004D                     BMP280_read24_le@reg:	
  1652                           
  1653                           ; 1 bytes @ 0x2D
  1654  004D                     	ds	1
  1655  004E                     BMP280_read24_le@value:	
  1656                           
  1657                           ; 3 bytes @ 0x2E
  1658  004E                     	ds	3
  1659  0051                     ?_BMP280_readTemperature:	
  1660                           
  1661                           ; 2 bytes @ 0x31
  1662  0051                     	ds	2
  1663  0053                     ??_BMP280_readTemperature:	
  1664                           
  1665                           ; 1 bytes @ 0x33
  1666  0053                     	ds	23
  1667  006A                     ??_main:	
  1668                           
  1669                           ; 1 bytes @ 0x4A
  1670  006A                     	ds	1
  1671                           
  1672                           	psect	maintext
  1673  032E                     __pmaintext:	
  1674 ;;
  1675 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1676 ;;
  1677 ;; *************** function _main *****************
  1678 ;; Defined at:
  1679 ;;		line 442 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  chipId          1   12[BANK1 ] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : B1F/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1693 ;;      Params:         0       0       0       0
  1694 ;;      Locals:         0       0       3       0
  1695 ;;      Temps:          0       1       0       0
  1696 ;;      Totals:         0       1       3       0
  1697 ;;Total ram usage:        4 bytes
  1698 ;; Hardware stack levels required when called:   10
  1699 ;; This function calls:
  1700 ;;		_BMP280_Write8
  1701 ;;		_BMP280_read8
  1702 ;;		_BMP280_readCoefficients
  1703 ;;		_BMP280_readTemperature
  1704 ;;		_DisplayNum
  1705 ;;		_I2C_Initialize
  1706 ;;		_SYSTEM_Initialize
  1707 ;;		_TMR2_Initialize
  1708 ;;		_TMR2_SetInterruptHandler
  1709 ;;		_TMR2_StartTimer
  1710 ;;		___lwdiv
  1711 ;; This function is called by:
  1712 ;;		Startup code after reset
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _main
  1718  032E                     _main:	
  1719                           
  1720                           ;main.c: 445: SYSTEM_Initialize();
  1721                           
  1722                           ;incstack = 0
  1723                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1724  032E  27E0               	fcall	_SYSTEM_Initialize
  1725                           
  1726                           ;main.c: 446: I2C_Initialize();
  1727  032F  2719               	fcall	_I2C_Initialize
  1728                           
  1729                           ;main.c: 447: TMR2_Initialize();
  1730  0330  2770               	fcall	_TMR2_Initialize
  1731                           
  1732                           ;main.c: 448: curTemp=0;
  1733  0331  0021               	movlb	1	; select bank1
  1734  0332  01B4               	clrf	_curTemp^(0+128)
  1735  0333  01B5               	clrf	(_curTemp+1)^(0+128)
  1736                           
  1737                           ;main.c: 449: checkTemp=0;
  1738  0334  01B6               	clrf	_checkTemp^(0+128)
  1739                           
  1740                           ;main.c: 454: (INTCONbits.GIE = 1);
  1741  0335  178B               	bsf	11,7	;volatile
  1742                           
  1743                           ;main.c: 457: (INTCONbits.PEIE = 1);
  1744  0336  170B               	bsf	11,6	;volatile
  1745                           
  1746                           ;main.c: 464: do { LATCbits.LATC0 = 1; } while(0);
  1747  0337  0022               	movlb	2	; select bank2
  1748  0338  140E               	bsf	14,0	;volatile
  1749                           
  1750                           ;main.c: 465: do { LATCbits.LATC1 = 1; } while(0);
  1751  0339  148E               	bsf	14,1	;volatile
  1752                           
  1753                           ;main.c: 466: do { LATCbits.LATC2 = 0; } while(0);
  1754  033A  110E               	bcf	14,2	;volatile
  1755                           
  1756                           ;main.c: 473: uint8_t chipId = BMP280_read8(BMP280_REGISTER_CHIPID);
  1757  033B  30D0               	movlw	208
  1758  033C  2791               	fcall	_BMP280_read8
  1759  033D  0020               	movlb	0	; select bank0
  1760  033E  00EA               	movwf	??_main
  1761  033F  086A               	movf	??_main,w
  1762  0340  0021               	movlb	1	; select bank1
  1763  0341  00CE               	movwf	main@chipId^(0+128)
  1764                           
  1765                           ;main.c: 474: if( chipId != (0x58) || BMP280_Write8( BMP280_REGISTER_CONTROL, 0x3f) != 0
      +                           )
  1766  0342  3058               	movlw	88
  1767  0343  064E               	xorwf	main@chipId^(0+128),w
  1768  0344  1D03               	btfss	3,2
  1769  0345  2B50               	goto	l2489
  1770  0346  303F               	movlw	63
  1771  0347  0020               	movlb	0	; select bank0
  1772  0348  00EA               	movwf	??_main
  1773  0349  086A               	movf	??_main,w
  1774  034A  00AE               	movwf	BMP280_Write8@pData
  1775  034B  30F4               	movlw	244
  1776  034C  269A               	fcall	_BMP280_Write8
  1777  034D  3A00               	xorlw	0
  1778  034E  1903               	skipnz
  1779  034F  2B5B               	goto	l2491
  1780  0350                     l2489:	
  1781                           ;main.c: 475: {;main.c: 476: while(1){DisplayNum(6660,0xf);};
  1782                           
  1783  0350  3004               	movlw	4
  1784  0351  0020               	movlb	0	; select bank0
  1785  0352  00AE               	movwf	DisplayNum@val
  1786  0353  301A               	movlw	26
  1787  0354  00AF               	movwf	DisplayNum@val+1
  1788  0355  300F               	movlw	15
  1789  0356  00EA               	movwf	??_main
  1790  0357  086A               	movf	??_main,w
  1791  0358  00B0               	movwf	DisplayNum@decPos
  1792  0359  2419               	fcall	_DisplayNum
  1793  035A  2B50               	goto	l2489
  1794  035B                     l2491:	
  1795                           
  1796                           ;main.c: 477: };main.c: 478: BMP280_readCoefficients();
  1797  035B  26DE               	fcall	_BMP280_readCoefficients
  1798                           
  1799                           ;main.c: 480: curTemp = 0;
  1800  035C  0021               	movlb	1	; select bank1
  1801  035D  01B4               	clrf	_curTemp^(0+128)
  1802  035E  01B5               	clrf	(_curTemp+1)^(0+128)
  1803                           
  1804                           ;main.c: 482: TMR2_SetInterruptHandler( TickISR );
  1805  035F  30F0               	movlw	low _TickISR
  1806  0360  0020               	movlb	0	; select bank0
  1807  0361  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1808  0362  3007               	movlw	high _TickISR
  1809  0363  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1810  0364  27CB               	fcall	_TMR2_SetInterruptHandler
  1811                           
  1812                           ;main.c: 483: TMR2_StartTimer();
  1813  0365  27F4               	fcall	_TMR2_StartTimer
  1814  0366                     l2499:	
  1815                           ;main.c: 485: while (1)
  1816                           
  1817                           
  1818                           ;main.c: 486: {;main.c: 488: if(checkTemp)
  1819  0366  0021               	movlb	1	; select bank1
  1820  0367  0836               	movf	_checkTemp^(0+128),w
  1821  0368  1903               	btfsc	3,2
  1822  0369  2B74               	goto	l2505
  1823                           
  1824                           ;main.c: 489: {;main.c: 490: curTemp = BMP280_readTemperature();
  1825  036A  2044               	fcall	_BMP280_readTemperature
  1826  036B  0020               	movlb	0	; select bank0
  1827  036C  0852               	movf	?_BMP280_readTemperature+1,w
  1828  036D  0021               	movlb	1	; select bank1
  1829  036E  00B5               	movwf	(_curTemp+1)^(0+128)
  1830  036F  0020               	movlb	0	; select bank0
  1831  0370  0851               	movf	?_BMP280_readTemperature,w
  1832  0371  0021               	movlb	1	; select bank1
  1833  0372  00B4               	movwf	_curTemp^(0+128)
  1834                           
  1835                           ;main.c: 491: checkTemp=0;
  1836  0373  01B6               	clrf	_checkTemp^(0+128)
  1837  0374                     l2505:	
  1838                           
  1839                           ;main.c: 492: };main.c: 493: if( curTemp > 9999 )
  1840  0374  3027               	movlw	39
  1841  0375  0235               	subwf	(_curTemp+1)^(0+128),w
  1842  0376  3010               	movlw	16
  1843  0377  1903               	skipnz
  1844  0378  0234               	subwf	_curTemp^(0+128),w
  1845  0379  1C03               	skipc
  1846  037A  2B9C               	goto	l2511
  1847                           
  1848                           ;main.c: 494: DisplayNum(curTemp/10, 1);
  1849  037B  300A               	movlw	10
  1850  037C  0020               	movlb	0	; select bank0
  1851  037D  00A6               	movwf	___lwdiv@divisor
  1852  037E  3000               	movlw	0
  1853  037F  00A7               	movwf	___lwdiv@divisor+1
  1854  0380  0021               	movlb	1	; select bank1
  1855  0381  0835               	movf	(_curTemp+1)^(0+128),w
  1856  0382  0020               	movlb	0	; select bank0
  1857  0383  00A9               	movwf	___lwdiv@dividend+1
  1858  0384  0021               	movlb	1	; select bank1
  1859  0385  0834               	movf	_curTemp^(0+128),w
  1860  0386  0020               	movlb	0	; select bank0
  1861  0387  00A8               	movwf	___lwdiv@dividend
  1862  0388  256A               	fcall	___lwdiv
  1863  0389  0020               	movlb	0	; select bank0
  1864  038A  0827               	movf	?___lwdiv+1,w
  1865  038B  0021               	movlb	1	; select bank1
  1866  038C  00CD               	movwf	(_main$1162+1)^(0+128)
  1867  038D  0020               	movlb	0	; select bank0
  1868  038E  0826               	movf	?___lwdiv,w
  1869  038F  0021               	movlb	1	; select bank1
  1870  0390  00CC               	movwf	_main$1162^(0+128)
  1871                           
  1872                           ;main.c: 494: DisplayNum(curTemp/10, 1);
  1873  0391  084D               	movf	(_main$1162+1)^(0+128),w
  1874  0392  0020               	movlb	0	; select bank0
  1875  0393  00AF               	movwf	DisplayNum@val+1
  1876  0394  0021               	movlb	1	; select bank1
  1877  0395  084C               	movf	_main$1162^(0+128),w
  1878  0396  0020               	movlb	0	; select bank0
  1879  0397  00AE               	movwf	DisplayNum@val
  1880  0398  01B0               	clrf	DisplayNum@decPos
  1881  0399  0AB0               	incf	DisplayNum@decPos,f
  1882  039A  2419               	fcall	_DisplayNum
  1883  039B  2B66               	goto	l2499
  1884  039C                     l2511:	
  1885                           
  1886                           ;main.c: 495: else;main.c: 496: DisplayNum(curTemp, 2);
  1887  039C  0021               	movlb	1	; select bank1
  1888  039D  0835               	movf	(_curTemp+1)^(0+128),w
  1889  039E  0020               	movlb	0	; select bank0
  1890  039F  00AF               	movwf	DisplayNum@val+1
  1891  03A0  0021               	movlb	1	; select bank1
  1892  03A1  0834               	movf	_curTemp^(0+128),w
  1893  03A2  0020               	movlb	0	; select bank0
  1894  03A3  00AE               	movwf	DisplayNum@val
  1895  03A4  3002               	movlw	2
  1896  03A5  00EA               	movwf	??_main
  1897  03A6  086A               	movf	??_main,w
  1898  03A7  00B0               	movwf	DisplayNum@decPos
  1899  03A8  2419               	fcall	_DisplayNum
  1900  03A9  2B66               	goto	l2499
  1901  03AA                     __end_of_main:	
  1902                           
  1903                           	psect	text1
  1904  07E0                     __ptext1:	
  1905 ;; *************** function _SYSTEM_Initialize *****************
  1906 ;; Defined at:
  1907 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1921 ;;      Params:         0       0       0       0
  1922 ;;      Locals:         0       0       0       0
  1923 ;;      Temps:          0       0       0       0
  1924 ;;      Totals:         0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    6
  1928 ;; This function calls:
  1929 ;;		_I2C_Initialize
  1930 ;;		_OSCILLATOR_Initialize
  1931 ;;		_PIN_MANAGER_Initialize
  1932 ;;		_TMR2_Initialize
  1933 ;;		_WDT_Initialize
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           
  1940                           ;psect for function _SYSTEM_Initialize
  1941  07E0                     _SYSTEM_Initialize:	
  1942                           
  1943                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1944                           
  1945                           ;incstack = 0
  1946                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1947  07E0  2522               	fcall	_PIN_MANAGER_Initialize
  1948                           
  1949                           ;mcc.c: 73: OSCILLATOR_Initialize();
  1950  07E1  27E6               	fcall	_OSCILLATOR_Initialize
  1951                           
  1952                           ;mcc.c: 74: WDT_Initialize();
  1953  07E2  27EC               	fcall	_WDT_Initialize
  1954                           
  1955                           ;mcc.c: 75: I2C_Initialize();
  1956  07E3  2719               	fcall	_I2C_Initialize
  1957                           
  1958                           ;mcc.c: 76: TMR2_Initialize();
  1959  07E4  2770               	fcall	_TMR2_Initialize
  1960  07E5  0008               	return
  1961  07E6                     __end_of_SYSTEM_Initialize:	
  1962                           
  1963                           	psect	text2
  1964  07EC                     __ptext2:	
  1965 ;; *************** function _WDT_Initialize *****************
  1966 ;; Defined at:
  1967 ;;		line 89 in file "mcc_generated_files/mcc.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1981 ;;      Params:         0       0       0       0
  1982 ;;      Locals:         0       0       0       0
  1983 ;;      Temps:          0       0       0       0
  1984 ;;      Totals:         0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    4
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_SYSTEM_Initialize
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _WDT_Initialize
  1997  07EC                     _WDT_Initialize:	
  1998                           
  1999                           ;mcc.c: 92: WDTCON = 0x16;
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _WDT_Initialize: [wreg]
  2003  07EC  3016               	movlw	22
  2004  07ED  0021               	movlb	1	; select bank1
  2005  07EE  0097               	movwf	23	;volatile
  2006  07EF  0008               	return
  2007  07F0                     __end_of_WDT_Initialize:	
  2008                           
  2009                           	psect	text3
  2010  0770                     __ptext3:	
  2011 ;; *************** function _TMR2_Initialize *****************
  2012 ;; Defined at:
  2013 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2027 ;;      Params:         0       0       0       0
  2028 ;;      Locals:         0       0       0       0
  2029 ;;      Temps:          0       0       0       0
  2030 ;;      Totals:         0       0       0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    5
  2034 ;; This function calls:
  2035 ;;		_TMR2_SetInterruptHandler
  2036 ;;		_TMR2_StartTimer
  2037 ;; This function is called by:
  2038 ;;		_SYSTEM_Initialize
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _TMR2_Initialize
  2045  0770                     _TMR2_Initialize:	
  2046                           
  2047                           ;tmr2.c: 68: T2CON = 0x03;
  2048                           
  2049                           ;incstack = 0
  2050                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2051  0770  3003               	movlw	3
  2052  0771  0020               	movlb	0	; select bank0
  2053  0772  009C               	movwf	28	;volatile
  2054                           
  2055                           ;tmr2.c: 71: PR2 = 0x03;
  2056  0773  3003               	movlw	3
  2057  0774  009B               	movwf	27	;volatile
  2058                           
  2059                           ;tmr2.c: 74: TMR2 = 0x00;
  2060  0775  019A               	clrf	26	;volatile
  2061                           
  2062                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  2063  0776  1091               	bcf	17,1	;volatile
  2064                           
  2065                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
  2066  0777  0021               	movlb	1	; select bank1
  2067  0778  1491               	bsf	17,1	;volatile
  2068                           
  2069                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2070  0779  30F8               	movlw	low _TMR2_DefaultInterruptHandler
  2071  077A  0020               	movlb	0	; select bank0
  2072  077B  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2073  077C  3007               	movlw	high _TMR2_DefaultInterruptHandler
  2074  077D  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2075  077E  27CB               	fcall	_TMR2_SetInterruptHandler
  2076                           
  2077                           ;tmr2.c: 86: TMR2_StartTimer();
  2078  077F  27F4               	fcall	_TMR2_StartTimer
  2079  0780  0008               	return
  2080  0781                     __end_of_TMR2_Initialize:	
  2081                           
  2082                           	psect	text4
  2083  07F4                     __ptext4:	
  2084 ;; *************** function _TMR2_StartTimer *****************
  2085 ;; Defined at:
  2086 ;;		line 89 in file "mcc_generated_files/tmr2.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		None
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2100 ;;      Params:         0       0       0       0
  2101 ;;      Locals:         0       0       0       0
  2102 ;;      Temps:          0       0       0       0
  2103 ;;      Totals:         0       0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    4
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;;		_TMR2_Initialize
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _TMR2_StartTimer
  2117  07F4                     _TMR2_StartTimer:	
  2118                           
  2119                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _TMR2_StartTimer: []
  2123  07F4  0020               	movlb	0	; select bank0
  2124  07F5  151C               	bsf	28,2	;volatile
  2125  07F6  0008               	return
  2126  07F7                     __end_of_TMR2_StartTimer:	
  2127                           
  2128                           	psect	text5
  2129  07CB                     __ptext5:	
  2130 ;; *************** function _TMR2_SetInterruptHandler *****************
  2131 ;; Defined at:
  2132 ;;		line 149 in file "mcc_generated_files/tmr2.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2135 ;;		 -> TMR2_DefaultInterruptHandler(1), TickISR(1), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2147 ;;      Params:         0       2       0       0
  2148 ;;      Locals:         0       0       0       0
  2149 ;;      Temps:          0       0       0       0
  2150 ;;      Totals:         0       2       0       0
  2151 ;;Total ram usage:        2 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    4
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;;		_TMR2_Initialize
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _TMR2_SetInterruptHandler
  2164  07CB                     _TMR2_SetInterruptHandler:	
  2165                           
  2166                           ;tmr2.c: 150: TMR2_InterruptHandler = InterruptHandler;
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2170  07CB  0020               	movlb	0	; select bank0
  2171  07CC  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2172  07CD  0021               	movlb	1	; select bank1
  2173  07CE  00DA               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  2174  07CF  0020               	movlb	0	; select bank0
  2175  07D0  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2176  07D1  0021               	movlb	1	; select bank1
  2177  07D2  00D9               	movwf	_TMR2_InterruptHandler^(0+128)
  2178  07D3  0008               	return
  2179  07D4                     __end_of_TMR2_SetInterruptHandler:	
  2180                           
  2181                           	psect	text6
  2182  0522                     __ptext6:	
  2183 ;; *************** function _PIN_MANAGER_Initialize *****************
  2184 ;; Defined at:
  2185 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  state           1    0[BANK0 ] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2199 ;;      Params:         0       0       0       0
  2200 ;;      Locals:         0       1       0       0
  2201 ;;      Temps:          0       0       0       0
  2202 ;;      Totals:         0       1       0       0
  2203 ;;Total ram usage:        1 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    4
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_SYSTEM_Initialize
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _PIN_MANAGER_Initialize
  2215  0522                     _PIN_MANAGER_Initialize:	
  2216                           
  2217                           ;pin_manager.c: 57: LATA = 0x00;
  2218                           
  2219                           ;incstack = 0
  2220                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  2221  0522  0022               	movlb	2	; select bank2
  2222  0523  018C               	clrf	12	;volatile
  2223                           
  2224                           ;pin_manager.c: 58: LATB = 0x00;
  2225  0524  018D               	clrf	13	;volatile
  2226                           
  2227                           ;pin_manager.c: 59: LATC = 0x80;
  2228  0525  3080               	movlw	128
  2229  0526  008E               	movwf	14	;volatile
  2230                           
  2231                           ;pin_manager.c: 64: TRISA = 0x37;
  2232  0527  3037               	movlw	55
  2233  0528  0021               	movlb	1	; select bank1
  2234  0529  008C               	movwf	12	;volatile
  2235                           
  2236                           ;pin_manager.c: 65: TRISB = 0xF0;
  2237  052A  30F0               	movlw	240
  2238  052B  008D               	movwf	13	;volatile
  2239                           
  2240                           ;pin_manager.c: 66: TRISC = 0x00;
  2241  052C  018E               	clrf	14	;volatile
  2242                           
  2243                           ;pin_manager.c: 71: ANSELC = 0x00;
  2244  052D  0023               	movlb	3	; select bank3
  2245  052E  018E               	clrf	14	;volatile
  2246                           
  2247                           ;pin_manager.c: 72: ANSELB = 0x20;
  2248  052F  3020               	movlw	32
  2249  0530  008D               	movwf	13	;volatile
  2250                           
  2251                           ;pin_manager.c: 73: ANSELA = 0x17;
  2252  0531  3017               	movlw	23
  2253  0532  008C               	movwf	12	;volatile
  2254                           
  2255                           ;pin_manager.c: 78: WPUB = 0xF0;
  2256  0533  30F0               	movlw	240
  2257  0534  0024               	movlb	4	; select bank4
  2258  0535  008D               	movwf	13	;volatile
  2259                           
  2260                           ;pin_manager.c: 79: WPUA = 0x3F;
  2261  0536  303F               	movlw	63
  2262  0537  008C               	movwf	12	;volatile
  2263                           
  2264                           ;pin_manager.c: 80: WPUC = 0xFF;
  2265  0538  30FF               	movlw	255
  2266  0539  008E               	movwf	14	;volatile
  2267                           
  2268                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 0;
  2269  053A  0021               	movlb	1	; select bank1
  2270  053B  1395               	bcf	21,7	;volatile
  2271                           
  2272                           ;pin_manager.c: 86: ODCONA = 0x00;
  2273  053C  0025               	movlb	5	; select bank5
  2274  053D  018C               	clrf	12	;volatile
  2275                           
  2276                           ;pin_manager.c: 87: ODCONB = 0x00;
  2277  053E  018D               	clrf	13	;volatile
  2278                           
  2279                           ;pin_manager.c: 88: ODCONC = 0x00;
  2280  053F  018E               	clrf	14	;volatile
  2281                           
  2282                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  2283  0540  3000               	movlw	0
  2284  0541  1B8B               	btfsc	11,7	;volatile
  2285  0542  3001               	movlw	1
  2286  0543  0020               	movlb	0	; select bank0
  2287  0544  00A0               	movwf	PIN_MANAGER_Initialize@state
  2288                           
  2289                           ;pin_manager.c: 96: GIE = 0;
  2290  0545  138B               	bcf	11,7	;volatile
  2291                           
  2292                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  2293  0546  3055               	movlw	85
  2294  0547  003C               	movlb	28	; select bank28
  2295  0548  008F               	movwf	15	;volsfr
  2296                           
  2297                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  2298  0549  30AA               	movlw	170
  2299  054A  008F               	movwf	15	;volsfr
  2300                           
  2301                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  2302  054B  100F               	bcf	15,0	;volsfr
  2303                           
  2304                           ;pin_manager.c: 101: RB4PPSbits.RB4PPS = 0x11;
  2305  054C  003D               	movlb	29	; select bank29
  2306  054D  081C               	movf	28,w	;volatile
  2307  054E  39E0               	andlw	-32
  2308  054F  3811               	iorlw	17
  2309  0550  009C               	movwf	28	;volatile
  2310                           
  2311                           ;pin_manager.c: 102: RB6PPSbits.RB6PPS = 0x10;
  2312  0551  081E               	movf	30,w	;volatile
  2313  0552  39E0               	andlw	-32
  2314  0553  3810               	iorlw	16
  2315  0554  009E               	movwf	30	;volatile
  2316                           
  2317                           ;pin_manager.c: 103: SSPDATPPSbits.SSPDATPPS = 0x0C;
  2318  0555  003C               	movlb	28	; select bank28
  2319  0556  0821               	movf	33,w	;volatile
  2320  0557  39E0               	andlw	-32
  2321  0558  380C               	iorlw	12
  2322  0559  00A1               	movwf	33	;volatile
  2323                           
  2324                           ;pin_manager.c: 104: SSPCLKPPSbits.SSPCLKPPS = 0x0E;
  2325  055A  0820               	movf	32,w	;volatile
  2326  055B  39E0               	andlw	-32
  2327  055C  380E               	iorlw	14
  2328  055D  00A0               	movwf	32	;volatile
  2329                           
  2330                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  2331  055E  3055               	movlw	85
  2332  055F  008F               	movwf	15	;volsfr
  2333                           
  2334                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  2335  0560  30AA               	movlw	170
  2336  0561  008F               	movwf	15	;volsfr
  2337                           
  2338                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  2339  0562  140F               	bsf	15,0	;volsfr
  2340                           
  2341                           ;pin_manager.c: 110: GIE = state;
  2342  0563  0020               	movlb	0	; select bank0
  2343  0564  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  2344  0565  2D68               	goto	u2070
  2345  0566  178B               	bsf	11,7	;volatile
  2346  0567  0008               	return
  2347  0568                     u2070:	
  2348  0568  138B               	bcf	11,7	;volatile
  2349  0569  0008               	return
  2350  056A                     __end_of_PIN_MANAGER_Initialize:	
  2351                           
  2352                           	psect	text7
  2353  07E6                     __ptext7:	
  2354 ;; *************** function _OSCILLATOR_Initialize *****************
  2355 ;; Defined at:
  2356 ;;		line 79 in file "mcc_generated_files/mcc.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2370 ;;      Params:         0       0       0       0
  2371 ;;      Locals:         0       0       0       0
  2372 ;;      Temps:          0       0       0       0
  2373 ;;      Totals:         0       0       0       0
  2374 ;;Total ram usage:        0 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    4
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_SYSTEM_Initialize
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function _OSCILLATOR_Initialize
  2386  07E6                     _OSCILLATOR_Initialize:	
  2387                           
  2388                           ;mcc.c: 82: OSCCON = 0x68;
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2392  07E6  3068               	movlw	104
  2393  07E7  0021               	movlb	1	; select bank1
  2394  07E8  0099               	movwf	25	;volatile
  2395                           
  2396                           ;mcc.c: 84: OSCSTAT = 0x00;
  2397  07E9  019A               	clrf	26	;volatile
  2398                           
  2399                           ;mcc.c: 86: OSCTUNE = 0x00;
  2400  07EA  0198               	clrf	24	;volatile
  2401  07EB  0008               	return
  2402  07EC                     __end_of_OSCILLATOR_Initialize:	
  2403                           
  2404                           	psect	text8
  2405  0719                     __ptext8:	
  2406 ;; *************** function _I2C_Initialize *****************
  2407 ;; Defined at:
  2408 ;;		line 198 in file "mcc_generated_files/i2c.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2422 ;;      Params:         0       0       0       0
  2423 ;;      Locals:         0       0       0       0
  2424 ;;      Temps:          0       1       0       0
  2425 ;;      Totals:         0       1       0       0
  2426 ;;Total ram usage:        1 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    4
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_SYSTEM_Initialize
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function _I2C_Initialize
  2439  0719                     _I2C_Initialize:	
  2440                           
  2441                           ;i2c.c: 200: i2c_object.pTrHead = i2c_tr_queue;
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2445  0719  30BF               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  2446  071A  0020               	movlb	0	; select bank0
  2447  071B  00A0               	movwf	??_I2C_Initialize
  2448  071C  0820               	movf	??_I2C_Initialize,w
  2449  071D  0021               	movlb	1	; select bank1
  2450  071E  00A7               	movwf	(low ((_i2c_object| 0+1)))^(0+128)
  2451                           
  2452                           ;i2c.c: 201: i2c_object.pTrTail = i2c_tr_queue;
  2453  071F  30BF               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  2454  0720  0020               	movlb	0	; select bank0
  2455  0721  00A0               	movwf	??_I2C_Initialize
  2456  0722  0820               	movf	??_I2C_Initialize,w
  2457  0723  0021               	movlb	1	; select bank1
  2458  0724  00A6               	movwf	_i2c_object^(0+128)
  2459                           
  2460                           ;i2c.c: 202: i2c_object.trStatus.s.empty = 1;
  2461  0725  14A8               	bsf	(_i2c_object^(0+128)+2),1
  2462                           
  2463                           ;i2c.c: 203: i2c_object.trStatus.s.full = 0;
  2464  0726  1028               	bcf	(_i2c_object^(0+128)+2),0
  2465                           
  2466                           ;i2c.c: 205: i2c_object.i2cErrors = 0;
  2467  0727  01AA               	clrf	(_i2c_object^(0+128)+4)
  2468                           
  2469                           ;i2c.c: 208: SSP1STAT = 0x00;
  2470  0728  0024               	movlb	4	; select bank4
  2471  0729  0194               	clrf	20	;volatile
  2472                           
  2473                           ;i2c.c: 210: SSP1CON1 = 0x28;
  2474  072A  3028               	movlw	40
  2475  072B  0095               	movwf	21	;volatile
  2476                           
  2477                           ;i2c.c: 212: SSP1CON3 = 0x00;
  2478  072C  0197               	clrf	23	;volatile
  2479                           
  2480                           ;i2c.c: 214: SSP1ADD = 0x03;
  2481  072D  3003               	movlw	3
  2482  072E  0092               	movwf	18	;volatile
  2483                           
  2484                           ;i2c.c: 218: PIR1bits.SSP1IF = 0;
  2485  072F  0020               	movlb	0	; select bank0
  2486  0730  1191               	bcf	17,3	;volatile
  2487                           
  2488                           ;i2c.c: 220: PIE1bits.SSP1IE = 1;
  2489  0731  0021               	movlb	1	; select bank1
  2490  0732  1591               	bsf	17,3	;volatile
  2491  0733  0008               	return
  2492  0734                     __end_of_I2C_Initialize:	
  2493                           
  2494                           	psect	text9
  2495  0419                     __ptext9:	
  2496 ;; *************** function _DisplayNum *****************
  2497 ;; Defined at:
  2498 ;;		line 386 in file "main.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  val             2   14[BANK0 ] unsigned int 
  2501 ;;  decPos          1   16[BANK0 ] unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  i               1   19[BANK0 ] unsigned char 
  2504 ;;  outChar         1   18[BANK0 ] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2514 ;;      Params:         0       3       0       0
  2515 ;;      Locals:         0       2       0       0
  2516 ;;      Temps:          0       1       0       0
  2517 ;;      Totals:         0       6       0       0
  2518 ;;Total ram usage:        6 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    5
  2521 ;; This function calls:
  2522 ;;		_ShiftOut
  2523 ;;		___lwdiv
  2524 ;;		___lwmod
  2525 ;; This function is called by:
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _DisplayNum
  2532  0419                     _DisplayNum:	
  2533                           
  2534                           ;main.c: 388: uint8_t i;;main.c: 389: uint8_t outChar;;main.c: 390: for(i=0; i<4; i++)
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _DisplayNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2538  0419  0020               	movlb	0	; select bank0
  2539  041A  01B3               	clrf	DisplayNum@i
  2540  041B  2C80               	goto	L1
  2541  041C                     l346:	
  2542                           ;main.c: 395: do { LATCbits.LATC3 = 1; } while(0);
  2543                           
  2544                           ;main.c: 393: {;main.c: 394: case(3):
  2545                           
  2546                           ;main.c: 391: {;main.c: 392: switch(i)
  2547                           
  2548  041C  0022               	movlb	2	; select bank2
  2549  041D  158E               	bsf	14,3	;volatile
  2550                           
  2551                           ;main.c: 396: break;
  2552  041E  2C34               	goto	l2447
  2553  041F                     l350:	
  2554                           ;main.c: 398: do { LATCbits.LATC4 = 1; } while(0);
  2555                           
  2556                           ;main.c: 397: case(2):
  2557                           
  2558  041F  0022               	movlb	2	; select bank2
  2559  0420  160E               	bsf	14,4	;volatile
  2560                           
  2561                           ;main.c: 399: break;
  2562  0421  2C34               	goto	l2447
  2563  0422                     l353:	
  2564                           ;main.c: 401: do { LATCbits.LATC5 = 0; } while(0);
  2565                           
  2566                           ;main.c: 400: case(1):
  2567                           
  2568  0422  0022               	movlb	2	; select bank2
  2569  0423  128E               	bcf	14,5	;volatile
  2570                           
  2571                           ;main.c: 402: break;
  2572  0424  2C34               	goto	l2447
  2573  0425                     l356:	
  2574                           ;main.c: 404: do { LATCbits.LATC6 = 0; } while(0);
  2575                           
  2576                           ;main.c: 403: default:
  2577                           
  2578  0425  0022               	movlb	2	; select bank2
  2579  0426  130E               	bcf	14,6	;volatile
  2580                           
  2581                           ;main.c: 406: }
  2582                           
  2583                           ;main.c: 405: break;
  2584  0427  2C34               	goto	l2447
  2585  0428                     l2445:	
  2586  0428  0020               	movlb	0	; select bank0
  2587  0429  0833               	movf	DisplayNum@i,w
  2588                           
  2589                           ; Switch size 1, requested type "space"
  2590                           ; Number of cases is 3, Range of values is 1 to 3
  2591                           ; switch strategies available:
  2592                           ; Name         Instructions Cycles
  2593                           ; simple_byte           10     6 (average)
  2594                           ; direct_byte           15     9 (fixed)
  2595                           ; jumptable            263     9 (fixed)
  2596                           ;	Chosen strategy is simple_byte
  2597  042A  3A01               	xorlw	1	; case 1
  2598  042B  1903               	skipnz
  2599  042C  2C22               	goto	l353
  2600  042D  3A03               	xorlw	3	; case 2
  2601  042E  1903               	skipnz
  2602  042F  2C1F               	goto	l350
  2603  0430  3A01               	xorlw	1	; case 3
  2604  0431  1903               	skipnz
  2605  0432  2C1C               	goto	l346
  2606  0433  2C25               	goto	l356
  2607  0434                     l2447:	
  2608                           
  2609                           ;main.c: 407: outChar = Digits[ val % 10];
  2610  0434  300A               	movlw	10
  2611  0435  0020               	movlb	0	; select bank0
  2612  0436  00A0               	movwf	___lwmod@divisor
  2613  0437  3000               	movlw	0
  2614  0438  00A1               	movwf	___lwmod@divisor+1
  2615  0439  082F               	movf	DisplayNum@val+1,w
  2616  043A  00A3               	movwf	___lwmod@dividend+1
  2617  043B  082E               	movf	DisplayNum@val,w
  2618  043C  00A2               	movwf	___lwmod@dividend
  2619  043D  25CF               	fcall	___lwmod
  2620  043E  0020               	movlb	0	; select bank0
  2621  043F  0820               	movf	?___lwmod,w
  2622  0440  3ECF               	addlw	(low (_Digits| 0))& (0+255)
  2623  0441  0086               	movwf	6
  2624  0442  0187               	clrf	7
  2625  0443  0801               	movf	1,w
  2626  0444  00B1               	movwf	??_DisplayNum
  2627  0445  0831               	movf	??_DisplayNum,w
  2628  0446  00B2               	movwf	DisplayNum@outChar
  2629                           
  2630                           ;main.c: 408: if( decPos == i)
  2631  0447  0830               	movf	DisplayNum@decPos,w
  2632  0448  0633               	xorwf	DisplayNum@i,w
  2633  0449  1D03               	skipz
  2634  044A  2C4F               	goto	l2453
  2635                           
  2636                           ;main.c: 409: outChar |= Decimal;
  2637  044B  086E               	movf	_Decimal,w
  2638  044C  00B1               	movwf	??_DisplayNum
  2639  044D  0831               	movf	??_DisplayNum,w
  2640  044E  04B2               	iorwf	DisplayNum@outChar,f
  2641  044F                     l2453:	
  2642                           
  2643                           ;main.c: 410: ShiftOut( outChar );
  2644  044F  0832               	movf	DisplayNum@outChar,w
  2645  0450  25FC               	fcall	_ShiftOut
  2646                           
  2647                           ;main.c: 411: val = val / 10;
  2648  0451  300A               	movlw	10
  2649  0452  0020               	movlb	0	; select bank0
  2650  0453  00A6               	movwf	___lwdiv@divisor
  2651  0454  3000               	movlw	0
  2652  0455  00A7               	movwf	___lwdiv@divisor+1
  2653  0456  082F               	movf	DisplayNum@val+1,w
  2654  0457  00A9               	movwf	___lwdiv@dividend+1
  2655  0458  082E               	movf	DisplayNum@val,w
  2656  0459  00A8               	movwf	___lwdiv@dividend
  2657  045A  256A               	fcall	___lwdiv
  2658  045B  0020               	movlb	0	; select bank0
  2659  045C  0827               	movf	?___lwdiv+1,w
  2660  045D  00AF               	movwf	DisplayNum@val+1
  2661  045E  0826               	movf	?___lwdiv,w
  2662  045F  00AE               	movwf	DisplayNum@val
  2663                           
  2664                           ;main.c: 412: ShiftOut(0);
  2665  0460  3000               	movlw	0
  2666  0461  25FC               	fcall	_ShiftOut
  2667                           
  2668                           ;main.c: 413: switch(i)
  2669  0462  2C6F               	goto	l2461
  2670  0463                     l361:	
  2671                           ;main.c: 416: do { LATCbits.LATC3 = 0; } while(0);
  2672                           
  2673                           ;main.c: 414: {;main.c: 415: case(3):
  2674                           
  2675  0463  0022               	movlb	2	; select bank2
  2676  0464  118E               	bcf	14,3	;volatile
  2677                           
  2678                           ;main.c: 417: break;
  2679  0465  2C7B               	goto	l2463
  2680  0466                     l365:	
  2681                           ;main.c: 419: do { LATCbits.LATC4 = 0; } while(0);
  2682                           
  2683                           ;main.c: 418: case(2):
  2684                           
  2685  0466  0022               	movlb	2	; select bank2
  2686  0467  120E               	bcf	14,4	;volatile
  2687                           
  2688                           ;main.c: 420: break;
  2689  0468  2C7B               	goto	l2463
  2690  0469                     l368:	
  2691                           ;main.c: 422: do { LATCbits.LATC5 = 1; } while(0);
  2692                           
  2693                           ;main.c: 421: case(1):
  2694                           
  2695  0469  0022               	movlb	2	; select bank2
  2696  046A  168E               	bsf	14,5	;volatile
  2697                           
  2698                           ;main.c: 423: break;
  2699  046B  2C7B               	goto	l2463
  2700  046C                     l371:	
  2701                           ;main.c: 425: do { LATCbits.LATC6 = 1; } while(0);
  2702                           
  2703                           ;main.c: 424: default:
  2704                           
  2705  046C  0022               	movlb	2	; select bank2
  2706  046D  170E               	bsf	14,6	;volatile
  2707                           
  2708                           ;main.c: 427: }
  2709                           
  2710                           ;main.c: 426: break;
  2711  046E  2C7B               	goto	l2463
  2712  046F                     l2461:	
  2713  046F  0020               	movlb	0	; select bank0
  2714  0470  0833               	movf	DisplayNum@i,w
  2715                           
  2716                           ; Switch size 1, requested type "space"
  2717                           ; Number of cases is 3, Range of values is 1 to 3
  2718                           ; switch strategies available:
  2719                           ; Name         Instructions Cycles
  2720                           ; simple_byte           10     6 (average)
  2721                           ; direct_byte           15     9 (fixed)
  2722                           ; jumptable            263     9 (fixed)
  2723                           ;	Chosen strategy is simple_byte
  2724  0471  3A01               	xorlw	1	; case 1
  2725  0472  1903               	skipnz
  2726  0473  2C69               	goto	l368
  2727  0474  3A03               	xorlw	3	; case 2
  2728  0475  1903               	skipnz
  2729  0476  2C66               	goto	l365
  2730  0477  3A01               	xorlw	1	; case 3
  2731  0478  1903               	skipnz
  2732  0479  2C63               	goto	l361
  2733  047A  2C6C               	goto	l371
  2734  047B                     l2463:	
  2735  047B  3001               	movlw	1
  2736  047C  0020               	movlb	0	; select bank0
  2737  047D  00B1               	movwf	??_DisplayNum
  2738  047E  0831               	movf	??_DisplayNum,w
  2739  047F  07B3               	addwf	DisplayNum@i,f
  2740  0480                     L1:	
  2741  0480  3004               	movlw	4
  2742  0481  0233               	subwf	DisplayNum@i,w
  2743  0482  1803               	btfsc	3,0
  2744  0483  0008               	return
  2745  0484  2C28               	goto	l2445
  2746  0485                     __end_of_DisplayNum:	
  2747                           
  2748                           	psect	text10
  2749  05CF                     __ptext10:	
  2750 ;; *************** function ___lwmod *****************
  2751 ;; Defined at:
  2752 ;;		line 5 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  divisor         2    0[BANK0 ] unsigned int 
  2755 ;;  dividend        2    2[BANK0 ] unsigned int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  counter         1    5[BANK0 ] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  2    0[BANK0 ] unsigned int 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2767 ;;      Params:         0       4       0       0
  2768 ;;      Locals:         0       1       0       0
  2769 ;;      Temps:          0       1       0       0
  2770 ;;      Totals:         0       6       0       0
  2771 ;;Total ram usage:        6 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    4
  2774 ;; This function calls:
  2775 ;;		Nothing
  2776 ;; This function is called by:
  2777 ;;		_DisplayNum
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function ___lwmod
  2783  05CF                     ___lwmod:	
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2787  05CF  0020               	movlb	0	; select bank0
  2788  05D0  0820               	movf	___lwmod@divisor,w
  2789  05D1  0421               	iorwf	___lwmod@divisor+1,w
  2790  05D2  1903               	btfsc	3,2
  2791  05D3  2DF7               	goto	l2393
  2792  05D4  01A5               	clrf	___lwmod@counter
  2793  05D5  0AA5               	incf	___lwmod@counter,f
  2794  05D6                     l2383:	
  2795  05D6  1BA1               	btfsc	___lwmod@divisor+1,7
  2796  05D7  2DE2               	goto	l2385
  2797  05D8  3001               	movlw	1
  2798  05D9                     u2315:	
  2799  05D9  35A0               	lslf	___lwmod@divisor,f
  2800  05DA  0DA1               	rlf	___lwmod@divisor+1,f
  2801  05DB  0B89               	decfsz	9,f
  2802  05DC  2DD9               	goto	u2315
  2803  05DD  3001               	movlw	1
  2804  05DE  00A4               	movwf	??___lwmod
  2805  05DF  0824               	movf	??___lwmod,w
  2806  05E0  07A5               	addwf	___lwmod@counter,f
  2807  05E1  2DD6               	goto	l2383
  2808  05E2                     l2385:	
  2809  05E2  0821               	movf	___lwmod@divisor+1,w
  2810  05E3  0223               	subwf	___lwmod@dividend+1,w
  2811  05E4  1D03               	skipz
  2812  05E5  2DE8               	goto	u2335
  2813  05E6  0820               	movf	___lwmod@divisor,w
  2814  05E7  0222               	subwf	___lwmod@dividend,w
  2815  05E8                     u2335:	
  2816  05E8  1C03               	skipc
  2817  05E9  2DEE               	goto	l2389
  2818  05EA  0820               	movf	___lwmod@divisor,w
  2819  05EB  02A2               	subwf	___lwmod@dividend,f
  2820  05EC  0821               	movf	___lwmod@divisor+1,w
  2821  05ED  3BA3               	subwfb	___lwmod@dividend+1,f
  2822  05EE                     l2389:	
  2823  05EE  3001               	movlw	1
  2824  05EF                     u2345:	
  2825  05EF  36A1               	lsrf	___lwmod@divisor+1,f
  2826  05F0  0CA0               	rrf	___lwmod@divisor,f
  2827  05F1  0B89               	decfsz	9,f
  2828  05F2  2DEF               	goto	u2345
  2829  05F3  3001               	movlw	1
  2830  05F4  02A5               	subwf	___lwmod@counter,f
  2831  05F5  1D03               	btfss	3,2
  2832  05F6  2DE2               	goto	l2385
  2833  05F7                     l2393:	
  2834  05F7  0823               	movf	___lwmod@dividend+1,w
  2835  05F8  00A1               	movwf	?___lwmod+1
  2836  05F9  0822               	movf	___lwmod@dividend,w
  2837  05FA  00A0               	movwf	?___lwmod
  2838  05FB  0008               	return
  2839  05FC                     __end_of___lwmod:	
  2840                           
  2841                           	psect	text11
  2842  05FC                     __ptext11:	
  2843 ;; *************** function _ShiftOut *****************
  2844 ;; Defined at:
  2845 ;;		line 366 in file "main.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  thisByte        1    wreg     unsigned char 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  thisByte        1    1[BANK0 ] unsigned char 
  2850 ;;  i               1    2[BANK0 ] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2860 ;;      Params:         0       0       0       0
  2861 ;;      Locals:         0       2       0       0
  2862 ;;      Temps:          0       1       0       0
  2863 ;;      Totals:         0       3       0       0
  2864 ;;Total ram usage:        3 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    4
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_DisplayNum
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _ShiftOut
  2876  05FC                     _ShiftOut:	
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _ShiftOut: [wreg+status,2+status,0]
  2880                           ;ShiftOut@thisByte stored from wreg
  2881  05FC  0020               	movlb	0	; select bank0
  2882  05FD  00A1               	movwf	ShiftOut@thisByte
  2883                           
  2884                           ;main.c: 368: do { LATCbits.LATC0 = 0; } while(0);
  2885  05FE  0022               	movlb	2	; select bank2
  2886  05FF  100E               	bcf	14,0	;volatile
  2887                           
  2888                           ;main.c: 369: uint8_t i;;main.c: 370: for(i=0; i<8; i++)
  2889  0600  0020               	movlb	0	; select bank0
  2890  0601  01A2               	clrf	ShiftOut@i
  2891  0602  3008               	movlw	8
  2892  0603  0222               	subwf	ShiftOut@i,w
  2893  0604  1803               	btfsc	3,0
  2894  0605  2E21               	goto	l337
  2895  0606                     l2315:	
  2896                           
  2897                           ;main.c: 371: {;main.c: 372: if( thisByte & (1<<i) )
  2898  0606  3001               	movlw	1
  2899  0607  00A0               	movwf	??_ShiftOut
  2900  0608  0A22               	incf	ShiftOut@i,w
  2901  0609  2E0B               	goto	u2124
  2902  060A                     u2125:	
  2903  060A  35A0               	lslf	??_ShiftOut,f
  2904  060B                     u2124:	
  2905  060B  0B89               	decfsz	9,f
  2906  060C  2E0A               	goto	u2125
  2907  060D  0820               	movf	??_ShiftOut,w
  2908  060E  0521               	andwf	ShiftOut@thisByte,w
  2909  060F  1903               	btfsc	3,2
  2910  0610  2E14               	goto	l331
  2911                           
  2912                           ;main.c: 373: do { LATCbits.LATC2 = 1; } while(0);
  2913  0611  0022               	movlb	2	; select bank2
  2914  0612  150E               	bsf	14,2	;volatile
  2915  0613  2E16               	goto	l333
  2916  0614                     l331:	
  2917                           ;main.c: 374: else;main.c: 375: do { LATCbits.LATC2 = 0; } while(0);
  2918                           
  2919  0614  0022               	movlb	2	; select bank2
  2920  0615  110E               	bcf	14,2	;volatile
  2921  0616                     l333:	
  2922                           ;main.c: 377: do { LATCbits.LATC1 = 0; } while(0);
  2923                           
  2924  0616  108E               	bcf	14,1	;volatile
  2925                           
  2926                           ;main.c: 379: do { LATCbits.LATC1 = 1; } while(0);
  2927  0617  148E               	bsf	14,1	;volatile
  2928  0618  3001               	movlw	1
  2929  0619  0020               	movlb	0	; select bank0
  2930  061A  00A0               	movwf	??_ShiftOut
  2931  061B  0820               	movf	??_ShiftOut,w
  2932  061C  07A2               	addwf	ShiftOut@i,f
  2933  061D  3008               	movlw	8
  2934  061E  0222               	subwf	ShiftOut@i,w
  2935  061F  1C03               	skipc
  2936  0620  2E06               	goto	l2315
  2937  0621                     l337:	
  2938                           ;main.c: 381: };main.c: 382: do { LATCbits.LATC0 = 1; } while(0);
  2939                           
  2940  0621  0022               	movlb	2	; select bank2
  2941  0622  140E               	bsf	14,0	;volatile
  2942  0623  0008               	return
  2943  0624                     __end_of_ShiftOut:	
  2944                           
  2945                           	psect	text12
  2946  0044                     __ptext12:	
  2947 ;; *************** function _BMP280_readTemperature *****************
  2948 ;; Defined at:
  2949 ;;		line 323 in file "main.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  adc_T           4    6[BANK1 ] long 
  2954 ;;  T               2    4[BANK1 ] unsigned int 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  2   49[BANK0 ] int 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2964 ;;      Params:         0       2       0       0
  2965 ;;      Locals:         0       0      10       0
  2966 ;;      Temps:          0      23       0       0
  2967 ;;      Totals:         0      25      10       0
  2968 ;;Total ram usage:       35 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    8
  2971 ;; This function calls:
  2972 ;;		_BMP280_read24_le
  2973 ;;		___lmul
  2974 ;;		___lwdiv
  2975 ;;		___wmul
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _BMP280_readTemperature
  2983  0044                     _BMP280_readTemperature:	
  2984                           
  2985                           ;main.c: 327: int32_t adc_T = BMP280_read24_le(BMP280_REGISTER_TEMPDATA);
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _BMP280_readTemperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  2989  0044  30FA               	movlw	250
  2990  0045  24D7               	fcall	_BMP280_read24_le
  2991  0046  0020               	movlb	0	; select bank0
  2992  0047  0840               	movf	?_BMP280_read24_le+3,w
  2993  0048  0021               	movlb	1	; select bank1
  2994  0049  00CB               	movwf	(BMP280_readTemperature@adc_T+3)^(0+128)
  2995  004A  0020               	movlb	0	; select bank0
  2996  004B  083F               	movf	?_BMP280_read24_le+2,w
  2997  004C  0021               	movlb	1	; select bank1
  2998  004D  00CA               	movwf	(BMP280_readTemperature@adc_T+2)^(0+128)
  2999  004E  0020               	movlb	0	; select bank0
  3000  004F  083E               	movf	?_BMP280_read24_le+1,w
  3001  0050  0021               	movlb	1	; select bank1
  3002  0051  00C9               	movwf	(BMP280_readTemperature@adc_T+1)^(0+128)
  3003  0052  0020               	movlb	0	; select bank0
  3004  0053  083D               	movf	?_BMP280_read24_le,w
  3005  0054  0021               	movlb	1	; select bank1
  3006  0055  00C8               	movwf	BMP280_readTemperature@adc_T^(0+128)
  3007                           
  3008                           ;main.c: 328: adc_T >>= 4;
  3009  0056  3004               	movlw	4
  3010  0057  0020               	movlb	0	; select bank0
  3011  0058  00D3               	movwf	??_BMP280_readTemperature
  3012  0059                     u2385:	
  3013  0059  0021               	movlb	1	; select bank1
  3014  005A  37CB               	asrf	(BMP280_readTemperature@adc_T+3)^(0+128),f
  3015  005B  0CCA               	rrf	(BMP280_readTemperature@adc_T+2)^(0+128),f
  3016  005C  0CC9               	rrf	(BMP280_readTemperature@adc_T+1)^(0+128),f
  3017  005D  0CC8               	rrf	BMP280_readTemperature@adc_T^(0+128),f
  3018  005E  0020               	movlb	0	; select bank0
  3019  005F  0BD3               	decfsz	??_BMP280_readTemperature& (0+127),f
  3020  0060  2859               	goto	u2385
  3021                           
  3022                           ;main.c: 330: t_fine = (((((adc_T>>3) - ((int32_t)_bmp280_calib.dig_T1 <<1))) *;main.c: 
      +                          331: ((int32_t)_bmp280_calib.dig_T2)) >> 11)+;main.c: 333: ((((((adc_T>>4) - ((int32_t)_
      +                          bmp280_calib.dig_T1)) *;main.c: 334: ((adc_T>>4) - ((int32_t)_bmp280_calib.dig_T1))) >> 
      +                          12) *;main.c: 335: ((int32_t)_bmp280_calib.dig_T3)) >> 14);
  3023  0061  0021               	movlb	1	; select bank1
  3024  0062  0820               	movf	__bmp280_calib^(0+128),w
  3025  0063  0020               	movlb	0	; select bank0
  3026  0064  00D3               	movwf	??_BMP280_readTemperature
  3027  0065  0021               	movlb	1	; select bank1
  3028  0066  0821               	movf	(__bmp280_calib+1)^(0+128),w
  3029  0067  0020               	movlb	0	; select bank0
  3030  0068  00D4               	movwf	??_BMP280_readTemperature+1
  3031  0069  01D5               	clrf	??_BMP280_readTemperature+2
  3032  006A  01D6               	clrf	??_BMP280_readTemperature+3
  3033  006B  09D3               	comf	??_BMP280_readTemperature,f
  3034  006C  09D4               	comf	??_BMP280_readTemperature+1,f
  3035  006D  09D5               	comf	??_BMP280_readTemperature+2,f
  3036  006E  09D6               	comf	??_BMP280_readTemperature+3,f
  3037  006F  0AD3               	incf	??_BMP280_readTemperature,f
  3038  0070  1903               	skipnz
  3039  0071  0AD4               	incf	??_BMP280_readTemperature+1,f
  3040  0072  1903               	skipnz
  3041  0073  0AD5               	incf	??_BMP280_readTemperature+2,f
  3042  0074  1903               	skipnz
  3043  0075  0AD6               	incf	??_BMP280_readTemperature+3,f
  3044  0076  0021               	movlb	1	; select bank1
  3045  0077  0848               	movf	BMP280_readTemperature@adc_T^(0+128),w
  3046  0078  0020               	movlb	0	; select bank0
  3047  0079  00D7               	movwf	??_BMP280_readTemperature+4
  3048  007A  0021               	movlb	1	; select bank1
  3049  007B  0849               	movf	(BMP280_readTemperature@adc_T+1)^(0+128),w
  3050  007C  0020               	movlb	0	; select bank0
  3051  007D  00D8               	movwf	??_BMP280_readTemperature+5
  3052  007E  0021               	movlb	1	; select bank1
  3053  007F  084A               	movf	(BMP280_readTemperature@adc_T+2)^(0+128),w
  3054  0080  0020               	movlb	0	; select bank0
  3055  0081  00D9               	movwf	??_BMP280_readTemperature+6
  3056  0082  0021               	movlb	1	; select bank1
  3057  0083  084B               	movf	(BMP280_readTemperature@adc_T+3)^(0+128),w
  3058  0084  0020               	movlb	0	; select bank0
  3059  0085  00DA               	movwf	??_BMP280_readTemperature+7
  3060  0086  3004               	movlw	4
  3061  0087  00DB               	movwf	??_BMP280_readTemperature+8
  3062  0088                     u2395:	
  3063  0088  37DA               	asrf	??_BMP280_readTemperature+7,f
  3064  0089  0CD9               	rrf	??_BMP280_readTemperature+6,f
  3065  008A  0CD8               	rrf	??_BMP280_readTemperature+5,f
  3066  008B  0CD7               	rrf	??_BMP280_readTemperature+4,f
  3067  008C  0BDB               	decfsz	??_BMP280_readTemperature+8,f
  3068  008D  2888               	goto	u2395
  3069  008E  0857               	movf	??_BMP280_readTemperature+4,w
  3070  008F  07D3               	addwf	??_BMP280_readTemperature,f
  3071  0090  0858               	movf	??_BMP280_readTemperature+5,w
  3072  0091  3DD4               	addwfc	??_BMP280_readTemperature+1,f
  3073  0092  0859               	movf	??_BMP280_readTemperature+6,w
  3074  0093  3DD5               	addwfc	??_BMP280_readTemperature+2,f
  3075  0094  085A               	movf	??_BMP280_readTemperature+7,w
  3076  0095  3DD6               	addwfc	??_BMP280_readTemperature+3,f
  3077  0096  0856               	movf	??_BMP280_readTemperature+3,w
  3078  0097  00A7               	movwf	___lmul@multiplicand+3
  3079  0098  0855               	movf	??_BMP280_readTemperature+2,w
  3080  0099  00A6               	movwf	___lmul@multiplicand+2
  3081  009A  0854               	movf	??_BMP280_readTemperature+1,w
  3082  009B  00A5               	movwf	___lmul@multiplicand+1
  3083  009C  0853               	movf	??_BMP280_readTemperature,w
  3084  009D  00A4               	movwf	___lmul@multiplicand
  3085  009E  0021               	movlb	1	; select bank1
  3086  009F  0820               	movf	__bmp280_calib^(0+128),w
  3087  00A0  0020               	movlb	0	; select bank0
  3088  00A1  00DC               	movwf	??_BMP280_readTemperature+9
  3089  00A2  0021               	movlb	1	; select bank1
  3090  00A3  0821               	movf	(__bmp280_calib+1)^(0+128),w
  3091  00A4  0020               	movlb	0	; select bank0
  3092  00A5  00DD               	movwf	??_BMP280_readTemperature+10
  3093  00A6  01DE               	clrf	??_BMP280_readTemperature+11
  3094  00A7  01DF               	clrf	??_BMP280_readTemperature+12
  3095  00A8  09DC               	comf	??_BMP280_readTemperature+9,f
  3096  00A9  09DD               	comf	??_BMP280_readTemperature+10,f
  3097  00AA  09DE               	comf	??_BMP280_readTemperature+11,f
  3098  00AB  09DF               	comf	??_BMP280_readTemperature+12,f
  3099  00AC  0ADC               	incf	??_BMP280_readTemperature+9,f
  3100  00AD  1903               	skipnz
  3101  00AE  0ADD               	incf	??_BMP280_readTemperature+10,f
  3102  00AF  1903               	skipnz
  3103  00B0  0ADE               	incf	??_BMP280_readTemperature+11,f
  3104  00B1  1903               	skipnz
  3105  00B2  0ADF               	incf	??_BMP280_readTemperature+12,f
  3106  00B3  0021               	movlb	1	; select bank1
  3107  00B4  0848               	movf	BMP280_readTemperature@adc_T^(0+128),w
  3108  00B5  0020               	movlb	0	; select bank0
  3109  00B6  00E0               	movwf	??_BMP280_readTemperature+13
  3110  00B7  0021               	movlb	1	; select bank1
  3111  00B8  0849               	movf	(BMP280_readTemperature@adc_T+1)^(0+128),w
  3112  00B9  0020               	movlb	0	; select bank0
  3113  00BA  00E1               	movwf	??_BMP280_readTemperature+14
  3114  00BB  0021               	movlb	1	; select bank1
  3115  00BC  084A               	movf	(BMP280_readTemperature@adc_T+2)^(0+128),w
  3116  00BD  0020               	movlb	0	; select bank0
  3117  00BE  00E2               	movwf	??_BMP280_readTemperature+15
  3118  00BF  0021               	movlb	1	; select bank1
  3119  00C0  084B               	movf	(BMP280_readTemperature@adc_T+3)^(0+128),w
  3120  00C1  0020               	movlb	0	; select bank0
  3121  00C2  00E3               	movwf	??_BMP280_readTemperature+16
  3122  00C3  3004               	movlw	4
  3123  00C4  00E4               	movwf	??_BMP280_readTemperature+17
  3124  00C5                     u2405:	
  3125  00C5  37E3               	asrf	??_BMP280_readTemperature+16,f
  3126  00C6  0CE2               	rrf	??_BMP280_readTemperature+15,f
  3127  00C7  0CE1               	rrf	??_BMP280_readTemperature+14,f
  3128  00C8  0CE0               	rrf	??_BMP280_readTemperature+13,f
  3129  00C9  0BE4               	decfsz	??_BMP280_readTemperature+17,f
  3130  00CA  28C5               	goto	u2405
  3131  00CB  0860               	movf	??_BMP280_readTemperature+13,w
  3132  00CC  07DC               	addwf	??_BMP280_readTemperature+9,f
  3133  00CD  0861               	movf	??_BMP280_readTemperature+14,w
  3134  00CE  3DDD               	addwfc	??_BMP280_readTemperature+10,f
  3135  00CF  0862               	movf	??_BMP280_readTemperature+15,w
  3136  00D0  3DDE               	addwfc	??_BMP280_readTemperature+11,f
  3137  00D1  0863               	movf	??_BMP280_readTemperature+16,w
  3138  00D2  3DDF               	addwfc	??_BMP280_readTemperature+12,f
  3139  00D3  085F               	movf	??_BMP280_readTemperature+12,w
  3140  00D4  00A3               	movwf	___lmul@multiplier+3
  3141  00D5  085E               	movf	??_BMP280_readTemperature+11,w
  3142  00D6  00A2               	movwf	___lmul@multiplier+2
  3143  00D7  085D               	movf	??_BMP280_readTemperature+10,w
  3144  00D8  00A1               	movwf	___lmul@multiplier+1
  3145  00D9  085C               	movf	??_BMP280_readTemperature+9,w
  3146  00DA  00A0               	movwf	___lmul@multiplier
  3147  00DB  259F               	fcall	___lmul
  3148  00DC  0020               	movlb	0	; select bank0
  3149  00DD  0820               	movf	?___lmul,w
  3150  00DE  00E5               	movwf	??_BMP280_readTemperature+18
  3151  00DF  0821               	movf	?___lmul+1,w
  3152  00E0  00E6               	movwf	??_BMP280_readTemperature+19
  3153  00E1  0822               	movf	?___lmul+2,w
  3154  00E2  00E7               	movwf	??_BMP280_readTemperature+20
  3155  00E3  0823               	movf	?___lmul+3,w
  3156  00E4  00E8               	movwf	??_BMP280_readTemperature+21
  3157  00E5  300C               	movlw	12
  3158  00E6  00E9               	movwf	??_BMP280_readTemperature+22
  3159  00E7                     u2415:	
  3160  00E7  37E8               	asrf	??_BMP280_readTemperature+21,f
  3161  00E8  0CE7               	rrf	??_BMP280_readTemperature+20,f
  3162  00E9  0CE6               	rrf	??_BMP280_readTemperature+19,f
  3163  00EA  0CE5               	rrf	??_BMP280_readTemperature+18,f
  3164  00EB  0BE9               	decfsz	??_BMP280_readTemperature+22,f
  3165  00EC  28E7               	goto	u2415
  3166  00ED  0868               	movf	??_BMP280_readTemperature+21,w
  3167  00EE  0021               	movlb	1	; select bank1
  3168  00EF  00C5               	movwf	(_BMP280_readTemperature$1161+3)^(0+128)
  3169  00F0  0020               	movlb	0	; select bank0
  3170  00F1  0867               	movf	??_BMP280_readTemperature+20,w
  3171  00F2  0021               	movlb	1	; select bank1
  3172  00F3  00C4               	movwf	(_BMP280_readTemperature$1161+2)^(0+128)
  3173  00F4  0020               	movlb	0	; select bank0
  3174  00F5  0866               	movf	??_BMP280_readTemperature+19,w
  3175  00F6  0021               	movlb	1	; select bank1
  3176  00F7  00C3               	movwf	(_BMP280_readTemperature$1161+1)^(0+128)
  3177  00F8  0020               	movlb	0	; select bank0
  3178  00F9  0865               	movf	??_BMP280_readTemperature+18,w
  3179  00FA  0021               	movlb	1	; select bank1
  3180  00FB  00C2               	movwf	_BMP280_readTemperature$1161^(0+128)
  3181                           
  3182                           ;main.c: 330: t_fine = (((((adc_T>>3) - ((int32_t)_bmp280_calib.dig_T1 <<1))) *;main.c: 
      +                          331: ((int32_t)_bmp280_calib.dig_T2)) >> 11)+;main.c: 333: ((((((adc_T>>4) - ((int32_t)_
      +                          bmp280_calib.dig_T1)) *;main.c: 334: ((adc_T>>4) - ((int32_t)_bmp280_calib.dig_T1))) >> 
      +                          12) *;main.c: 335: ((int32_t)_bmp280_calib.dig_T3)) >> 14);
  3183  00FC  0845               	movf	(_BMP280_readTemperature$1161+3)^(0+128),w
  3184  00FD  0020               	movlb	0	; select bank0
  3185  00FE  00A3               	movwf	___lmul@multiplier+3
  3186  00FF  0021               	movlb	1	; select bank1
  3187  0100  0844               	movf	(_BMP280_readTemperature$1161+2)^(0+128),w
  3188  0101  0020               	movlb	0	; select bank0
  3189  0102  00A2               	movwf	___lmul@multiplier+2
  3190  0103  0021               	movlb	1	; select bank1
  3191  0104  0843               	movf	(_BMP280_readTemperature$1161+1)^(0+128),w
  3192  0105  0020               	movlb	0	; select bank0
  3193  0106  00A1               	movwf	___lmul@multiplier+1
  3194  0107  0021               	movlb	1	; select bank1
  3195  0108  0842               	movf	_BMP280_readTemperature$1161^(0+128),w
  3196  0109  0020               	movlb	0	; select bank0
  3197  010A  00A0               	movwf	___lmul@multiplier
  3198  010B  0021               	movlb	1	; select bank1
  3199  010C  0824               	movf	(__bmp280_calib^(0+128)+4),w
  3200  010D  0020               	movlb	0	; select bank0
  3201  010E  00A4               	movwf	___lmul@multiplicand
  3202  010F  0021               	movlb	1	; select bank1
  3203  0110  0825               	movf	((__bmp280_calib+1)^(0+128)+4),w
  3204  0111  0020               	movlb	0	; select bank0
  3205  0112  00A5               	movwf	___lmul@multiplicand+1
  3206  0113  0D89               	rlf	9,f
  3207  0114  3B89               	subwfb	9,f
  3208  0115  0989               	comf	9,f
  3209  0116  00A6               	movwf	___lmul@multiplicand+2
  3210  0117  00A7               	movwf	___lmul@multiplicand+3
  3211  0118  259F               	fcall	___lmul
  3212  0119  0020               	movlb	0	; select bank0
  3213  011A  0820               	movf	?___lmul,w
  3214  011B  00D3               	movwf	??_BMP280_readTemperature
  3215  011C  0821               	movf	?___lmul+1,w
  3216  011D  00D4               	movwf	??_BMP280_readTemperature+1
  3217  011E  0822               	movf	?___lmul+2,w
  3218  011F  00D5               	movwf	??_BMP280_readTemperature+2
  3219  0120  0823               	movf	?___lmul+3,w
  3220  0121  00D6               	movwf	??_BMP280_readTemperature+3
  3221  0122  300E               	movlw	14
  3222  0123  00D7               	movwf	??_BMP280_readTemperature+4
  3223  0124                     u2425:	
  3224  0124  37D6               	asrf	??_BMP280_readTemperature+3,f
  3225  0125  0CD5               	rrf	??_BMP280_readTemperature+2,f
  3226  0126  0CD4               	rrf	??_BMP280_readTemperature+1,f
  3227  0127  0CD3               	rrf	??_BMP280_readTemperature,f
  3228  0128  0BD7               	decfsz	??_BMP280_readTemperature+4,f
  3229  0129  2924               	goto	u2425
  3230  012A  0021               	movlb	1	; select bank1
  3231  012B  0820               	movf	__bmp280_calib^(0+128),w
  3232  012C  0020               	movlb	0	; select bank0
  3233  012D  00D8               	movwf	??_BMP280_readTemperature+5
  3234  012E  0021               	movlb	1	; select bank1
  3235  012F  0821               	movf	(__bmp280_calib+1)^(0+128),w
  3236  0130  0020               	movlb	0	; select bank0
  3237  0131  00D9               	movwf	??_BMP280_readTemperature+6
  3238  0132  01DA               	clrf	??_BMP280_readTemperature+7
  3239  0133  01DB               	clrf	??_BMP280_readTemperature+8
  3240  0134  3001               	movlw	1
  3241  0135                     u2435:	
  3242  0135  35D8               	lslf	??_BMP280_readTemperature+5,f
  3243  0136  0DD9               	rlf	??_BMP280_readTemperature+6,f
  3244  0137  0DDA               	rlf	??_BMP280_readTemperature+7,f
  3245  0138  0DDB               	rlf	??_BMP280_readTemperature+8,f
  3246  0139  0B89               	decfsz	9,f
  3247  013A  2935               	goto	u2435
  3248  013B  09D8               	comf	??_BMP280_readTemperature+5,f
  3249  013C  09D9               	comf	??_BMP280_readTemperature+6,f
  3250  013D  09DA               	comf	??_BMP280_readTemperature+7,f
  3251  013E  09DB               	comf	??_BMP280_readTemperature+8,f
  3252  013F  0AD8               	incf	??_BMP280_readTemperature+5,f
  3253  0140  1903               	skipnz
  3254  0141  0AD9               	incf	??_BMP280_readTemperature+6,f
  3255  0142  1903               	skipnz
  3256  0143  0ADA               	incf	??_BMP280_readTemperature+7,f
  3257  0144  1903               	skipnz
  3258  0145  0ADB               	incf	??_BMP280_readTemperature+8,f
  3259  0146  0021               	movlb	1	; select bank1
  3260  0147  0848               	movf	BMP280_readTemperature@adc_T^(0+128),w
  3261  0148  0020               	movlb	0	; select bank0
  3262  0149  00DC               	movwf	??_BMP280_readTemperature+9
  3263  014A  0021               	movlb	1	; select bank1
  3264  014B  0849               	movf	(BMP280_readTemperature@adc_T+1)^(0+128),w
  3265  014C  0020               	movlb	0	; select bank0
  3266  014D  00DD               	movwf	??_BMP280_readTemperature+10
  3267  014E  0021               	movlb	1	; select bank1
  3268  014F  084A               	movf	(BMP280_readTemperature@adc_T+2)^(0+128),w
  3269  0150  0020               	movlb	0	; select bank0
  3270  0151  00DE               	movwf	??_BMP280_readTemperature+11
  3271  0152  0021               	movlb	1	; select bank1
  3272  0153  084B               	movf	(BMP280_readTemperature@adc_T+3)^(0+128),w
  3273  0154  0020               	movlb	0	; select bank0
  3274  0155  00DF               	movwf	??_BMP280_readTemperature+12
  3275  0156  3003               	movlw	3
  3276  0157  00E0               	movwf	??_BMP280_readTemperature+13
  3277  0158                     u2445:	
  3278  0158  37DF               	asrf	??_BMP280_readTemperature+12,f
  3279  0159  0CDE               	rrf	??_BMP280_readTemperature+11,f
  3280  015A  0CDD               	rrf	??_BMP280_readTemperature+10,f
  3281  015B  0CDC               	rrf	??_BMP280_readTemperature+9,f
  3282  015C  0BE0               	decfsz	??_BMP280_readTemperature+13,f
  3283  015D  2958               	goto	u2445
  3284  015E  085C               	movf	??_BMP280_readTemperature+9,w
  3285  015F  07D8               	addwf	??_BMP280_readTemperature+5,f
  3286  0160  085D               	movf	??_BMP280_readTemperature+10,w
  3287  0161  3DD9               	addwfc	??_BMP280_readTemperature+6,f
  3288  0162  085E               	movf	??_BMP280_readTemperature+11,w
  3289  0163  3DDA               	addwfc	??_BMP280_readTemperature+7,f
  3290  0164  085F               	movf	??_BMP280_readTemperature+12,w
  3291  0165  3DDB               	addwfc	??_BMP280_readTemperature+8,f
  3292  0166  085B               	movf	??_BMP280_readTemperature+8,w
  3293  0167  00A3               	movwf	___lmul@multiplier+3
  3294  0168  085A               	movf	??_BMP280_readTemperature+7,w
  3295  0169  00A2               	movwf	___lmul@multiplier+2
  3296  016A  0859               	movf	??_BMP280_readTemperature+6,w
  3297  016B  00A1               	movwf	___lmul@multiplier+1
  3298  016C  0858               	movf	??_BMP280_readTemperature+5,w
  3299  016D  00A0               	movwf	___lmul@multiplier
  3300  016E  0021               	movlb	1	; select bank1
  3301  016F  0822               	movf	(__bmp280_calib^(0+128)+2),w
  3302  0170  0020               	movlb	0	; select bank0
  3303  0171  00A4               	movwf	___lmul@multiplicand
  3304  0172  0021               	movlb	1	; select bank1
  3305  0173  0823               	movf	((__bmp280_calib+1)^(0+128)+2),w
  3306  0174  0020               	movlb	0	; select bank0
  3307  0175  00A5               	movwf	___lmul@multiplicand+1
  3308  0176  0D89               	rlf	9,f
  3309  0177  3B89               	subwfb	9,f
  3310  0178  0989               	comf	9,f
  3311  0179  00A6               	movwf	___lmul@multiplicand+2
  3312  017A  00A7               	movwf	___lmul@multiplicand+3
  3313  017B  259F               	fcall	___lmul
  3314  017C  0020               	movlb	0	; select bank0
  3315  017D  0820               	movf	?___lmul,w
  3316  017E  00E1               	movwf	??_BMP280_readTemperature+14
  3317  017F  0821               	movf	?___lmul+1,w
  3318  0180  00E2               	movwf	??_BMP280_readTemperature+15
  3319  0181  0822               	movf	?___lmul+2,w
  3320  0182  00E3               	movwf	??_BMP280_readTemperature+16
  3321  0183  0823               	movf	?___lmul+3,w
  3322  0184  00E4               	movwf	??_BMP280_readTemperature+17
  3323  0185  300B               	movlw	11
  3324  0186  00E5               	movwf	??_BMP280_readTemperature+18
  3325  0187                     u2455:	
  3326  0187  37E4               	asrf	??_BMP280_readTemperature+17,f
  3327  0188  0CE3               	rrf	??_BMP280_readTemperature+16,f
  3328  0189  0CE2               	rrf	??_BMP280_readTemperature+15,f
  3329  018A  0CE1               	rrf	??_BMP280_readTemperature+14,f
  3330  018B  0BE5               	decfsz	??_BMP280_readTemperature+18,f
  3331  018C  2987               	goto	u2455
  3332  018D  0861               	movf	??_BMP280_readTemperature+14,w
  3333  018E  07D3               	addwf	??_BMP280_readTemperature,f
  3334  018F  0862               	movf	??_BMP280_readTemperature+15,w
  3335  0190  3DD4               	addwfc	??_BMP280_readTemperature+1,f
  3336  0191  0863               	movf	??_BMP280_readTemperature+16,w
  3337  0192  3DD5               	addwfc	??_BMP280_readTemperature+2,f
  3338  0193  0864               	movf	??_BMP280_readTemperature+17,w
  3339  0194  3DD6               	addwfc	??_BMP280_readTemperature+3,f
  3340  0195  0856               	movf	??_BMP280_readTemperature+3,w
  3341  0196  0021               	movlb	1	; select bank1
  3342  0197  00AE               	movwf	(_t_fine+3)^(0+128)
  3343  0198  0020               	movlb	0	; select bank0
  3344  0199  0855               	movf	??_BMP280_readTemperature+2,w
  3345  019A  0021               	movlb	1	; select bank1
  3346  019B  00AD               	movwf	(_t_fine+2)^(0+128)
  3347  019C  0020               	movlb	0	; select bank0
  3348  019D  0854               	movf	??_BMP280_readTemperature+1,w
  3349  019E  0021               	movlb	1	; select bank1
  3350  019F  00AC               	movwf	(_t_fine+1)^(0+128)
  3351  01A0  0020               	movlb	0	; select bank0
  3352  01A1  0853               	movf	??_BMP280_readTemperature,w
  3353  01A2  0021               	movlb	1	; select bank1
  3354  01A3  00AB               	movwf	_t_fine^(0+128)
  3355                           
  3356                           ;main.c: 339: uint16_t T = (t_fine * 5 + 128) >> 8;
  3357  01A4  3080               	movlw	128
  3358  01A5  0020               	movlb	0	; select bank0
  3359  01A6  00D3               	movwf	??_BMP280_readTemperature
  3360  01A7  3000               	movlw	0
  3361  01A8  00D4               	movwf	??_BMP280_readTemperature+1
  3362  01A9  3000               	movlw	0
  3363  01AA  00D5               	movwf	??_BMP280_readTemperature+2
  3364  01AB  3000               	movlw	0
  3365  01AC  00D6               	movwf	??_BMP280_readTemperature+3
  3366  01AD  0021               	movlb	1	; select bank1
  3367  01AE  082E               	movf	(_t_fine+3)^(0+128),w
  3368  01AF  0020               	movlb	0	; select bank0
  3369  01B0  00A3               	movwf	___lmul@multiplier+3
  3370  01B1  0021               	movlb	1	; select bank1
  3371  01B2  082D               	movf	(_t_fine+2)^(0+128),w
  3372  01B3  0020               	movlb	0	; select bank0
  3373  01B4  00A2               	movwf	___lmul@multiplier+2
  3374  01B5  0021               	movlb	1	; select bank1
  3375  01B6  082C               	movf	(_t_fine+1)^(0+128),w
  3376  01B7  0020               	movlb	0	; select bank0
  3377  01B8  00A1               	movwf	___lmul@multiplier+1
  3378  01B9  0021               	movlb	1	; select bank1
  3379  01BA  082B               	movf	_t_fine^(0+128),w
  3380  01BB  0020               	movlb	0	; select bank0
  3381  01BC  00A0               	movwf	___lmul@multiplier
  3382  01BD  3000               	movlw	0
  3383  01BE  00A7               	movwf	___lmul@multiplicand+3
  3384  01BF  3000               	movlw	0
  3385  01C0  00A6               	movwf	___lmul@multiplicand+2
  3386  01C1  3000               	movlw	0
  3387  01C2  00A5               	movwf	___lmul@multiplicand+1
  3388  01C3  3005               	movlw	5
  3389  01C4  00A4               	movwf	___lmul@multiplicand
  3390  01C5  259F               	fcall	___lmul
  3391  01C6  0020               	movlb	0	; select bank0
  3392  01C7  0820               	movf	?___lmul,w
  3393  01C8  07D3               	addwf	??_BMP280_readTemperature,f
  3394  01C9  0821               	movf	?___lmul+1,w
  3395  01CA  3DD4               	addwfc	??_BMP280_readTemperature+1,f
  3396  01CB  0822               	movf	?___lmul+2,w
  3397  01CC  3DD5               	addwfc	??_BMP280_readTemperature+2,f
  3398  01CD  0823               	movf	?___lmul+3,w
  3399  01CE  3DD6               	addwfc	??_BMP280_readTemperature+3,f
  3400  01CF  3008               	movlw	8
  3401  01D0  00D7               	movwf	??_BMP280_readTemperature+4
  3402  01D1                     u2465:	
  3403  01D1  37D6               	asrf	??_BMP280_readTemperature+3,f
  3404  01D2  0CD5               	rrf	??_BMP280_readTemperature+2,f
  3405  01D3  0CD4               	rrf	??_BMP280_readTemperature+1,f
  3406  01D4  0CD3               	rrf	??_BMP280_readTemperature,f
  3407  01D5  0BD7               	decfsz	??_BMP280_readTemperature+4,f
  3408  01D6  29D1               	goto	u2465
  3409  01D7  0854               	movf	??_BMP280_readTemperature+1,w
  3410  01D8  0021               	movlb	1	; select bank1
  3411  01D9  00C7               	movwf	(BMP280_readTemperature@T+1)^(0+128)
  3412  01DA  0020               	movlb	0	; select bank0
  3413  01DB  0853               	movf	??_BMP280_readTemperature,w
  3414  01DC  0021               	movlb	1	; select bank1
  3415  01DD  00C6               	movwf	BMP280_readTemperature@T^(0+128)
  3416                           
  3417                           ;main.c: 340: return ((T*9)/5)+3200;
  3418  01DE  3005               	movlw	5
  3419  01DF  0020               	movlb	0	; select bank0
  3420  01E0  00A6               	movwf	___lwdiv@divisor
  3421  01E1  3000               	movlw	0
  3422  01E2  00A7               	movwf	___lwdiv@divisor+1
  3423  01E3  0021               	movlb	1	; select bank1
  3424  01E4  0847               	movf	(BMP280_readTemperature@T+1)^(0+128),w
  3425  01E5  0020               	movlb	0	; select bank0
  3426  01E6  00A1               	movwf	___wmul@multiplier+1
  3427  01E7  0021               	movlb	1	; select bank1
  3428  01E8  0846               	movf	BMP280_readTemperature@T^(0+128),w
  3429  01E9  0020               	movlb	0	; select bank0
  3430  01EA  00A0               	movwf	___wmul@multiplier
  3431  01EB  3009               	movlw	9
  3432  01EC  00A2               	movwf	___wmul@multiplicand
  3433  01ED  3000               	movlw	0
  3434  01EE  00A3               	movwf	___wmul@multiplicand+1
  3435  01EF  26FD               	fcall	___wmul
  3436  01F0  0020               	movlb	0	; select bank0
  3437  01F1  0821               	movf	?___wmul+1,w
  3438  01F2  00A9               	movwf	___lwdiv@dividend+1
  3439  01F3  0820               	movf	?___wmul,w
  3440  01F4  00A8               	movwf	___lwdiv@dividend
  3441  01F5  256A               	fcall	___lwdiv
  3442  01F6  0020               	movlb	0	; select bank0
  3443  01F7  0826               	movf	?___lwdiv,w
  3444  01F8  3E80               	addlw	128
  3445  01F9  00D1               	movwf	?_BMP280_readTemperature
  3446  01FA  300C               	movlw	12
  3447  01FB  3D27               	addwfc	?___lwdiv+1,w
  3448  01FC  00D2               	movwf	?_BMP280_readTemperature+1
  3449  01FD  0008               	return
  3450  01FE                     __end_of_BMP280_readTemperature:	
  3451                           
  3452                           	psect	text13
  3453  06FD                     __ptext13:	
  3454 ;; *************** function ___wmul *****************
  3455 ;; Defined at:
  3456 ;;		line 15 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3459 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  product         2    4[BANK0 ] unsigned int 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  2    0[BANK0 ] unsigned int 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3471 ;;      Params:         0       4       0       0
  3472 ;;      Locals:         0       2       0       0
  3473 ;;      Temps:          0       0       0       0
  3474 ;;      Totals:         0       6       0       0
  3475 ;;Total ram usage:        6 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    4
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_BMP280_readTemperature
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           
  3486                           ;psect for function ___wmul
  3487  06FD                     ___wmul:	
  3488                           
  3489                           ;incstack = 0
  3490                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3491  06FD  0020               	movlb	0	; select bank0
  3492  06FE  01A4               	clrf	___wmul@product
  3493  06FF  01A5               	clrf	___wmul@product+1
  3494  0700                     l2323:	
  3495  0700  1C20               	btfss	___wmul@multiplier,0
  3496  0701  2F06               	goto	l451
  3497  0702  0822               	movf	___wmul@multiplicand,w
  3498  0703  07A4               	addwf	___wmul@product,f
  3499  0704  0823               	movf	___wmul@multiplicand+1,w
  3500  0705  3DA5               	addwfc	___wmul@product+1,f
  3501  0706                     l451:	
  3502  0706  3001               	movlw	1
  3503  0707                     u2165:	
  3504  0707  35A2               	lslf	___wmul@multiplicand,f
  3505  0708  0DA3               	rlf	___wmul@multiplicand+1,f
  3506  0709  0B89               	decfsz	9,f
  3507  070A  2F07               	goto	u2165
  3508  070B  3001               	movlw	1
  3509  070C                     u2175:	
  3510  070C  36A1               	lsrf	___wmul@multiplier+1,f
  3511  070D  0CA0               	rrf	___wmul@multiplier,f
  3512  070E  0B89               	decfsz	9,f
  3513  070F  2F0C               	goto	u2175
  3514  0710  0820               	movf	___wmul@multiplier,w
  3515  0711  0421               	iorwf	___wmul@multiplier+1,w
  3516  0712  1D03               	btfss	3,2
  3517  0713  2F00               	goto	l2323
  3518  0714  0825               	movf	___wmul@product+1,w
  3519  0715  00A1               	movwf	?___wmul+1
  3520  0716  0824               	movf	___wmul@product,w
  3521  0717  00A0               	movwf	?___wmul
  3522  0718  0008               	return
  3523  0719                     __end_of___wmul:	
  3524                           
  3525                           	psect	text14
  3526  056A                     __ptext14:	
  3527 ;; *************** function ___lwdiv *****************
  3528 ;; Defined at:
  3529 ;;		line 5 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  divisor         2    6[BANK0 ] unsigned int 
  3532 ;;  dividend        2    8[BANK0 ] unsigned int 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  quotient        2   12[BANK0 ] unsigned int 
  3535 ;;  counter         1   11[BANK0 ] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2    6[BANK0 ] unsigned int 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3545 ;;      Params:         0       4       0       0
  3546 ;;      Locals:         0       3       0       0
  3547 ;;      Temps:          0       1       0       0
  3548 ;;      Totals:         0       8       0       0
  3549 ;;Total ram usage:        8 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    4
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_BMP280_readTemperature
  3556 ;;		_DisplayNum
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           
  3562                           ;psect for function ___lwdiv
  3563  056A                     ___lwdiv:	
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3567  056A  0020               	movlb	0	; select bank0
  3568  056B  01AC               	clrf	___lwdiv@quotient
  3569  056C  01AD               	clrf	___lwdiv@quotient+1
  3570  056D  0826               	movf	___lwdiv@divisor,w
  3571  056E  0427               	iorwf	___lwdiv@divisor+1,w
  3572  056F  1903               	btfsc	3,2
  3573  0570  2D9A               	goto	l2371
  3574  0571  01AB               	clrf	___lwdiv@counter
  3575  0572  0AAB               	incf	___lwdiv@counter,f
  3576  0573                     l2359:	
  3577  0573  1BA7               	btfsc	___lwdiv@divisor+1,7
  3578  0574  2D7F               	goto	l2361
  3579  0575  3001               	movlw	1
  3580  0576                     u2245:	
  3581  0576  35A6               	lslf	___lwdiv@divisor,f
  3582  0577  0DA7               	rlf	___lwdiv@divisor+1,f
  3583  0578  0B89               	decfsz	9,f
  3584  0579  2D76               	goto	u2245
  3585  057A  3001               	movlw	1
  3586  057B  00AA               	movwf	??___lwdiv
  3587  057C  082A               	movf	??___lwdiv,w
  3588  057D  07AB               	addwf	___lwdiv@counter,f
  3589  057E  2D73               	goto	l2359
  3590  057F                     l2361:	
  3591  057F  3001               	movlw	1
  3592  0580                     u2265:	
  3593  0580  35AC               	lslf	___lwdiv@quotient,f
  3594  0581  0DAD               	rlf	___lwdiv@quotient+1,f
  3595  0582  0B89               	decfsz	9,f
  3596  0583  2D80               	goto	u2265
  3597  0584  0827               	movf	___lwdiv@divisor+1,w
  3598  0585  0229               	subwf	___lwdiv@dividend+1,w
  3599  0586  1D03               	skipz
  3600  0587  2D8A               	goto	u2275
  3601  0588  0826               	movf	___lwdiv@divisor,w
  3602  0589  0228               	subwf	___lwdiv@dividend,w
  3603  058A                     u2275:	
  3604  058A  1C03               	skipc
  3605  058B  2D91               	goto	l2367
  3606  058C  0826               	movf	___lwdiv@divisor,w
  3607  058D  02A8               	subwf	___lwdiv@dividend,f
  3608  058E  0827               	movf	___lwdiv@divisor+1,w
  3609  058F  3BA9               	subwfb	___lwdiv@dividend+1,f
  3610  0590  142C               	bsf	___lwdiv@quotient,0
  3611  0591                     l2367:	
  3612  0591  3001               	movlw	1
  3613  0592                     u2285:	
  3614  0592  36A7               	lsrf	___lwdiv@divisor+1,f
  3615  0593  0CA6               	rrf	___lwdiv@divisor,f
  3616  0594  0B89               	decfsz	9,f
  3617  0595  2D92               	goto	u2285
  3618  0596  3001               	movlw	1
  3619  0597  02AB               	subwf	___lwdiv@counter,f
  3620  0598  1D03               	btfss	3,2
  3621  0599  2D7F               	goto	l2361
  3622  059A                     l2371:	
  3623  059A  082D               	movf	___lwdiv@quotient+1,w
  3624  059B  00A7               	movwf	?___lwdiv+1
  3625  059C  082C               	movf	___lwdiv@quotient,w
  3626  059D  00A6               	movwf	?___lwdiv
  3627  059E  0008               	return
  3628  059F                     __end_of___lwdiv:	
  3629                           
  3630                           	psect	text15
  3631  059F                     __ptext15:	
  3632 ;; *************** function ___lmul *****************
  3633 ;; Defined at:
  3634 ;;		line 15 in file "/Applications/microchip/xc8/v2.00/pic/sources/c90/common/Umul32.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3637 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  product         4    8[BANK0 ] unsigned long 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  4    0[BANK0 ] unsigned long 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3649 ;;      Params:         0       8       0       0
  3650 ;;      Locals:         0       4       0       0
  3651 ;;      Temps:          0       0       0       0
  3652 ;;      Totals:         0      12       0       0
  3653 ;;Total ram usage:       12 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    4
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_BMP280_readTemperature
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function ___lmul
  3665  059F                     ___lmul:	
  3666                           
  3667                           ;incstack = 0
  3668                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3669  059F  3000               	movlw	0
  3670  05A0  0020               	movlb	0	; select bank0
  3671  05A1  00AB               	movwf	___lmul@product+3
  3672  05A2  3000               	movlw	0
  3673  05A3  00AA               	movwf	___lmul@product+2
  3674  05A4  3000               	movlw	0
  3675  05A5  00A9               	movwf	___lmul@product+1
  3676  05A6  3000               	movlw	0
  3677  05A7  00A8               	movwf	___lmul@product
  3678  05A8                     l2337:	
  3679  05A8  1C20               	btfss	___lmul@multiplier,0
  3680  05A9  2DB2               	goto	l2341
  3681  05AA  0824               	movf	___lmul@multiplicand,w
  3682  05AB  07A8               	addwf	___lmul@product,f
  3683  05AC  0825               	movf	___lmul@multiplicand+1,w
  3684  05AD  3DA9               	addwfc	___lmul@product+1,f
  3685  05AE  0826               	movf	___lmul@multiplicand+2,w
  3686  05AF  3DAA               	addwfc	___lmul@product+2,f
  3687  05B0  0827               	movf	___lmul@multiplicand+3,w
  3688  05B1  3DAB               	addwfc	___lmul@product+3,f
  3689  05B2                     l2341:	
  3690  05B2  3001               	movlw	1
  3691  05B3                     u2205:	
  3692  05B3  35A4               	lslf	___lmul@multiplicand,f
  3693  05B4  0DA5               	rlf	___lmul@multiplicand+1,f
  3694  05B5  0DA6               	rlf	___lmul@multiplicand+2,f
  3695  05B6  0DA7               	rlf	___lmul@multiplicand+3,f
  3696  05B7  0B89               	decfsz	9,f
  3697  05B8  2DB3               	goto	u2205
  3698  05B9  3001               	movlw	1
  3699  05BA                     u2215:	
  3700  05BA  36A3               	lsrf	___lmul@multiplier+3,f
  3701  05BB  0CA2               	rrf	___lmul@multiplier+2,f
  3702  05BC  0CA1               	rrf	___lmul@multiplier+1,f
  3703  05BD  0CA0               	rrf	___lmul@multiplier,f
  3704  05BE  0B89               	decfsz	9,f
  3705  05BF  2DBA               	goto	u2215
  3706  05C0  0823               	movf	___lmul@multiplier+3,w
  3707  05C1  0422               	iorwf	___lmul@multiplier+2,w
  3708  05C2  0421               	iorwf	___lmul@multiplier+1,w
  3709  05C3  0420               	iorwf	___lmul@multiplier,w
  3710  05C4  1D03               	skipz
  3711  05C5  2DA8               	goto	l2337
  3712  05C6  082B               	movf	___lmul@product+3,w
  3713  05C7  00A3               	movwf	?___lmul+3
  3714  05C8  082A               	movf	___lmul@product+2,w
  3715  05C9  00A2               	movwf	?___lmul+2
  3716  05CA  0829               	movf	___lmul@product+1,w
  3717  05CB  00A1               	movwf	?___lmul+1
  3718  05CC  0828               	movf	___lmul@product,w
  3719  05CD  00A0               	movwf	?___lmul
  3720  05CE  0008               	return
  3721  05CF                     __end_of___lmul:	
  3722                           
  3723                           	psect	text16
  3724  04D7                     __ptext16:	
  3725 ;; *************** function _BMP280_read24_le *****************
  3726 ;; Defined at:
  3727 ;;		line 296 in file "main.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  reg             1    wreg     unsigned char 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  reg             1   45[BANK0 ] unsigned char 
  3732 ;;  value           3   46[BANK0 ] unsigned char [3]
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  4   29[BANK0 ] unsigned long 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3742 ;;      Params:         0       4       0       0
  3743 ;;      Locals:         0       4       0       0
  3744 ;;      Temps:          0      12       0       0
  3745 ;;      Totals:         0      20       0       0
  3746 ;;Total ram usage:       20 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    7
  3749 ;; This function calls:
  3750 ;;		_BMP280_Read
  3751 ;; This function is called by:
  3752 ;;		_BMP280_readTemperature
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _BMP280_read24_le
  3758  04D7                     _BMP280_read24_le:	
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _BMP280_read24_le: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3762                           ;BMP280_read24_le@reg stored from wreg
  3763  04D7  0020               	movlb	0	; select bank0
  3764  04D8  00CD               	movwf	BMP280_read24_le@reg
  3765                           
  3766                           ;main.c: 298: uint8_t value[3]={0,0,0};
  3767  04D9  0021               	movlb	1	; select bank1
  3768  04DA  082F               	movf	BMP280_read24_le@F2349^(0+128),w
  3769  04DB  0020               	movlb	0	; select bank0
  3770  04DC  00CE               	movwf	BMP280_read24_le@value
  3771  04DD  0021               	movlb	1	; select bank1
  3772  04DE  0830               	movf	(BMP280_read24_le@F2349+1)^(0+128),w
  3773  04DF  0020               	movlb	0	; select bank0
  3774  04E0  00CF               	movwf	BMP280_read24_le@value+1
  3775  04E1  0021               	movlb	1	; select bank1
  3776  04E2  0831               	movf	(BMP280_read24_le@F2349+2)^(0+128),w
  3777  04E3  0020               	movlb	0	; select bank0
  3778  04E4  00D0               	movwf	BMP280_read24_le@value+2
  3779                           
  3780                           ;main.c: 300: BMP280_Read( reg, value, 3 );
  3781  04E5  304E               	movlw	(low (BMP280_read24_le@value| 0))& (0+255)
  3782  04E6  00C1               	movwf	??_BMP280_read24_le
  3783  04E7  0841               	movf	??_BMP280_read24_le,w
  3784  04E8  00AE               	movwf	BMP280_Read@pData
  3785  04E9  3003               	movlw	3
  3786  04EA  00AF               	movwf	BMP280_Read@nCount
  3787  04EB  3000               	movlw	0
  3788  04EC  00B0               	movwf	BMP280_Read@nCount+1
  3789  04ED  084D               	movf	BMP280_read24_le@reg,w
  3790  04EE  23AA               	fcall	_BMP280_Read
  3791                           
  3792                           ;main.c: 302: return ((uint32_t)value[0])<<16 | (uint32_t)value[1]<<8 | (uint32_t)value[
      +                          2];
  3793  04EF  0020               	movlb	0	; select bank0
  3794  04F0  0850               	movf	BMP280_read24_le@value+2,w
  3795  04F1  00C1               	movwf	??_BMP280_read24_le
  3796  04F2  01C2               	clrf	??_BMP280_read24_le+1
  3797  04F3  01C3               	clrf	??_BMP280_read24_le+2
  3798  04F4  01C4               	clrf	??_BMP280_read24_le+3
  3799  04F5  084F               	movf	BMP280_read24_le@value+1,w
  3800  04F6  00C5               	movwf	??_BMP280_read24_le+4
  3801  04F7  01C6               	clrf	??_BMP280_read24_le+5
  3802  04F8  01C7               	clrf	??_BMP280_read24_le+6
  3803  04F9  01C8               	clrf	??_BMP280_read24_le+7
  3804  04FA  3008               	movlw	8
  3805  04FB                     u2095:	
  3806  04FB  35C5               	lslf	??_BMP280_read24_le+4,f
  3807  04FC  0DC6               	rlf	??_BMP280_read24_le+5,f
  3808  04FD  0DC7               	rlf	??_BMP280_read24_le+6,f
  3809  04FE  0DC8               	rlf	??_BMP280_read24_le+7,f
  3810  04FF  0B89               	decfsz	9,f
  3811  0500  2CFB               	goto	u2095
  3812  0501  084E               	movf	BMP280_read24_le@value,w
  3813  0502  00C9               	movwf	??_BMP280_read24_le+8
  3814  0503  01CA               	clrf	??_BMP280_read24_le+9
  3815  0504  01CB               	clrf	??_BMP280_read24_le+10
  3816  0505  01CC               	clrf	??_BMP280_read24_le+11
  3817  0506  3010               	movlw	16
  3818  0507                     u2105:	
  3819  0507  35C9               	lslf	??_BMP280_read24_le+8,f
  3820  0508  0DCA               	rlf	??_BMP280_read24_le+9,f
  3821  0509  0DCB               	rlf	??_BMP280_read24_le+10,f
  3822  050A  0DCC               	rlf	??_BMP280_read24_le+11,f
  3823  050B  0B89               	decfsz	9,f
  3824  050C  2D07               	goto	u2105
  3825  050D  0849               	movf	??_BMP280_read24_le+8,w
  3826  050E  04C5               	iorwf	??_BMP280_read24_le+4,f
  3827  050F  084A               	movf	??_BMP280_read24_le+9,w
  3828  0510  04C6               	iorwf	??_BMP280_read24_le+5,f
  3829  0511  084B               	movf	??_BMP280_read24_le+10,w
  3830  0512  04C7               	iorwf	??_BMP280_read24_le+6,f
  3831  0513  084C               	movf	??_BMP280_read24_le+11,w
  3832  0514  04C8               	iorwf	??_BMP280_read24_le+7,f
  3833  0515  0841               	movf	??_BMP280_read24_le,w
  3834  0516  0445               	iorwf	??_BMP280_read24_le+4,w
  3835  0517  00BD               	movwf	?_BMP280_read24_le
  3836  0518  0842               	movf	??_BMP280_read24_le+1,w
  3837  0519  0446               	iorwf	??_BMP280_read24_le+5,w
  3838  051A  00BE               	movwf	?_BMP280_read24_le+1
  3839  051B  0843               	movf	??_BMP280_read24_le+2,w
  3840  051C  0447               	iorwf	??_BMP280_read24_le+6,w
  3841  051D  00BF               	movwf	?_BMP280_read24_le+2
  3842  051E  0844               	movf	??_BMP280_read24_le+3,w
  3843  051F  0448               	iorwf	??_BMP280_read24_le+7,w
  3844  0520  00C0               	movwf	?_BMP280_read24_le+3
  3845  0521  0008               	return
  3846  0522                     __end_of_BMP280_read24_le:	
  3847                           
  3848                           	psect	text17
  3849  06DE                     __ptext17:	
  3850 ;; *************** function _BMP280_readCoefficients *****************
  3851 ;; Defined at:
  3852 ;;		line 305 in file "main.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3866 ;;      Params:         0       0       0       0
  3867 ;;      Locals:         0       0       0       0
  3868 ;;      Temps:          0       0       0       0
  3869 ;;      Totals:         0       0       0       0
  3870 ;;Total ram usage:        0 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    9
  3873 ;; This function calls:
  3874 ;;		_BMP280_read16
  3875 ;;		_BMP280_readS16
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           
  3882                           ;psect for function _BMP280_readCoefficients
  3883  06DE                     _BMP280_readCoefficients:	
  3884                           
  3885                           ;main.c: 307: _bmp280_calib.dig_T1 = BMP280_read16(BMP280_REGISTER_DIG_T1);
  3886                           
  3887                           ;incstack = 0
  3888                           ; Regs used in _BMP280_readCoefficients: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  3889  06DE  3088               	movlw	136
  3890  06DF  275E               	fcall	_BMP280_read16
  3891  06E0  0020               	movlb	0	; select bank0
  3892  06E1  083E               	movf	?_BMP280_read16+1,w
  3893  06E2  0021               	movlb	1	; select bank1
  3894  06E3  00A1               	movwf	(__bmp280_calib+1)^(0+128)
  3895  06E4  0020               	movlb	0	; select bank0
  3896  06E5  083D               	movf	?_BMP280_read16,w
  3897  06E6  0021               	movlb	1	; select bank1
  3898  06E7  00A0               	movwf	__bmp280_calib^(0+128)
  3899                           
  3900                           ;main.c: 308: _bmp280_calib.dig_T2 = BMP280_readS16(BMP280_REGISTER_DIG_T2);
  3901  06E8  308A               	movlw	138
  3902  06E9  27C1               	fcall	_BMP280_readS16
  3903  06EA  0020               	movlb	0	; select bank0
  3904  06EB  0844               	movf	?_BMP280_readS16+1,w
  3905  06EC  0021               	movlb	1	; select bank1
  3906  06ED  00A3               	movwf	((__bmp280_calib+1)^(0+128)+2)
  3907  06EE  0020               	movlb	0	; select bank0
  3908  06EF  0843               	movf	?_BMP280_readS16,w
  3909  06F0  0021               	movlb	1	; select bank1
  3910  06F1  00A2               	movwf	(__bmp280_calib^(0+128)+2)
  3911                           
  3912                           ;main.c: 309: _bmp280_calib.dig_T3 = BMP280_readS16(BMP280_REGISTER_DIG_T3);
  3913  06F2  308C               	movlw	140
  3914  06F3  27C1               	fcall	_BMP280_readS16
  3915  06F4  0020               	movlb	0	; select bank0
  3916  06F5  0844               	movf	?_BMP280_readS16+1,w
  3917  06F6  0021               	movlb	1	; select bank1
  3918  06F7  00A5               	movwf	((__bmp280_calib+1)^(0+128)+4)
  3919  06F8  0020               	movlb	0	; select bank0
  3920  06F9  0843               	movf	?_BMP280_readS16,w
  3921  06FA  0021               	movlb	1	; select bank1
  3922  06FB  00A4               	movwf	(__bmp280_calib^(0+128)+4)
  3923  06FC  0008               	return
  3924  06FD                     __end_of_BMP280_readCoefficients:	
  3925                           
  3926                           	psect	text18
  3927  07C1                     __ptext18:	
  3928 ;; *************** function _BMP280_readS16 *****************
  3929 ;; Defined at:
  3930 ;;		line 284 in file "main.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  reg             1    wreg     unsigned char 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  reg             1   38[BANK0 ] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2   35[BANK0 ] int 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3944 ;;      Params:         0       3       0       0
  3945 ;;      Locals:         0       1       0       0
  3946 ;;      Temps:          0       0       0       0
  3947 ;;      Totals:         0       4       0       0
  3948 ;;Total ram usage:        4 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    8
  3951 ;; This function calls:
  3952 ;;		_BMP280_read16
  3953 ;; This function is called by:
  3954 ;;		_BMP280_readCoefficients
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function _BMP280_readS16
  3960  07C1                     _BMP280_readS16:	
  3961                           
  3962                           ;incstack = 0
  3963                           ; Regs used in _BMP280_readS16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3964                           ;BMP280_readS16@reg stored from wreg
  3965  07C1  0020               	movlb	0	; select bank0
  3966  07C2  00C6               	movwf	BMP280_readS16@reg
  3967                           
  3968                           ;main.c: 286: return (int16_t)BMP280_read16(reg);
  3969  07C3  0846               	movf	BMP280_readS16@reg,w
  3970  07C4  275E               	fcall	_BMP280_read16
  3971  07C5  0020               	movlb	0	; select bank0
  3972  07C6  083E               	movf	?_BMP280_read16+1,w
  3973  07C7  00C4               	movwf	?_BMP280_readS16+1
  3974  07C8  083D               	movf	?_BMP280_read16,w
  3975  07C9  00C3               	movwf	?_BMP280_readS16
  3976  07CA  0008               	return
  3977  07CB                     __end_of_BMP280_readS16:	
  3978                           
  3979                           	psect	text19
  3980  075E                     __ptext19:	
  3981 ;; *************** function _BMP280_read16 *****************
  3982 ;; Defined at:
  3983 ;;		line 263 in file "main.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  reg             1    wreg     unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  reg             1   32[BANK0 ] unsigned char 
  3988 ;;  value           2   33[BANK0 ] unsigned int 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2   29[BANK0 ] unsigned int 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3998 ;;      Params:         0       2       0       0
  3999 ;;      Locals:         0       3       0       0
  4000 ;;      Temps:          0       1       0       0
  4001 ;;      Totals:         0       6       0       0
  4002 ;;Total ram usage:        6 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    7
  4005 ;; This function calls:
  4006 ;;		_BMP280_Read
  4007 ;; This function is called by:
  4008 ;;		_BMP280_readS16
  4009 ;;		_BMP280_readCoefficients
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _BMP280_read16
  4015  075E                     _BMP280_read16:	
  4016                           
  4017                           ;incstack = 0
  4018                           ; Regs used in _BMP280_read16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4019                           ;BMP280_read16@reg stored from wreg
  4020  075E  0020               	movlb	0	; select bank0
  4021  075F  00C0               	movwf	BMP280_read16@reg
  4022                           
  4023                           ;main.c: 265: uint16_t value;;main.c: 267: BMP280_Read( reg, (uint8_t*)&value, 2 );
  4024  0760  3041               	movlw	(low (BMP280_read16@value| 0))& (0+255)
  4025  0761  00BF               	movwf	??_BMP280_read16
  4026  0762  083F               	movf	??_BMP280_read16,w
  4027  0763  00AE               	movwf	BMP280_Read@pData
  4028  0764  3002               	movlw	2
  4029  0765  00AF               	movwf	BMP280_Read@nCount
  4030  0766  3000               	movlw	0
  4031  0767  00B0               	movwf	BMP280_Read@nCount+1
  4032  0768  0840               	movf	BMP280_read16@reg,w
  4033  0769  23AA               	fcall	_BMP280_Read
  4034                           
  4035                           ;main.c: 269: return value;
  4036  076A  0020               	movlb	0	; select bank0
  4037  076B  0842               	movf	BMP280_read16@value+1,w
  4038  076C  00BE               	movwf	?_BMP280_read16+1
  4039  076D  0841               	movf	BMP280_read16@value,w
  4040  076E  00BD               	movwf	?_BMP280_read16
  4041  076F  0008               	return
  4042  0770                     __end_of_BMP280_read16:	
  4043                           
  4044                           	psect	text20
  4045  0791                     __ptext20:	
  4046 ;; *************** function _BMP280_read8 *****************
  4047 ;; Defined at:
  4048 ;;		line 249 in file "main.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  reg             1    wreg     unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  reg             1   30[BANK0 ] unsigned char 
  4053 ;;  value           1   31[BANK0 ] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      unsigned char 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4063 ;;      Params:         0       0       0       0
  4064 ;;      Locals:         0       2       0       0
  4065 ;;      Temps:          0       1       0       0
  4066 ;;      Totals:         0       3       0       0
  4067 ;;Total ram usage:        3 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    7
  4070 ;; This function calls:
  4071 ;;		_BMP280_Read
  4072 ;; This function is called by:
  4073 ;;		_main
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           
  4078                           ;psect for function _BMP280_read8
  4079  0791                     _BMP280_read8:	
  4080                           
  4081                           ;incstack = 0
  4082                           ; Regs used in _BMP280_read8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4083                           ;BMP280_read8@reg stored from wreg
  4084  0791  0020               	movlb	0	; select bank0
  4085  0792  00BE               	movwf	BMP280_read8@reg
  4086                           
  4087                           ;main.c: 251: uint8_t value;;main.c: 253: BMP280_Read( reg, &value, 1 );
  4088  0793  303F               	movlw	(low (BMP280_read8@value| 0))& (0+255)
  4089  0794  00BD               	movwf	??_BMP280_read8
  4090  0795  083D               	movf	??_BMP280_read8,w
  4091  0796  00AE               	movwf	BMP280_Read@pData
  4092  0797  3001               	movlw	1
  4093  0798  00AF               	movwf	BMP280_Read@nCount
  4094  0799  3000               	movlw	0
  4095  079A  00B0               	movwf	BMP280_Read@nCount+1
  4096  079B  083E               	movf	BMP280_read8@reg,w
  4097  079C  23AA               	fcall	_BMP280_Read
  4098                           
  4099                           ;main.c: 255: return value;
  4100  079D  0020               	movlb	0	; select bank0
  4101  079E  083F               	movf	BMP280_read8@value,w
  4102  079F  0008               	return
  4103  07A0                     __end_of_BMP280_read8:	
  4104                           
  4105                           	psect	text21
  4106  03AA                     __ptext21:	
  4107 ;; *************** function _BMP280_Read *****************
  4108 ;; Defined at:
  4109 ;;		line 150 in file "main.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  address         1    wreg     unsigned char 
  4112 ;;  pData           1   14[BANK0 ] PTR unsigned char 
  4113 ;;		 -> BMP280_read24_le@value(3), BMP280_read16@value(2), BMP280_read8@value(1), 
  4114 ;;  nCount          2   15[BANK0 ] unsigned int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  address         1   22[BANK0 ] unsigned char 
  4117 ;;  writeBuffer     3   19[BANK0 ] unsigned char [3]
  4118 ;;  timeOut         2   26[BANK0 ] unsigned int 
  4119 ;;  counter         2   23[BANK0 ] unsigned int 
  4120 ;;  status          1   28[BANK0 ] enum E2239
  4121 ;;  pD              1   25[BANK0 ] PTR unsigned char 
  4122 ;;		 -> BMP280_read24_le@value(3), BMP280_read16@value(2), BMP280_read8@value(1), 
  4123 ;;  ret             1   18[BANK0 ] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      unsigned char 
  4126 ;; Registers used:
  4127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4133 ;;      Params:         0       3       0       0
  4134 ;;      Locals:         0      11       0       0
  4135 ;;      Temps:          0       1       0       0
  4136 ;;      Totals:         0      15       0       0
  4137 ;;Total ram usage:       15 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    6
  4140 ;; This function calls:
  4141 ;;		_I2C_MasterRead
  4142 ;;		_I2C_MasterWrite
  4143 ;; This function is called by:
  4144 ;;		_BMP280_read8
  4145 ;;		_BMP280_read16
  4146 ;;		_BMP280_read24_le
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function _BMP280_Read
  4152  03AA                     _BMP280_Read:	
  4153                           
  4154                           ;incstack = 0
  4155                           ; Regs used in _BMP280_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4156                           ;BMP280_Read@address stored from wreg
  4157  03AA  0020               	movlb	0	; select bank0
  4158  03AB  00B6               	movwf	BMP280_Read@address
  4159                           
  4160                           ;main.c: 155: I2C_MESSAGE_STATUS status;;main.c: 156: uint8_t writeBuffer[3];;main.c: 15
      +                          7: uint16_t timeOut;;main.c: 158: uint16_t counter;;main.c: 159: uint8_t *pD, ret;;main.
      +                          c: 161: pD = pData;
  4161  03AC  082E               	movf	BMP280_Read@pData,w
  4162  03AD  00B1               	movwf	??_BMP280_Read
  4163  03AE  0831               	movf	??_BMP280_Read,w
  4164  03AF  00B9               	movwf	BMP280_Read@pD
  4165                           
  4166                           ;main.c: 163: for (counter = 0; counter < nCount; counter++)
  4167  03B0  01B7               	clrf	BMP280_Read@counter
  4168  03B1  01B8               	clrf	BMP280_Read@counter+1
  4169  03B2                     l2205:	
  4170  03B2  0830               	movf	BMP280_Read@nCount+1,w
  4171  03B3  0238               	subwf	BMP280_Read@counter+1,w
  4172  03B4  1D03               	skipz
  4173  03B5  2BB8               	goto	u2065
  4174  03B6  082F               	movf	BMP280_Read@nCount,w
  4175  03B7  0237               	subwf	BMP280_Read@counter,w
  4176  03B8                     u2065:	
  4177  03B8  1803               	btfsc	3,0
  4178  03B9  0008               	return
  4179                           
  4180                           ;main.c: 164: {;main.c: 168: writeBuffer[0] = address;
  4181  03BA  0836               	movf	BMP280_Read@address,w
  4182  03BB  00B1               	movwf	??_BMP280_Read
  4183  03BC  0831               	movf	??_BMP280_Read,w
  4184  03BD  00B3               	movwf	BMP280_Read@writeBuffer
  4185                           
  4186                           ;main.c: 173: timeOut = 0;
  4187  03BE  01BA               	clrf	BMP280_Read@timeOut
  4188  03BF  01BB               	clrf	BMP280_Read@timeOut+1
  4189  03C0                     l2173:	
  4190                           ;main.c: 174: while(status != I2C_MESSAGE_FAIL)
  4191                           
  4192  03C0  033C               	decf	BMP280_Read@status,w
  4193  03C1  1903               	btfsc	3,2
  4194  03C2  2BE1               	goto	l2175
  4195                           
  4196                           ;main.c: 175: {;main.c: 177: I2C_MasterWrite( writeBuffer,;main.c: 178: 1,;main.c: 179: 
      +                          (0x76),;main.c: 180: &status);
  4197  03C3  01A7               	clrf	I2C_MasterWrite@length
  4198  03C4  0AA7               	incf	I2C_MasterWrite@length,f
  4199  03C5  3076               	movlw	118
  4200  03C6  00A8               	movwf	I2C_MasterWrite@address
  4201  03C7  3000               	movlw	0
  4202  03C8  00A9               	movwf	I2C_MasterWrite@address+1
  4203  03C9  303C               	movlw	(low (BMP280_Read@status| 0))& (0+255)
  4204  03CA  00B1               	movwf	??_BMP280_Read
  4205  03CB  0831               	movf	??_BMP280_Read,w
  4206  03CC  00AA               	movwf	I2C_MasterWrite@pflag
  4207  03CD  3033               	movlw	(low (BMP280_Read@writeBuffer| 0))& (0+255)
  4208  03CE  2673               	fcall	_I2C_MasterWrite
  4209  03CF                     l2159:	
  4210                           ;main.c: 183: while(status == I2C_MESSAGE_PENDING);
  4211                           
  4212  03CF  3002               	movlw	2
  4213  03D0  0020               	movlb	0	; select bank0
  4214  03D1  063C               	xorwf	BMP280_Read@status,w
  4215  03D2  1903               	btfsc	3,2
  4216  03D3  2BCF               	goto	l2159
  4217                           
  4218                           ;main.c: 185: if (status == I2C_MESSAGE_COMPLETE)
  4219  03D4  083C               	movf	BMP280_Read@status,w
  4220  03D5  1903               	btfsc	3,2
  4221  03D6  2BE1               	goto	l2175
  4222                           
  4223                           ;main.c: 195: if (timeOut == 10)
  4224                           
  4225                           ;main.c: 186: break;
  4226  03D7  300A               	movlw	10
  4227  03D8  063A               	xorwf	BMP280_Read@timeOut,w
  4228  03D9  043B               	iorwf	BMP280_Read@timeOut+1,w
  4229  03DA  1903               	btfsc	3,2
  4230  03DB  2BE1               	goto	l2175
  4231                           
  4232                           ;main.c: 197: else;main.c: 198: timeOut++;
  4233                           
  4234                           ;main.c: 196: break;
  4235  03DC  3001               	movlw	1
  4236  03DD  07BA               	addwf	BMP280_Read@timeOut,f
  4237  03DE  3000               	movlw	0
  4238  03DF  3DBB               	addwfc	BMP280_Read@timeOut+1,f
  4239  03E0  2BC0               	goto	l2173
  4240  03E1                     l2175:	
  4241                           
  4242                           ;main.c: 199: };main.c: 201: if (status == I2C_MESSAGE_COMPLETE)
  4243  03E1  083C               	movf	BMP280_Read@status,w
  4244  03E2  1D03               	btfss	3,2
  4245  03E3  2C07               	goto	l2197
  4246                           
  4247                           ;main.c: 202: {;main.c: 205: timeOut = 0;
  4248  03E4  01BA               	clrf	BMP280_Read@timeOut
  4249  03E5  01BB               	clrf	BMP280_Read@timeOut+1
  4250  03E6                     l2195:	
  4251                           ;main.c: 206: while(status != I2C_MESSAGE_FAIL)
  4252                           
  4253  03E6  033C               	decf	BMP280_Read@status,w
  4254  03E7  1903               	btfsc	3,2
  4255  03E8  2C07               	goto	l2197
  4256                           
  4257                           ;main.c: 207: {;main.c: 209: I2C_MasterRead( pD,;main.c: 210: 1,;main.c: 211: (0x76),;ma
      +                          in.c: 212: &status);
  4258  03E9  01A7               	clrf	I2C_MasterRead@length
  4259  03EA  0AA7               	incf	I2C_MasterRead@length,f
  4260  03EB  3076               	movlw	118
  4261  03EC  00A8               	movwf	I2C_MasterRead@address
  4262  03ED  3000               	movlw	0
  4263  03EE  00A9               	movwf	I2C_MasterRead@address+1
  4264  03EF  303C               	movlw	(low (BMP280_Read@status| 0))& (0+255)
  4265  03F0  00B1               	movwf	??_BMP280_Read
  4266  03F1  0831               	movf	??_BMP280_Read,w
  4267  03F2  00AA               	movwf	I2C_MasterRead@pflag
  4268  03F3  0839               	movf	BMP280_Read@pD,w
  4269  03F4  264C               	fcall	_I2C_MasterRead
  4270  03F5                     l2181:	
  4271                           ;main.c: 215: while(status == I2C_MESSAGE_PENDING);
  4272                           
  4273  03F5  3002               	movlw	2
  4274  03F6  0020               	movlb	0	; select bank0
  4275  03F7  063C               	xorwf	BMP280_Read@status,w
  4276  03F8  1903               	btfsc	3,2
  4277  03F9  2BF5               	goto	l2181
  4278                           
  4279                           ;main.c: 217: if (status == I2C_MESSAGE_COMPLETE)
  4280  03FA  083C               	movf	BMP280_Read@status,w
  4281  03FB  1903               	btfsc	3,2
  4282  03FC  2C07               	goto	l2197
  4283                           
  4284                           ;main.c: 227: if (timeOut == 10)
  4285                           
  4286                           ;main.c: 218: break;
  4287  03FD  300A               	movlw	10
  4288  03FE  063A               	xorwf	BMP280_Read@timeOut,w
  4289  03FF  043B               	iorwf	BMP280_Read@timeOut+1,w
  4290  0400  1903               	btfsc	3,2
  4291  0401  2C07               	goto	l2197
  4292                           
  4293                           ;main.c: 229: else;main.c: 230: timeOut++;
  4294                           
  4295                           ;main.c: 228: break;
  4296  0402  3001               	movlw	1
  4297  0403  07BA               	addwf	BMP280_Read@timeOut,f
  4298  0404  3000               	movlw	0
  4299  0405  3DBB               	addwfc	BMP280_Read@timeOut+1,f
  4300  0406  2BE6               	goto	l2195
  4301  0407                     l2197:	
  4302                           
  4303                           ;main.c: 231: };main.c: 232: };main.c: 235: if (status == I2C_MESSAGE_FAIL)
  4304  0407  033C               	decf	BMP280_Read@status,w
  4305  0408  1D03               	btfss	3,2
  4306  0409  2C0C               	goto	l2201
  4307                           
  4308                           ;main.c: 236: {;main.c: 237: ret = 0;
  4309  040A  01B2               	clrf	BMP280_Read@ret
  4310                           
  4311                           ;main.c: 238: break;
  4312  040B  0008               	return
  4313  040C                     l2201:	
  4314                           
  4315                           ;main.c: 239: };main.c: 241: pD++;
  4316  040C  3001               	movlw	1
  4317  040D  00B1               	movwf	??_BMP280_Read
  4318  040E  0831               	movf	??_BMP280_Read,w
  4319  040F  07B9               	addwf	BMP280_Read@pD,f
  4320                           
  4321                           ;main.c: 242: address++;
  4322  0410  3001               	movlw	1
  4323  0411  00B1               	movwf	??_BMP280_Read
  4324  0412  0831               	movf	??_BMP280_Read,w
  4325  0413  07B6               	addwf	BMP280_Read@address,f
  4326  0414  3001               	movlw	1
  4327  0415  07B7               	addwf	BMP280_Read@counter,f
  4328  0416  3000               	movlw	0
  4329  0417  3DB8               	addwfc	BMP280_Read@counter+1,f
  4330  0418  2BB2               	goto	l2205
  4331  0419                     __end_of_BMP280_Read:	
  4332                           ;main.c: 244: };main.c: 245: return (ret);;	Return value of _BMP280_Read is never used
  4333                           
  4334                           
  4335                           	psect	text22
  4336  064C                     __ptext22:	
  4337 ;; *************** function _I2C_MasterRead *****************
  4338 ;; Defined at:
  4339 ;;		line 619 in file "mcc_generated_files/i2c.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  pdata           1    wreg     PTR unsigned char 
  4342 ;;		 -> BMP280_read24_le@value(3), BMP280_read16@value(2), BMP280_read8@value(1), 
  4343 ;;  length          1    7[BANK0 ] unsigned char 
  4344 ;;  address         2    8[BANK0 ] unsigned int 
  4345 ;;  pflag           1   10[BANK0 ] PTR enum E2207
  4346 ;;		 -> BMP280_Read@status(1), 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  4349 ;;		 -> BMP280_read24_le@value(3), BMP280_read16@value(2), BMP280_read8@value(1), 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4359 ;;      Params:         0       4       0       0
  4360 ;;      Locals:         0       1       0       0
  4361 ;;      Temps:          0       2       0       0
  4362 ;;      Totals:         0       7       0       0
  4363 ;;Total ram usage:        7 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    5
  4366 ;; This function calls:
  4367 ;;		_I2C_MasterReadTRBBuild
  4368 ;;		_I2C_MasterTRBInsert
  4369 ;; This function is called by:
  4370 ;;		_BMP280_Read
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           
  4375                           ;psect for function _I2C_MasterRead
  4376  064C                     _I2C_MasterRead:	
  4377                           
  4378                           ;incstack = 0
  4379                           ; Regs used in _I2C_MasterRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4380                           ;I2C_MasterRead@pdata stored from wreg
  4381  064C  0020               	movlb	0	; select bank0
  4382  064D  00AD               	movwf	I2C_MasterRead@pdata
  4383                           
  4384                           ;i2c.c: 625: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;;i2c.c: 629: if (i2c_object.tr
      +                          Status.s.full != 1)
  4385  064E  0021               	movlb	1	; select bank1
  4386  064F  1828               	btfsc	(_i2c_object^(0+128)+2),0
  4387  0650  2E6C               	goto	l2147
  4388                           
  4389                           ;i2c.c: 630: {;i2c.c: 631: I2C_MasterReadTRBBuild(&trBlock, pdata, length, address);
  4390  0651  0020               	movlb	0	; select bank0
  4391  0652  082D               	movf	I2C_MasterRead@pdata,w
  4392  0653  00AB               	movwf	??_I2C_MasterRead
  4393  0654  082B               	movf	??_I2C_MasterRead,w
  4394  0655  00A0               	movwf	I2C_MasterReadTRBBuild@pdata
  4395  0656  0827               	movf	I2C_MasterRead@length,w
  4396  0657  00AC               	movwf	??_I2C_MasterRead+1
  4397  0658  082C               	movf	??_I2C_MasterRead+1,w
  4398  0659  00A1               	movwf	I2C_MasterReadTRBBuild@length
  4399  065A  0829               	movf	I2C_MasterRead@address+1,w
  4400  065B  00A3               	movwf	I2C_MasterReadTRBBuild@address+1
  4401  065C  0828               	movf	I2C_MasterRead@address,w
  4402  065D  00A2               	movwf	I2C_MasterReadTRBBuild@address
  4403  065E  30B7               	movlw	(low (I2C_MasterRead@trBlock| 0))& (0+255)
  4404  065F  2624               	fcall	_I2C_MasterReadTRBBuild
  4405                           
  4406                           ;i2c.c: 632: I2C_MasterTRBInsert(1, &trBlock, pflag);
  4407  0660  30B7               	movlw	(low (I2C_MasterRead@trBlock| 0))& (0+255)
  4408  0661  0020               	movlb	0	; select bank0
  4409  0662  00AB               	movwf	??_I2C_MasterRead
  4410  0663  082B               	movf	??_I2C_MasterRead,w
  4411  0664  00A0               	movwf	I2C_MasterTRBInsert@ptrb_list
  4412  0665  082A               	movf	I2C_MasterRead@pflag,w
  4413  0666  00AC               	movwf	??_I2C_MasterRead+1
  4414  0667  082C               	movf	??_I2C_MasterRead+1,w
  4415  0668  00A1               	movwf	I2C_MasterTRBInsert@pflag
  4416  0669  3001               	movlw	1
  4417  066A  2485               	fcall	_I2C_MasterTRBInsert
  4418                           
  4419                           ;i2c.c: 633: }
  4420  066B  0008               	return
  4421  066C                     l2147:	
  4422                           
  4423                           ;i2c.c: 634: else;i2c.c: 635: {;i2c.c: 636: *pflag = I2C_MESSAGE_FAIL;
  4424  066C  0020               	movlb	0	; select bank0
  4425  066D  082A               	movf	I2C_MasterRead@pflag,w
  4426  066E  0086               	movwf	6
  4427  066F  0187               	clrf	7
  4428  0670  0181               	clrf	1
  4429  0671  0A81               	incf	1,f
  4430  0672  0008               	return
  4431  0673                     __end_of_I2C_MasterRead:	
  4432                           
  4433                           	psect	text23
  4434  0624                     __ptext23:	
  4435 ;; *************** function _I2C_MasterReadTRBBuild *****************
  4436 ;; Defined at:
  4437 ;;		line 694 in file "mcc_generated_files/i2c.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  ptrb            1    wreg     PTR struct .
  4440 ;;		 -> I2C_MasterRead@trBlock(4), 
  4441 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  4442 ;;		 -> BMP280_read24_le@value(3), BMP280_read16@value(2), BMP280_read8@value(1), 
  4443 ;;  length          1    1[BANK0 ] unsigned char 
  4444 ;;  address         2    2[BANK0 ] unsigned int 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  ptrb            1    6[BANK0 ] PTR struct .
  4447 ;;		 -> I2C_MasterRead@trBlock(4), 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4457 ;;      Params:         0       4       0       0
  4458 ;;      Locals:         0       1       0       0
  4459 ;;      Temps:          0       2       0       0
  4460 ;;      Totals:         0       7       0       0
  4461 ;;Total ram usage:        7 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    4
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_I2C_MasterRead
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function _I2C_MasterReadTRBBuild
  4473  0624                     _I2C_MasterReadTRBBuild:	
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in _I2C_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  4477                           ;I2C_MasterReadTRBBuild@ptrb stored from wreg
  4478  0624  0020               	movlb	0	; select bank0
  4479  0625  00A6               	movwf	I2C_MasterReadTRBBuild@ptrb
  4480                           
  4481                           ;i2c.c: 700: ptrb->address = address << 1;
  4482  0626  0823               	movf	I2C_MasterReadTRBBuild@address+1,w
  4483  0627  00A5               	movwf	??_I2C_MasterReadTRBBuild+1
  4484  0628  0822               	movf	I2C_MasterReadTRBBuild@address,w
  4485  0629  00A4               	movwf	??_I2C_MasterReadTRBBuild
  4486  062A  35A4               	lslf	??_I2C_MasterReadTRBBuild,f
  4487  062B  0DA5               	rlf	??_I2C_MasterReadTRBBuild+1,f
  4488  062C  0826               	movf	I2C_MasterReadTRBBuild@ptrb,w
  4489  062D  0086               	movwf	6
  4490  062E  0187               	clrf	7
  4491  062F  0824               	movf	??_I2C_MasterReadTRBBuild,w
  4492  0630  3FC0               	movwi [0]fsr1
  4493  0631  0825               	movf	??_I2C_MasterReadTRBBuild+1,w
  4494  0632  3FC1               	movwi [1]fsr1
  4495                           
  4496                           ;i2c.c: 702: ptrb->address |= 0x01;
  4497  0633  0826               	movf	I2C_MasterReadTRBBuild@ptrb,w
  4498  0634  0086               	movwf	6
  4499  0635  0187               	clrf	7
  4500  0636  3001               	movlw	1
  4501  0637  0481               	iorwf	1,f
  4502  0638  3141               	addfsr 1,1
  4503  0639  3000               	movlw	0
  4504  063A  0481               	iorwf	1,f
  4505                           
  4506                           ;i2c.c: 703: ptrb->length = length;
  4507  063B  0821               	movf	I2C_MasterReadTRBBuild@length,w
  4508  063C  00A4               	movwf	??_I2C_MasterReadTRBBuild
  4509  063D  0826               	movf	I2C_MasterReadTRBBuild@ptrb,w
  4510  063E  3E02               	addlw	2
  4511  063F  0086               	movwf	6
  4512  0640  0187               	clrf	7
  4513  0641  0824               	movf	??_I2C_MasterReadTRBBuild,w
  4514  0642  0081               	movwf	1
  4515                           
  4516                           ;i2c.c: 704: ptrb->pbuffer = pdata;
  4517  0643  0820               	movf	I2C_MasterReadTRBBuild@pdata,w
  4518  0644  00A4               	movwf	??_I2C_MasterReadTRBBuild
  4519  0645  0826               	movf	I2C_MasterReadTRBBuild@ptrb,w
  4520  0646  3E03               	addlw	3
  4521  0647  0086               	movwf	6
  4522  0648  0187               	clrf	7
  4523  0649  0824               	movf	??_I2C_MasterReadTRBBuild,w
  4524  064A  0081               	movwf	1
  4525  064B  0008               	return
  4526  064C                     __end_of_I2C_MasterReadTRBBuild:	
  4527                           
  4528                           	psect	text24
  4529  069A                     __ptext24:	
  4530 ;; *************** function _BMP280_Write8 *****************
  4531 ;; Defined at:
  4532 ;;		line 120 in file "main.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  address         1    wreg     unsigned char 
  4535 ;;  pData           1   14[BANK0 ] unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  address         1   17[BANK0 ] unsigned char 
  4538 ;;  writeBuffer     2   18[BANK0 ] unsigned char [2]
  4539 ;;  status          1   20[BANK0 ] enum E2239
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      char 
  4542 ;; Registers used:
  4543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4549 ;;      Params:         0       1       0       0
  4550 ;;      Locals:         0       4       0       0
  4551 ;;      Temps:          0       2       0       0
  4552 ;;      Totals:         0       7       0       0
  4553 ;;Total ram usage:        7 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    6
  4556 ;; This function calls:
  4557 ;;		_I2C_MasterWrite
  4558 ;; This function is called by:
  4559 ;;		_main
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           
  4564                           ;psect for function _BMP280_Write8
  4565  069A                     _BMP280_Write8:	
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _BMP280_Write8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4569                           ;BMP280_Write8@address stored from wreg
  4570  069A  0020               	movlb	0	; select bank0
  4571  069B  00B1               	movwf	BMP280_Write8@address
  4572                           
  4573                           ;main.c: 123: I2C_MESSAGE_STATUS status;;main.c: 124: uint8_t writeBuffer[2];;main.c: 12
      +                          6: writeBuffer[0] = address;
  4574  069C  0831               	movf	BMP280_Write8@address,w
  4575  069D  00AF               	movwf	??_BMP280_Write8
  4576  069E  082F               	movf	??_BMP280_Write8,w
  4577  069F  00B2               	movwf	BMP280_Write8@writeBuffer
  4578                           
  4579                           ;main.c: 127: writeBuffer[1] = pData;
  4580  06A0  082E               	movf	BMP280_Write8@pData,w
  4581  06A1  00AF               	movwf	??_BMP280_Write8
  4582  06A2  082F               	movf	??_BMP280_Write8,w
  4583  06A3  00B3               	movwf	BMP280_Write8@writeBuffer+1
  4584                           
  4585                           ;main.c: 130: I2C_MasterWrite( writeBuffer,;main.c: 131: 2,;main.c: 132: (0x76),;main.c:
      +                           133: &status);
  4586  06A4  3002               	movlw	2
  4587  06A5  00AF               	movwf	??_BMP280_Write8
  4588  06A6  082F               	movf	??_BMP280_Write8,w
  4589  06A7  00A7               	movwf	I2C_MasterWrite@length
  4590  06A8  3076               	movlw	118
  4591  06A9  00A8               	movwf	I2C_MasterWrite@address
  4592  06AA  3000               	movlw	0
  4593  06AB  00A9               	movwf	I2C_MasterWrite@address+1
  4594  06AC  3034               	movlw	(low (BMP280_Write8@status| 0))& (0+255)
  4595  06AD  00B0               	movwf	??_BMP280_Write8+1
  4596  06AE  0830               	movf	??_BMP280_Write8+1,w
  4597  06AF  00AA               	movwf	I2C_MasterWrite@pflag
  4598  06B0  3032               	movlw	(low (BMP280_Write8@writeBuffer| 0))& (0+255)
  4599  06B1  2673               	fcall	_I2C_MasterWrite
  4600  06B2                     l2403:	
  4601                           ;main.c: 136: while(status == I2C_MESSAGE_PENDING);
  4602                           
  4603  06B2  3002               	movlw	2
  4604  06B3  0020               	movlb	0	; select bank0
  4605  06B4  0634               	xorwf	BMP280_Write8@status,w
  4606  06B5  1903               	btfsc	3,2
  4607  06B6  2EB2               	goto	l2403
  4608                           
  4609                           ;main.c: 138: if (status == I2C_MESSAGE_COMPLETE)
  4610  06B7  0834               	movf	BMP280_Write8@status,w
  4611  06B8  1D03               	btfss	3,2
  4612  06B9  2EBC               	goto	l2411
  4613                           
  4614                           ;main.c: 139: return 0;
  4615  06BA  3000               	movlw	0
  4616  06BB  0008               	return
  4617  06BC                     l2411:	
  4618                           
  4619                           ;main.c: 147: return 0;
  4620  06BC  3000               	movlw	0
  4621  06BD  0008               	return
  4622  06BE                     __end_of_BMP280_Write8:	
  4623                           
  4624                           	psect	text25
  4625  0673                     __ptext25:	
  4626 ;; *************** function _I2C_MasterWrite *****************
  4627 ;; Defined at:
  4628 ;;		line 598 in file "mcc_generated_files/i2c.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  pdata           1    wreg     PTR unsigned char 
  4631 ;;		 -> BMP280_Read@writeBuffer(3), BMP280_Write8@writeBuffer(2), 
  4632 ;;  length          1    7[BANK0 ] unsigned char 
  4633 ;;  address         2    8[BANK0 ] unsigned int 
  4634 ;;  pflag           1   10[BANK0 ] PTR enum E2207
  4635 ;;		 -> BMP280_Read@status(1), BMP280_Write8@status(1), 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  4638 ;;		 -> BMP280_Read@writeBuffer(3), BMP280_Write8@writeBuffer(2), 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4648 ;;      Params:         0       4       0       0
  4649 ;;      Locals:         0       1       0       0
  4650 ;;      Temps:          0       2       0       0
  4651 ;;      Totals:         0       7       0       0
  4652 ;;Total ram usage:        7 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    5
  4655 ;; This function calls:
  4656 ;;		_I2C_MasterTRBInsert
  4657 ;;		_I2C_MasterWriteTRBBuild
  4658 ;; This function is called by:
  4659 ;;		_BMP280_Write8
  4660 ;;		_BMP280_Read
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _I2C_MasterWrite
  4666  0673                     _I2C_MasterWrite:	
  4667                           
  4668                           ;incstack = 0
  4669                           ; Regs used in _I2C_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4670                           ;I2C_MasterWrite@pdata stored from wreg
  4671  0673  0020               	movlb	0	; select bank0
  4672  0674  00AD               	movwf	I2C_MasterWrite@pdata
  4673                           
  4674                           ;i2c.c: 604: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;;i2c.c: 607: if (i2c_object.tr
      +                          Status.s.full != 1)
  4675  0675  0021               	movlb	1	; select bank1
  4676  0676  1828               	btfsc	(_i2c_object^(0+128)+2),0
  4677  0677  2E93               	goto	l2141
  4678                           
  4679                           ;i2c.c: 608: {;i2c.c: 609: I2C_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  4680  0678  0020               	movlb	0	; select bank0
  4681  0679  082D               	movf	I2C_MasterWrite@pdata,w
  4682  067A  00AB               	movwf	??_I2C_MasterWrite
  4683  067B  082B               	movf	??_I2C_MasterWrite,w
  4684  067C  00A0               	movwf	I2C_MasterWriteTRBBuild@pdata
  4685  067D  0827               	movf	I2C_MasterWrite@length,w
  4686  067E  00AC               	movwf	??_I2C_MasterWrite+1
  4687  067F  082C               	movf	??_I2C_MasterWrite+1,w
  4688  0680  00A1               	movwf	I2C_MasterWriteTRBBuild@length
  4689  0681  0829               	movf	I2C_MasterWrite@address+1,w
  4690  0682  00A3               	movwf	I2C_MasterWriteTRBBuild@address+1
  4691  0683  0828               	movf	I2C_MasterWrite@address,w
  4692  0684  00A2               	movwf	I2C_MasterWriteTRBBuild@address
  4693  0685  30BB               	movlw	(low (I2C_MasterWrite@trBlock| 0))& (0+255)
  4694  0686  26BE               	fcall	_I2C_MasterWriteTRBBuild
  4695                           
  4696                           ;i2c.c: 610: I2C_MasterTRBInsert(1, &trBlock, pflag);
  4697  0687  30BB               	movlw	(low (I2C_MasterWrite@trBlock| 0))& (0+255)
  4698  0688  0020               	movlb	0	; select bank0
  4699  0689  00AB               	movwf	??_I2C_MasterWrite
  4700  068A  082B               	movf	??_I2C_MasterWrite,w
  4701  068B  00A0               	movwf	I2C_MasterTRBInsert@ptrb_list
  4702  068C  082A               	movf	I2C_MasterWrite@pflag,w
  4703  068D  00AC               	movwf	??_I2C_MasterWrite+1
  4704  068E  082C               	movf	??_I2C_MasterWrite+1,w
  4705  068F  00A1               	movwf	I2C_MasterTRBInsert@pflag
  4706  0690  3001               	movlw	1
  4707  0691  2485               	fcall	_I2C_MasterTRBInsert
  4708                           
  4709                           ;i2c.c: 611: }
  4710  0692  0008               	return
  4711  0693                     l2141:	
  4712                           
  4713                           ;i2c.c: 612: else;i2c.c: 613: {;i2c.c: 614: *pflag = I2C_MESSAGE_FAIL;
  4714  0693  0020               	movlb	0	; select bank0
  4715  0694  082A               	movf	I2C_MasterWrite@pflag,w
  4716  0695  0086               	movwf	6
  4717  0696  0187               	clrf	7
  4718  0697  0181               	clrf	1
  4719  0698  0A81               	incf	1,f
  4720  0699  0008               	return
  4721  069A                     __end_of_I2C_MasterWrite:	
  4722                           
  4723                           	psect	text26
  4724  06BE                     __ptext26:	
  4725 ;; *************** function _I2C_MasterWriteTRBBuild *****************
  4726 ;; Defined at:
  4727 ;;		line 707 in file "mcc_generated_files/i2c.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  ptrb            1    wreg     PTR struct .
  4730 ;;		 -> I2C_MasterWrite@trBlock(4), 
  4731 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  4732 ;;		 -> BMP280_Read@writeBuffer(3), BMP280_Write8@writeBuffer(2), 
  4733 ;;  length          1    1[BANK0 ] unsigned char 
  4734 ;;  address         2    2[BANK0 ] unsigned int 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  ptrb            1    6[BANK0 ] PTR struct .
  4737 ;;		 -> I2C_MasterWrite@trBlock(4), 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4747 ;;      Params:         0       4       0       0
  4748 ;;      Locals:         0       1       0       0
  4749 ;;      Temps:          0       2       0       0
  4750 ;;      Totals:         0       7       0       0
  4751 ;;Total ram usage:        7 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    4
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_I2C_MasterWrite
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function _I2C_MasterWriteTRBBuild
  4763  06BE                     _I2C_MasterWriteTRBBuild:	
  4764                           
  4765                           ;incstack = 0
  4766                           ; Regs used in _I2C_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  4767                           ;I2C_MasterWriteTRBBuild@ptrb stored from wreg
  4768  06BE  0020               	movlb	0	; select bank0
  4769  06BF  00A6               	movwf	I2C_MasterWriteTRBBuild@ptrb
  4770                           
  4771                           ;i2c.c: 713: ptrb->address = address << 1;
  4772  06C0  0823               	movf	I2C_MasterWriteTRBBuild@address+1,w
  4773  06C1  00A5               	movwf	??_I2C_MasterWriteTRBBuild+1
  4774  06C2  0822               	movf	I2C_MasterWriteTRBBuild@address,w
  4775  06C3  00A4               	movwf	??_I2C_MasterWriteTRBBuild
  4776  06C4  35A4               	lslf	??_I2C_MasterWriteTRBBuild,f
  4777  06C5  0DA5               	rlf	??_I2C_MasterWriteTRBBuild+1,f
  4778  06C6  0826               	movf	I2C_MasterWriteTRBBuild@ptrb,w
  4779  06C7  0086               	movwf	6
  4780  06C8  0187               	clrf	7
  4781  06C9  0824               	movf	??_I2C_MasterWriteTRBBuild,w
  4782  06CA  3FC0               	movwi [0]fsr1
  4783  06CB  0825               	movf	??_I2C_MasterWriteTRBBuild+1,w
  4784  06CC  3FC1               	movwi [1]fsr1
  4785                           
  4786                           ;i2c.c: 714: ptrb->length = length;
  4787  06CD  0821               	movf	I2C_MasterWriteTRBBuild@length,w
  4788  06CE  00A4               	movwf	??_I2C_MasterWriteTRBBuild
  4789  06CF  0826               	movf	I2C_MasterWriteTRBBuild@ptrb,w
  4790  06D0  3E02               	addlw	2
  4791  06D1  0086               	movwf	6
  4792  06D2  0187               	clrf	7
  4793  06D3  0824               	movf	??_I2C_MasterWriteTRBBuild,w
  4794  06D4  0081               	movwf	1
  4795                           
  4796                           ;i2c.c: 715: ptrb->pbuffer = pdata;
  4797  06D5  0820               	movf	I2C_MasterWriteTRBBuild@pdata,w
  4798  06D6  00A4               	movwf	??_I2C_MasterWriteTRBBuild
  4799  06D7  0826               	movf	I2C_MasterWriteTRBBuild@ptrb,w
  4800  06D8  3E03               	addlw	3
  4801  06D9  0086               	movwf	6
  4802  06DA  0187               	clrf	7
  4803  06DB  0824               	movf	??_I2C_MasterWriteTRBBuild,w
  4804  06DC  0081               	movwf	1
  4805  06DD  0008               	return
  4806  06DE                     __end_of_I2C_MasterWriteTRBBuild:	
  4807                           
  4808                           	psect	text27
  4809  0485                     __ptext27:	
  4810 ;; *************** function _I2C_MasterTRBInsert *****************
  4811 ;; Defined at:
  4812 ;;		line 641 in file "mcc_generated_files/i2c.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  count           1    wreg     unsigned char 
  4815 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  4816 ;;		 -> I2C_MasterRead@trBlock(4), I2C_MasterWrite@trBlock(4), 
  4817 ;;  pflag           1    1[BANK0 ] PTR enum E2207
  4818 ;;		 -> BMP280_Read@status(1), BMP280_Write8@status(1), 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  count           1    3[BANK0 ] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4830 ;;      Params:         0       2       0       0
  4831 ;;      Locals:         0       1       0       0
  4832 ;;      Temps:          0       1       0       0
  4833 ;;      Totals:         0       4       0       0
  4834 ;;Total ram usage:        4 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    4
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_I2C_MasterWrite
  4841 ;;		_I2C_MasterRead
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function _I2C_MasterTRBInsert
  4847  0485                     _I2C_MasterTRBInsert:	
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in _I2C_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  4851                           ;I2C_MasterTRBInsert@count stored from wreg
  4852  0485  0020               	movlb	0	; select bank0
  4853  0486  00A3               	movwf	I2C_MasterTRBInsert@count
  4854                           
  4855                           ;i2c.c: 648: if (i2c_object.trStatus.s.full != 1)
  4856  0487  0021               	movlb	1	; select bank1
  4857  0488  1828               	btfsc	(_i2c_object^(0+128)+2),0
  4858  0489  2CC4               	goto	l2127
  4859                           
  4860                           ;i2c.c: 649: {;i2c.c: 650: *pflag = I2C_MESSAGE_PENDING;
  4861  048A  3002               	movlw	2
  4862  048B  0020               	movlb	0	; select bank0
  4863  048C  00A2               	movwf	??_I2C_MasterTRBInsert
  4864  048D  0821               	movf	I2C_MasterTRBInsert@pflag,w
  4865  048E  0086               	movwf	6
  4866  048F  0187               	clrf	7
  4867  0490  0822               	movf	??_I2C_MasterTRBInsert,w
  4868  0491  0081               	movwf	1
  4869                           
  4870                           ;i2c.c: 652: i2c_object.pTrTail->ptrb_list = ptrb_list;
  4871  0492  0820               	movf	I2C_MasterTRBInsert@ptrb_list,w
  4872  0493  00A2               	movwf	??_I2C_MasterTRBInsert
  4873  0494  0021               	movlb	1	; select bank1
  4874  0495  0A26               	incf	_i2c_object^(0+128),w
  4875  0496  0086               	movwf	6
  4876  0497  0187               	clrf	7
  4877  0498  0020               	movlb	0	; select bank0
  4878  0499  0822               	movf	??_I2C_MasterTRBInsert,w
  4879  049A  0081               	movwf	1
  4880                           
  4881                           ;i2c.c: 653: i2c_object.pTrTail->count = count;
  4882  049B  0823               	movf	I2C_MasterTRBInsert@count,w
  4883  049C  00A2               	movwf	??_I2C_MasterTRBInsert
  4884  049D  0021               	movlb	1	; select bank1
  4885  049E  0826               	movf	_i2c_object^(0+128),w
  4886  049F  0086               	movwf	6
  4887  04A0  0187               	clrf	7
  4888  04A1  0020               	movlb	0	; select bank0
  4889  04A2  0822               	movf	??_I2C_MasterTRBInsert,w
  4890  04A3  0081               	movwf	1
  4891                           
  4892                           ;i2c.c: 654: i2c_object.pTrTail->pTrFlag = pflag;
  4893  04A4  0821               	movf	I2C_MasterTRBInsert@pflag,w
  4894  04A5  00A2               	movwf	??_I2C_MasterTRBInsert
  4895  04A6  0021               	movlb	1	; select bank1
  4896  04A7  0826               	movf	_i2c_object^(0+128),w
  4897  04A8  3E02               	addlw	2
  4898  04A9  0086               	movwf	6
  4899  04AA  0187               	clrf	7
  4900  04AB  0020               	movlb	0	; select bank0
  4901  04AC  0822               	movf	??_I2C_MasterTRBInsert,w
  4902  04AD  0081               	movwf	1
  4903                           
  4904                           ;i2c.c: 655: i2c_object.pTrTail++;
  4905  04AE  3003               	movlw	3
  4906  04AF  00A2               	movwf	??_I2C_MasterTRBInsert
  4907  04B0  0822               	movf	??_I2C_MasterTRBInsert,w
  4908  04B1  0021               	movlb	1	; select bank1
  4909  04B2  07A6               	addwf	_i2c_object^(0+128),f
  4910                           
  4911                           ;i2c.c: 658: if (i2c_object.pTrTail == (i2c_tr_queue + 1))
  4912  04B3  0826               	movf	_i2c_object^(0+128),w
  4913  04B4  3AC2               	xorlw	(low ((_i2c_tr_queue| 0+3)))& (0+255)
  4914  04B5  1D03               	skipz
  4915  04B6  2CBD               	goto	l2123
  4916                           
  4917                           ;i2c.c: 659: {;i2c.c: 661: i2c_object.pTrTail = i2c_tr_queue;
  4918  04B7  30BF               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  4919  04B8  0020               	movlb	0	; select bank0
  4920  04B9  00A2               	movwf	??_I2C_MasterTRBInsert
  4921  04BA  0822               	movf	??_I2C_MasterTRBInsert,w
  4922  04BB  0021               	movlb	1	; select bank1
  4923  04BC  00A6               	movwf	_i2c_object^(0+128)
  4924  04BD                     l2123:	
  4925                           
  4926                           ;i2c.c: 662: };i2c.c: 666: i2c_object.trStatus.s.empty = 0;
  4927  04BD  10A8               	bcf	(_i2c_object^(0+128)+2),1
  4928                           
  4929                           ;i2c.c: 669: if (i2c_object.pTrHead == i2c_object.pTrTail)
  4930  04BE  0827               	movf	(low ((_i2c_object| 0+1)))^(0+128),w
  4931  04BF  0626               	xorwf	_i2c_object^(0+128),w
  4932  04C0  1D03               	skipz
  4933  04C1  2CCA               	goto	l2129
  4934                           
  4935                           ;i2c.c: 670: {;i2c.c: 672: i2c_object.trStatus.s.full = 1;
  4936  04C2  1428               	bsf	(_i2c_object^(0+128)+2),0
  4937                           
  4938                           ;i2c.c: 673: };i2c.c: 675: }
  4939  04C3  2CCA               	goto	l2129
  4940  04C4                     l2127:	
  4941                           
  4942                           ;i2c.c: 676: else;i2c.c: 677: {;i2c.c: 678: *pflag = I2C_MESSAGE_FAIL;
  4943  04C4  0020               	movlb	0	; select bank0
  4944  04C5  0821               	movf	I2C_MasterTRBInsert@pflag,w
  4945  04C6  0086               	movwf	6
  4946  04C7  0187               	clrf	7
  4947  04C8  0181               	clrf	1
  4948  04C9  0A81               	incf	1,f
  4949  04CA                     l2129:	
  4950                           
  4951                           ;i2c.c: 679: };i2c.c: 682: if (*pflag == I2C_MESSAGE_PENDING)
  4952  04CA  0020               	movlb	0	; select bank0
  4953  04CB  0821               	movf	I2C_MasterTRBInsert@pflag,w
  4954  04CC  0086               	movwf	6
  4955  04CD  0187               	clrf	7
  4956  04CE  3002               	movlw	2
  4957  04CF  0601               	xorwf	1,w
  4958  04D0  1D03               	btfss	3,2
  4959  04D1  0008               	return
  4960  04D2                     l2133:	
  4961                           ;i2c.c: 683: {;i2c.c: 684: while(i2c_state != S_MASTER_IDLE);
  4962                           
  4963  04D2  0873               	movf	_i2c_state,w
  4964  04D3  1D03               	btfss	3,2
  4965  04D4  2CD2               	goto	l2133
  4966                           
  4967                           ;i2c.c: 685: {;i2c.c: 688: PIR1bits.SSP1IF = 1;
  4968  04D5  1591               	bsf	17,3	;volatile
  4969  04D6  0008               	return
  4970  04D7                     __end_of_I2C_MasterTRBInsert:	
  4971                           
  4972                           	psect	intentry
  4973  0004                     __pintentry:	
  4974 ;; *************** function _INTERRUPT_InterruptManager *****************
  4975 ;; Defined at:
  4976 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4990 ;;      Params:         0       0       0       0
  4991 ;;      Locals:         0       0       0       0
  4992 ;;      Temps:          0       0       0       0
  4993 ;;      Totals:         0       0       0       0
  4994 ;;Total ram usage:        0 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    3
  4997 ;; This function calls:
  4998 ;;		_I2C_BusCollisionISR
  4999 ;;		_I2C_ISR
  5000 ;;		_TMR2_ISR
  5001 ;; This function is called by:
  5002 ;;		Interrupt level 1
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006  0004                     _INTERRUPT_InterruptManager:	
  5007                           
  5008                           ;incstack = 0
  5009  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5010                           
  5011                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5012  0005  3180               	pagesel	$
  5013                           
  5014                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE2bits.BCL1IE == 1 && PIR2bits.BC
      +                          L1IF == 1)
  5015  0006  1F0B               	btfss	11,6	;volatile
  5016  0007  2810               	goto	i1l235
  5017  0008  0021               	movlb	1	; select bank1
  5018  0009  1D92               	btfss	18,3	;volatile
  5019  000A  2810               	goto	i1l235
  5020  000B  0020               	movlb	0	; select bank0
  5021  000C  1D92               	btfss	18,3	;volatile
  5022  000D  2810               	goto	i1l235
  5023                           
  5024                           ;interrupt_manager.c: 55: {;interrupt_manager.c: 56: I2C_BusCollisionISR();
  5025  000E  27F9               	fcall	_I2C_BusCollisionISR
  5026                           
  5027                           ;interrupt_manager.c: 57: }
  5028  000F  2823               	goto	i1l241
  5029  0010                     i1l235:	
  5030                           
  5031                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.SSP1IE == 1 && PIR1bi
      +                          ts.SSP1IF == 1)
  5032  0010  1F0B               	btfss	11,6	;volatile
  5033  0011  281A               	goto	i1l237
  5034  0012  0021               	movlb	1	; select bank1
  5035  0013  1D91               	btfss	17,3	;volatile
  5036  0014  281A               	goto	i1l237
  5037  0015  0020               	movlb	0	; select bank0
  5038  0016  1D91               	btfss	17,3	;volatile
  5039  0017  281A               	goto	i1l237
  5040                           
  5041                           ;interrupt_manager.c: 59: {;interrupt_manager.c: 60: I2C_ISR();
  5042  0018  21FE               	fcall	_I2C_ISR
  5043                           
  5044                           ;interrupt_manager.c: 61: }
  5045  0019  2823               	goto	i1l241
  5046  001A                     i1l237:	
  5047                           
  5048                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  5049  001A  1F0B               	btfss	11,6	;volatile
  5050  001B  2823               	goto	i1l241
  5051  001C  0021               	movlb	1	; select bank1
  5052  001D  1C91               	btfss	17,1	;volatile
  5053  001E  2823               	goto	i1l241
  5054  001F  0020               	movlb	0	; select bank0
  5055  0020  1C91               	btfss	17,1	;volatile
  5056  0021  2823               	goto	i1l241
  5057                           
  5058                           ;interrupt_manager.c: 63: {;interrupt_manager.c: 64: TMR2_ISR();
  5059  0022  274B               	fcall	_TMR2_ISR
  5060  0023                     i1l241:	
  5061                           ;interrupt_manager.c: 66: else;interrupt_manager.c: 67: {
  5062                           
  5063                           ;interrupt_manager.c: 65: }
  5064                           
  5065  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5066  0024  0009               	retfie
  5067  0025                     __end_of_INTERRUPT_InterruptManager:	
  5068                           
  5069                           	psect	text29
  5070  074B                     __ptext29:	
  5071 ;; *************** function _TMR2_ISR *****************
  5072 ;; Defined at:
  5073 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5087 ;;      Params:         0       0       0       0
  5088 ;;      Locals:         0       0       0       0
  5089 ;;      Temps:          0       0       0       0
  5090 ;;      Totals:         0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    2
  5094 ;; This function calls:
  5095 ;;		_TMR2_CallBack
  5096 ;; This function is called by:
  5097 ;;		_INTERRUPT_InterruptManager
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _TMR2_ISR
  5103  074B                     _TMR2_ISR:	
  5104                           
  5105                           ;tmr2.c: 123: static volatile unsigned int CountCallBack = 0;;tmr2.c: 126: PIR1bits.TMR2
      +                          IF = 0;
  5106                           
  5107                           ;incstack = 0
  5108                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  5109  074B  0020               	movlb	0	; select bank0
  5110  074C  1091               	bcf	17,1	;volatile
  5111                           
  5112                           ;tmr2.c: 129: if (++CountCallBack >= 8000)
  5113  074D  3001               	movlw	1
  5114  074E  0021               	movlb	1	; select bank1
  5115  074F  07B2               	addwf	TMR2_ISR@CountCallBack^(0+128),f	;volatile
  5116  0750  3000               	movlw	0
  5117  0751  3DB3               	addwfc	(TMR2_ISR@CountCallBack+1)^(0+128),f	;volatile
  5118  0752  301F               	movlw	31
  5119  0753  0233               	subwf	(TMR2_ISR@CountCallBack+1)^(0+128),w	;volatile
  5120  0754  3040               	movlw	64
  5121  0755  1903               	skipnz
  5122  0756  0232               	subwf	TMR2_ISR@CountCallBack^(0+128),w	;volatile
  5123  0757  1C03               	skipc
  5124  0758  0008               	return
  5125                           
  5126                           ;tmr2.c: 130: {;tmr2.c: 132: TMR2_CallBack();
  5127  0759  27AC               	fcall	_TMR2_CallBack
  5128                           
  5129                           ;tmr2.c: 135: CountCallBack = 0;
  5130  075A  0021               	movlb	1	; select bank1
  5131  075B  01B2               	clrf	TMR2_ISR@CountCallBack^(0+128)	;volatile
  5132  075C  01B3               	clrf	(TMR2_ISR@CountCallBack+1)^(0+128)	;volatile
  5133  075D  0008               	return
  5134  075E                     __end_of_TMR2_ISR:	
  5135                           
  5136                           	psect	text30
  5137  07AC                     __ptext30:	
  5138 ;; *************** function _TMR2_CallBack *****************
  5139 ;; Defined at:
  5140 ;;		line 139 in file "mcc_generated_files/tmr2.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0, pclath, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5154 ;;      Params:         0       0       0       0
  5155 ;;      Locals:         0       0       0       0
  5156 ;;      Temps:          0       0       0       0
  5157 ;;      Totals:         0       0       0       0
  5158 ;;Total ram usage:        0 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    1
  5161 ;; This function calls:
  5162 ;;		Absolute function
  5163 ;;		_TMR2_DefaultInterruptHandler
  5164 ;;		_TickISR
  5165 ;; This function is called by:
  5166 ;;		_TMR2_ISR
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           
  5171                           ;psect for function _TMR2_CallBack
  5172  07AC                     _TMR2_CallBack:	
  5173                           
  5174                           ;tmr2.c: 143: if(TMR2_InterruptHandler)
  5175                           
  5176                           ;incstack = 0
  5177                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  5178  07AC  0021               	movlb	1	; select bank1
  5179  07AD  0859               	movf	_TMR2_InterruptHandler^(0+128),w
  5180  07AE  045A               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  5181  07AF  1903               	btfsc	3,2
  5182  07B0  0008               	return
  5183                           
  5184                           ;tmr2.c: 144: {;tmr2.c: 145: TMR2_InterruptHandler();
  5185  07B1  085A               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  5186  07B2  008A               	movwf	10
  5187  07B3  0859               	movf	_TMR2_InterruptHandler^(0+128),w
  5188  07B4  000A               	callw
  5189  07B5  3187               	pagesel	$
  5190  07B6  0008               	return
  5191  07B7                     __end_of_TMR2_CallBack:	
  5192                           
  5193                           	psect	text31
  5194  07F8                     __ptext31:	
  5195 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5196 ;; Defined at:
  5197 ;;		line 153 in file "mcc_generated_files/tmr2.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		None
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5211 ;;      Params:         0       0       0       0
  5212 ;;      Locals:         0       0       0       0
  5213 ;;      Temps:          0       0       0       0
  5214 ;;      Totals:         0       0       0       0
  5215 ;;Total ram usage:        0 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_TMR2_Initialize
  5221 ;;		_TMR2_CallBack
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           
  5226                           ;psect for function _TMR2_DefaultInterruptHandler
  5227  07F8                     _TMR2_DefaultInterruptHandler:	
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5231  07F8  0008               	return
  5232  07F9                     __end_of_TMR2_DefaultInterruptHandler:	
  5233                           
  5234                           	psect	text32
  5235  07F0                     __ptext32:	
  5236 ;; *************** function _TickISR *****************
  5237 ;; Defined at:
  5238 ;;		line 433 in file "main.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		None
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5252 ;;      Params:         0       0       0       0
  5253 ;;      Locals:         0       0       0       0
  5254 ;;      Temps:          0       0       0       0
  5255 ;;      Totals:         0       0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_main
  5262 ;;		_TMR2_CallBack
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           
  5267                           ;psect for function _TickISR
  5268  07F0                     _TickISR:	
  5269                           
  5270                           ;main.c: 436: checkTemp=1;
  5271                           
  5272                           ;incstack = 0
  5273                           ; Regs used in _TickISR: []
  5274  07F0  0021               	movlb	1	; select bank1
  5275  07F1  01B6               	clrf	_checkTemp^(0+128)
  5276  07F2  0AB6               	incf	_checkTemp^(0+128),f
  5277  07F3  0008               	return
  5278  07F4                     __end_of_TickISR:	
  5279                           
  5280                           	psect	text33
  5281  01FE                     __ptext33:	
  5282 ;; *************** function _I2C_ISR *****************
  5283 ;; Defined at:
  5284 ;;		line 233 in file "mcc_generated_files/i2c.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5298 ;;      Params:         0       0       0       0
  5299 ;;      Locals:         0       0       0       0
  5300 ;;      Temps:          4       0       0       0
  5301 ;;      Totals:         4       0       0       0
  5302 ;;Total ram usage:        4 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    1
  5305 ;; This function calls:
  5306 ;;		_I2C_FunctionComplete
  5307 ;;		_I2C_Stop
  5308 ;; This function is called by:
  5309 ;;		_INTERRUPT_InterruptManager
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function _I2C_ISR
  5315  01FE                     _I2C_ISR:	
  5316                           
  5317                           ;i2c.c: 236: static uint8_t *pi2c_buf_ptr;;i2c.c: 237: static uint16_t i2c_address = 0;;
      +                          i2c.c: 238: static uint8_t i2c_bytes_left = 0;;i2c.c: 239: static uint8_t i2c_10bit_addr
      +                          ess_restart = 0;;i2c.c: 241: PIR1bits.SSP1IF = 0;
  5318                           
  5319                           ;incstack = 0
  5320                           ; Regs used in _I2C_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5321  01FE  0020               	movlb	0	; select bank0
  5322  01FF  1191               	bcf	17,3	;volatile
  5323                           
  5324                           ;i2c.c: 245: if(SSP1CON1bits.WCOL)
  5325  0200  0024               	movlb	4	; select bank4
  5326  0201  1F95               	btfss	21,7	;volatile
  5327  0202  2B23               	goto	i1l1941
  5328                           
  5329                           ;i2c.c: 246: {;i2c.c: 248: SSP1CON1bits.WCOL = 0;
  5330  0203  1395               	bcf	21,7	;volatile
  5331                           
  5332                           ;i2c.c: 249: i2c_state = S_MASTER_IDLE;
  5333  0204  01F3               	clrf	_i2c_state
  5334                           
  5335                           ;i2c.c: 250: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  5336  0205  0870               	movf	_p_i2c_current,w
  5337  0206  3E02               	addlw	2
  5338  0207  0086               	movwf	6
  5339  0208  0187               	clrf	7
  5340  0209  0801               	movf	1,w
  5341  020A  0086               	movwf	6
  5342  020B  0187               	clrf	7
  5343  020C  0181               	clrf	1
  5344  020D  0A81               	incf	1,f
  5345                           
  5346                           ;i2c.c: 253: p_i2c_current = (0);
  5347  020E  01F0               	clrf	_p_i2c_current
  5348                           
  5349                           ;i2c.c: 255: return;
  5350  020F  0008               	return
  5351  0210                     i1l106:	
  5352                           ;i2c.c: 260: {;i2c.c: 261: case S_MASTER_IDLE:
  5353                           
  5354                           ;i2c.c: 256: };i2c.c: 259: switch(i2c_state)
  5355                           
  5356                           
  5357                           ;i2c.c: 263: if(i2c_object.trStatus.s.empty != 1)
  5358  0210  0021               	movlb	1	; select bank1
  5359  0211  18A8               	btfsc	(_i2c_object^(0+128)+2),1
  5360  0212  0008               	return
  5361                           
  5362                           ;i2c.c: 264: {;i2c.c: 266: p_i2c_current = i2c_object.pTrHead;
  5363  0213  0827               	movf	(low ((_i2c_object| 0+1)))^(0+128),w
  5364  0214  00F8               	movwf	??_I2C_ISR
  5365  0215  0878               	movf	??_I2C_ISR,w
  5366  0216  00F0               	movwf	_p_i2c_current
  5367                           
  5368                           ;i2c.c: 267: i2c_trb_count = i2c_object.pTrHead->count;
  5369  0217  0827               	movf	(low ((_i2c_object| 0+1)))^(0+128),w
  5370  0218  0086               	movwf	6
  5371  0219  0187               	clrf	7
  5372  021A  0801               	movf	1,w
  5373  021B  00F8               	movwf	??_I2C_ISR
  5374  021C  0878               	movf	??_I2C_ISR,w
  5375  021D  00F2               	movwf	_i2c_trb_count
  5376                           
  5377                           ;i2c.c: 268: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  5378  021E  0827               	movf	(low ((_i2c_object| 0+1)))^(0+128),w
  5379  021F  0086               	movwf	6
  5380  0220  0187               	clrf	7
  5381  0221  3F41               	moviw [1]fsr1
  5382  0222  00F1               	movwf	_p_i2c_trb_current
  5383                           
  5384                           ;i2c.c: 270: i2c_object.pTrHead++;
  5385  0223  3003               	movlw	3
  5386  0224  00F8               	movwf	??_I2C_ISR
  5387  0225  0878               	movf	??_I2C_ISR,w
  5388  0226  07A7               	addwf	(low ((_i2c_object| 0+1)))^(0+128),f
  5389                           
  5390                           ;i2c.c: 273: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  5391  0227  0827               	movf	(low ((_i2c_object| 0+1)))^(0+128),w
  5392  0228  3AC2               	xorlw	(low ((_i2c_tr_queue| 0+3)))& (0+255)
  5393  0229  1D03               	skipz
  5394  022A  2A2F               	goto	i1l1829
  5395                           
  5396                           ;i2c.c: 274: {;i2c.c: 276: i2c_object.pTrHead = i2c_tr_queue;
  5397  022B  30BF               	movlw	(low (_i2c_tr_queue| 0))& (0+255)
  5398  022C  00F8               	movwf	??_I2C_ISR
  5399  022D  0878               	movf	??_I2C_ISR,w
  5400  022E  00A7               	movwf	(low ((_i2c_object| 0+1)))^(0+128)
  5401  022F                     i1l1829:	
  5402                           
  5403                           ;i2c.c: 277: };i2c.c: 281: i2c_object.trStatus.s.full = 0;
  5404  022F  1028               	bcf	(_i2c_object^(0+128)+2),0
  5405                           
  5406                           ;i2c.c: 284: if(i2c_object.pTrHead == i2c_object.pTrTail)
  5407  0230  0827               	movf	(low ((_i2c_object| 0+1)))^(0+128),w
  5408  0231  0626               	xorwf	_i2c_object^(0+128),w
  5409  0232  1903               	btfsc	3,2
  5410                           
  5411                           ;i2c.c: 285: {;i2c.c: 287: i2c_object.trStatus.s.empty = 1;
  5412  0233  14A8               	bsf	(_i2c_object^(0+128)+2),1
  5413                           
  5414                           ;i2c.c: 288: };i2c.c: 291: SSP1CON2bits.SEN = 1;
  5415  0234  0024               	movlb	4	; select bank4
  5416  0235  1416               	bsf	22,0	;volatile
  5417                           
  5418                           ;i2c.c: 294: i2c_state = S_MASTER_SEND_ADDR;
  5419  0236  3002               	movlw	2
  5420  0237  00F8               	movwf	??_I2C_ISR
  5421  0238  0878               	movf	??_I2C_ISR,w
  5422  0239  00F3               	movwf	_i2c_state
  5423                           
  5424                           ;i2c.c: 295: };i2c.c: 297: break;
  5425  023A  0008               	return
  5426  023B                     i1l111:	
  5427                           ;i2c.c: 299: case S_MASTER_RESTART:
  5428                           
  5429                           
  5430                           ;i2c.c: 304: SSP1CON2bits.RSEN = 1;
  5431  023B  0024               	movlb	4	; select bank4
  5432  023C  1496               	bsf	22,1	;volatile
  5433                           
  5434                           ;i2c.c: 307: i2c_state = S_MASTER_SEND_ADDR;
  5435  023D  3002               	movlw	2
  5436  023E  00F8               	movwf	??_I2C_ISR
  5437  023F  0878               	movf	??_I2C_ISR,w
  5438  0240  00F3               	movwf	_i2c_state
  5439                           
  5440                           ;i2c.c: 309: break;
  5441  0241  0008               	return
  5442  0242                     i1l112:	
  5443                           ;i2c.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  5444                           
  5445                           
  5446                           ;i2c.c: 313: if(SSP1CON2bits.ACKSTAT)
  5447  0242  0024               	movlb	4	; select bank4
  5448  0243  1F16               	btfss	22,6	;volatile
  5449  0244  2A4D               	goto	i1l1841
  5450                           
  5451                           ;i2c.c: 314: {;i2c.c: 315: i2c_object.i2cErrors++;
  5452  0245  3001               	movlw	1
  5453  0246  00F8               	movwf	??_I2C_ISR
  5454  0247  0878               	movf	??_I2C_ISR,w
  5455  0248  0021               	movlb	1	; select bank1
  5456  0249  07AA               	addwf	(_i2c_object^(0+128)+4),f
  5457                           
  5458                           ;i2c.c: 316: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  5459  024A  3004               	movlw	4
  5460  024B  2734               	fcall	_I2C_Stop
  5461                           
  5462                           ;i2c.c: 317: }
  5463  024C  0008               	return
  5464  024D                     i1l1841:	
  5465                           
  5466                           ;i2c.c: 318: else;i2c.c: 319: {;i2c.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  5467  024D  0875               	movf	I2C_ISR@i2c_address+1,w
  5468  024E  00F9               	movwf	??_I2C_ISR+1
  5469  024F  0874               	movf	I2C_ISR@i2c_address,w
  5470  0250  00F8               	movwf	??_I2C_ISR
  5471  0251  36F9               	lsrf	??_I2C_ISR+1,f
  5472  0252  0CF8               	rrf	??_I2C_ISR,f
  5473  0253  0878               	movf	??_I2C_ISR,w
  5474  0254  0024               	movlb	4	; select bank4
  5475  0255  0091               	movwf	17	;volatile
  5476                           
  5477                           ;i2c.c: 324: if(i2c_address & 0x01)
  5478  0256  1C74               	btfss	I2C_ISR@i2c_address,0
  5479  0257  2A5D               	goto	i1l1847
  5480                           
  5481                           ;i2c.c: 325: {;i2c.c: 328: i2c_state = S_MASTER_10BIT_RESTART;
  5482  0258  300B               	movlw	11
  5483  0259  00F8               	movwf	??_I2C_ISR
  5484  025A  0878               	movf	??_I2C_ISR,w
  5485  025B  00F3               	movwf	_i2c_state
  5486                           
  5487                           ;i2c.c: 329: }
  5488  025C  0008               	return
  5489  025D                     i1l1847:	
  5490                           
  5491                           ;i2c.c: 330: else;i2c.c: 331: {;i2c.c: 333: i2c_state = S_MASTER_SEND_DATA;
  5492  025D  3003               	movlw	3
  5493  025E  00F8               	movwf	??_I2C_ISR
  5494  025F  0878               	movf	??_I2C_ISR,w
  5495  0260  00F3               	movwf	_i2c_state
  5496                           
  5497                           ;i2c.c: 334: };i2c.c: 335: };i2c.c: 337: break;
  5498  0261  0008               	return
  5499  0262                     i1l117:	
  5500                           ;i2c.c: 339: case S_MASTER_10BIT_RESTART:
  5501                           
  5502                           
  5503                           ;i2c.c: 341: if(SSP1CON2bits.ACKSTAT)
  5504  0262  0024               	movlb	4	; select bank4
  5505  0263  1F16               	btfss	22,6	;volatile
  5506  0264  2A6D               	goto	i1l118
  5507                           
  5508                           ;i2c.c: 342: {;i2c.c: 343: i2c_object.i2cErrors++;
  5509  0265  3001               	movlw	1
  5510  0266  00F8               	movwf	??_I2C_ISR
  5511  0267  0878               	movf	??_I2C_ISR,w
  5512  0268  0021               	movlb	1	; select bank1
  5513  0269  07AA               	addwf	(_i2c_object^(0+128)+4),f
  5514                           
  5515                           ;i2c.c: 344: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  5516  026A  3004               	movlw	4
  5517  026B  2734               	fcall	_I2C_Stop
  5518                           
  5519                           ;i2c.c: 345: }
  5520  026C  0008               	return
  5521  026D                     i1l118:	
  5522                           
  5523                           ;i2c.c: 346: else;i2c.c: 347: {;i2c.c: 350: SSP1CON2bits.RSEN = 1;
  5524  026D  1496               	bsf	22,1	;volatile
  5525                           
  5526                           ;i2c.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  5527  026E  0875               	movf	I2C_ISR@i2c_address+1,w
  5528  026F  00F9               	movwf	??_I2C_ISR+1
  5529  0270  0874               	movf	I2C_ISR@i2c_address,w
  5530  0271  00F8               	movwf	??_I2C_ISR
  5531  0272  0879               	movf	??_I2C_ISR+1,w
  5532  0273  00F8               	movwf	??_I2C_ISR
  5533  0274  01F9               	clrf	??_I2C_ISR+1
  5534  0275  3006               	movlw	6
  5535  0276  0578               	andwf	??_I2C_ISR,w
  5536  0277  00FA               	movwf	??_I2C_ISR+2
  5537  0278  3000               	movlw	0
  5538  0279  0579               	andwf	??_I2C_ISR+1,w
  5539  027A  00FB               	movwf	??_I2C_ISR+3
  5540  027B  30F0               	movlw	240
  5541  027C  047A               	iorwf	??_I2C_ISR+2,w
  5542  027D  00F4               	movwf	I2C_ISR@i2c_address
  5543  027E  3000               	movlw	0
  5544  027F  047B               	iorwf	??_I2C_ISR+3,w
  5545  0280  00F5               	movwf	I2C_ISR@i2c_address+1
  5546                           
  5547                           ;i2c.c: 357: i2c_address |= 0x0001;
  5548  0281  1474               	bsf	I2C_ISR@i2c_address,0
  5549                           
  5550                           ;i2c.c: 360: i2c_10bit_address_restart = 1;
  5551  0282  0020               	movlb	0	; select bank0
  5552  0283  01EB               	clrf	I2C_ISR@i2c_10bit_address_restart
  5553  0284  0AEB               	incf	I2C_ISR@i2c_10bit_address_restart,f
  5554                           
  5555                           ;i2c.c: 363: i2c_state = S_MASTER_SEND_ADDR;
  5556  0285  3002               	movlw	2
  5557  0286  00F8               	movwf	??_I2C_ISR
  5558  0287  0878               	movf	??_I2C_ISR,w
  5559  0288  00F3               	movwf	_i2c_state
  5560                           
  5561                           ;i2c.c: 364: };i2c.c: 366: break;
  5562  0289  0008               	return
  5563  028A                     i1l1861:	
  5564                           ;i2c.c: 368: case S_MASTER_SEND_ADDR:
  5565                           
  5566                           
  5567                           ;i2c.c: 381: if(i2c_10bit_address_restart != 1)
  5568  028A  0020               	movlb	0	; select bank0
  5569  028B  036B               	decf	I2C_ISR@i2c_10bit_address_restart,w
  5570  028C  1903               	btfsc	3,2
  5571  028D  2A9F               	goto	i1l1881
  5572                           
  5573                           ;i2c.c: 382: {;i2c.c: 384: i2c_address = p_i2c_trb_current->address;
  5574  028E  0871               	movf	_p_i2c_trb_current,w
  5575  028F  0086               	movwf	6
  5576  0290  0187               	clrf	7
  5577  0291  3F40               	moviw [0]fsr1
  5578  0292  00F4               	movwf	I2C_ISR@i2c_address
  5579  0293  3F41               	moviw [1]fsr1
  5580  0294  00F5               	movwf	I2C_ISR@i2c_address+1
  5581                           
  5582                           ;i2c.c: 385: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  5583  0295  0871               	movf	_p_i2c_trb_current,w
  5584  0296  0086               	movwf	6
  5585  0297  0187               	clrf	7
  5586  0298  3F43               	moviw [3]fsr1
  5587  0299  00ED               	movwf	I2C_ISR@pi2c_buf_ptr
  5588                           
  5589                           ;i2c.c: 386: i2c_bytes_left = p_i2c_trb_current->length;
  5590  029A  0871               	movf	_p_i2c_trb_current,w
  5591  029B  0086               	movwf	6
  5592  029C  0187               	clrf	7
  5593  029D  3F42               	moviw [2]fsr1
  5594  029E  00EC               	movwf	I2C_ISR@i2c_bytes_left
  5595  029F                     i1l1881:	
  5596                           ;i2c.c: 407: };i2c.c: 408: }
  5597                           
  5598                           ;i2c.c: 406: i2c_10bit_address_restart = 0;
  5599                           
  5600                           ;i2c.c: 404: i2c_state = S_MASTER_ACK_ADDR;
  5601                           
  5602                           ;i2c.c: 400: else;i2c.c: 401: {;i2c.c: 403: SSP1BUF = i2c_address;
  5603                           
  5604                           ;i2c.c: 399: }
  5605                           
  5606                           ;i2c.c: 398: i2c_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  5607                           
  5608                           ;i2c.c: 393: {;i2c.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  5609                           
  5610                           ;i2c.c: 391: {;i2c.c: 392: if (0 == i2c_10bit_address_restart)
  5611                           
  5612                           ;i2c.c: 387: };i2c.c: 390: if(!1 && (0x0 != i2c_address))
  5613                           
  5614                           
  5615                           ;i2c.c: 409: else;i2c.c: 410: {;i2c.c: 412: SSP1BUF = i2c_address;
  5616  029F  0874               	movf	I2C_ISR@i2c_address,w
  5617  02A0  0024               	movlb	4	; select bank4
  5618  02A1  0091               	movwf	17	;volatile
  5619                           
  5620                           ;i2c.c: 413: if(i2c_address & 0x01)
  5621  02A2  1C74               	btfss	I2C_ISR@i2c_address,0
  5622  02A3  2AA9               	goto	i1l1887
  5623                           
  5624                           ;i2c.c: 414: {;i2c.c: 416: i2c_state = S_MASTER_ACK_ADDR;
  5625  02A4  3005               	movlw	5
  5626  02A5  00F8               	movwf	??_I2C_ISR
  5627  02A6  0878               	movf	??_I2C_ISR,w
  5628  02A7  00F3               	movwf	_i2c_state
  5629                           
  5630                           ;i2c.c: 417: }
  5631  02A8  0008               	return
  5632  02A9                     i1l1887:	
  5633                           
  5634                           ;i2c.c: 418: else;i2c.c: 419: {;i2c.c: 421: i2c_state = S_MASTER_SEND_DATA;
  5635  02A9  3003               	movlw	3
  5636  02AA  00F8               	movwf	??_I2C_ISR
  5637  02AB  0878               	movf	??_I2C_ISR,w
  5638  02AC  00F3               	movwf	_i2c_state
  5639                           
  5640                           ;i2c.c: 422: };i2c.c: 423: };i2c.c: 424: break;
  5641  02AD  0008               	return
  5642  02AE                     i1l128:	
  5643                           ;i2c.c: 426: case S_MASTER_SEND_DATA:
  5644                           
  5645                           
  5646                           ;i2c.c: 429: if(SSP1CON2bits.ACKSTAT)
  5647  02AE  0024               	movlb	4	; select bank4
  5648  02AF  1F16               	btfss	22,6	;volatile
  5649  02B0  2ABB               	goto	i1l1895
  5650                           
  5651                           ;i2c.c: 430: {;i2c.c: 432: i2c_object.i2cErrors++;
  5652  02B1  3001               	movlw	1
  5653  02B2  00F8               	movwf	??_I2C_ISR
  5654  02B3  0878               	movf	??_I2C_ISR,w
  5655  02B4  0021               	movlb	1	; select bank1
  5656  02B5  07AA               	addwf	(_i2c_object^(0+128)+4),f
  5657                           
  5658                           ;i2c.c: 435: SSP1CON2bits.ACKSTAT = 0;
  5659  02B6  0024               	movlb	4	; select bank4
  5660  02B7  1316               	bcf	22,6	;volatile
  5661                           
  5662                           ;i2c.c: 438: I2C_Stop(I2C_DATA_NO_ACK);
  5663  02B8  3005               	movlw	5
  5664  02B9  2734               	fcall	_I2C_Stop
  5665                           
  5666                           ;i2c.c: 440: }
  5667  02BA  0008               	return
  5668  02BB                     i1l1895:	
  5669                           
  5670                           ;i2c.c: 441: else;i2c.c: 442: {;i2c.c: 444: if(i2c_bytes_left-- == 0U)
  5671  02BB  3001               	movlw	1
  5672  02BC  0020               	movlb	0	; select bank0
  5673  02BD  02EC               	subwf	I2C_ISR@i2c_bytes_left,f
  5674  02BE  0A6C               	incf	I2C_ISR@i2c_bytes_left,w
  5675  02BF  1D03               	btfss	3,2
  5676  02C0  2AD3               	goto	i1l1903
  5677                           
  5678                           ;i2c.c: 445: {;i2c.c: 449: p_i2c_trb_current++;
  5679  02C1  3004               	movlw	4
  5680  02C2  00F8               	movwf	??_I2C_ISR
  5681  02C3  0878               	movf	??_I2C_ISR,w
  5682  02C4  07F1               	addwf	_p_i2c_trb_current,f
  5683                           
  5684                           ;i2c.c: 452: if(--i2c_trb_count == 0)
  5685  02C5  3001               	movlw	1
  5686  02C6  02F2               	subwf	_i2c_trb_count,f
  5687  02C7  1D03               	btfss	3,2
  5688  02C8  2ACC               	goto	i1l132
  5689                           
  5690                           ;i2c.c: 453: {;i2c.c: 454: I2C_Stop(I2C_MESSAGE_COMPLETE);
  5691  02C9  3000               	movlw	0
  5692  02CA  2734               	fcall	_I2C_Stop
  5693                           
  5694                           ;i2c.c: 455: }
  5695  02CB  0008               	return
  5696  02CC                     i1l132:	
  5697                           
  5698                           ;i2c.c: 456: else;i2c.c: 457: {;i2c.c: 464: SSP1CON2bits.RSEN = 1;
  5699  02CC  0024               	movlb	4	; select bank4
  5700  02CD  1496               	bsf	22,1	;volatile
  5701                           
  5702                           ;i2c.c: 467: i2c_state = S_MASTER_SEND_ADDR;
  5703  02CE  3002               	movlw	2
  5704  02CF  00F8               	movwf	??_I2C_ISR
  5705  02D0  0878               	movf	??_I2C_ISR,w
  5706  02D1  00F3               	movwf	_i2c_state
  5707                           
  5708                           ;i2c.c: 469: };i2c.c: 470: }
  5709  02D2  0008               	return
  5710  02D3                     i1l1903:	
  5711                           
  5712                           ;i2c.c: 471: else;i2c.c: 472: {;i2c.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  5713  02D3  0020               	movlb	0	; select bank0
  5714  02D4  086D               	movf	I2C_ISR@pi2c_buf_ptr,w
  5715  02D5  0086               	movwf	6
  5716  02D6  0187               	clrf	7
  5717  02D7  0801               	movf	1,w
  5718  02D8  0024               	movlb	4	; select bank4
  5719  02D9  0091               	movwf	17	;volatile
  5720  02DA  3001               	movlw	1
  5721  02DB  00F8               	movwf	??_I2C_ISR
  5722  02DC  0878               	movf	??_I2C_ISR,w
  5723  02DD  0020               	movlb	0	; select bank0
  5724  02DE  07ED               	addwf	I2C_ISR@pi2c_buf_ptr,f
  5725                           
  5726                           ;i2c.c: 475: };i2c.c: 476: };i2c.c: 477: break;
  5727  02DF  0008               	return
  5728  02E0                     i1l135:	
  5729                           ;i2c.c: 479: case S_MASTER_ACK_ADDR:
  5730                           
  5731                           
  5732                           ;i2c.c: 482: if(SSP1CON2bits.ACKSTAT)
  5733  02E0  0024               	movlb	4	; select bank4
  5734  02E1  1F16               	btfss	22,6	;volatile
  5735  02E2  2AED               	goto	i1l136
  5736                           
  5737                           ;i2c.c: 483: {;i2c.c: 486: i2c_object.i2cErrors++;
  5738  02E3  3001               	movlw	1
  5739  02E4  00F8               	movwf	??_I2C_ISR
  5740  02E5  0878               	movf	??_I2C_ISR,w
  5741  02E6  0021               	movlb	1	; select bank1
  5742  02E7  07AA               	addwf	(_i2c_object^(0+128)+4),f
  5743                           
  5744                           ;i2c.c: 489: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  5745  02E8  3004               	movlw	4
  5746  02E9  2734               	fcall	_I2C_Stop
  5747                           
  5748                           ;i2c.c: 492: SSP1CON2bits.ACKSTAT = 0;
  5749  02EA  0024               	movlb	4	; select bank4
  5750  02EB  1316               	bcf	22,6	;volatile
  5751                           
  5752                           ;i2c.c: 493: }
  5753  02EC  0008               	return
  5754  02ED                     i1l136:	
  5755                           
  5756                           ;i2c.c: 494: else;i2c.c: 495: {;i2c.c: 496: SSP1CON2bits.RCEN = 1;
  5757  02ED  1596               	bsf	22,3	;volatile
  5758                           
  5759                           ;i2c.c: 497: i2c_state = S_MASTER_ACK_RCV_DATA;
  5760  02EE  3008               	movlw	8
  5761  02EF  00F8               	movwf	??_I2C_ISR
  5762  02F0  0878               	movf	??_I2C_ISR,w
  5763  02F1  00F3               	movwf	_i2c_state
  5764                           
  5765                           ;i2c.c: 498: };i2c.c: 499: break;
  5766  02F2  0008               	return
  5767  02F3                     i1l1915:	
  5768                           ;i2c.c: 501: case S_MASTER_RCV_DATA:
  5769                           
  5770                           
  5771                           ;i2c.c: 506: i2c_state = S_MASTER_ACK_RCV_DATA;
  5772  02F3  3008               	movlw	8
  5773  02F4  00F8               	movwf	??_I2C_ISR
  5774  02F5  0878               	movf	??_I2C_ISR,w
  5775  02F6  00F3               	movwf	_i2c_state
  5776                           
  5777                           ;i2c.c: 509: SSP1CON2bits.RCEN = 1;
  5778  02F7  0024               	movlb	4	; select bank4
  5779  02F8  1596               	bsf	22,3	;volatile
  5780                           
  5781                           ;i2c.c: 511: break;
  5782  02F9  0008               	return
  5783  02FA                     i1l1919:	
  5784                           ;i2c.c: 513: case S_MASTER_ACK_RCV_DATA:
  5785                           
  5786                           
  5787                           ;i2c.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  5788  02FA  0024               	movlb	4	; select bank4
  5789  02FB  0811               	movf	17,w	;volatile
  5790  02FC  00F8               	movwf	??_I2C_ISR
  5791  02FD  0020               	movlb	0	; select bank0
  5792  02FE  086D               	movf	I2C_ISR@pi2c_buf_ptr,w
  5793  02FF  0086               	movwf	6
  5794  0300  0187               	clrf	7
  5795  0301  0878               	movf	??_I2C_ISR,w
  5796  0302  0081               	movwf	1
  5797  0303  3001               	movlw	1
  5798  0304  00F8               	movwf	??_I2C_ISR
  5799  0305  0878               	movf	??_I2C_ISR,w
  5800  0306  07ED               	addwf	I2C_ISR@pi2c_buf_ptr,f
  5801                           
  5802                           ;i2c.c: 519: if(--i2c_bytes_left)
  5803  0307  3001               	movlw	1
  5804  0308  02EC               	subwf	I2C_ISR@i2c_bytes_left,f
  5805  0309  1903               	btfsc	3,2
  5806  030A  2B12               	goto	i1l140
  5807                           
  5808                           ;i2c.c: 520: {;i2c.c: 526: SSP1CON2bits.ACKDT = 0;
  5809  030B  0024               	movlb	4	; select bank4
  5810  030C  1296               	bcf	22,5	;volatile
  5811                           
  5812                           ;i2c.c: 529: i2c_state = S_MASTER_RCV_DATA;
  5813  030D  3006               	movlw	6
  5814  030E  00F8               	movwf	??_I2C_ISR
  5815  030F  0878               	movf	??_I2C_ISR,w
  5816  0310  00F3               	movwf	_i2c_state
  5817                           
  5818                           ;i2c.c: 530: }
  5819  0311  2B15               	goto	i1l1931
  5820  0312                     i1l140:	
  5821                           
  5822                           ;i2c.c: 531: else;i2c.c: 532: {;i2c.c: 536: SSP1CON2bits.ACKDT = 1;
  5823  0312  0024               	movlb	4	; select bank4
  5824  0313  1696               	bsf	22,5	;volatile
  5825                           
  5826                           ;i2c.c: 538: I2C_FunctionComplete();
  5827  0314  2781               	fcall	_I2C_FunctionComplete
  5828  0315                     i1l1931:	
  5829                           
  5830                           ;i2c.c: 539: };i2c.c: 542: SSP1CON2bits.ACKEN = 1;
  5831  0315  0024               	movlb	4	; select bank4
  5832  0316  1616               	bsf	22,4	;volatile
  5833                           
  5834                           ;i2c.c: 543: break;
  5835  0317  0008               	return
  5836  0318                     i1l1933:	
  5837                           ;i2c.c: 545: case S_MASTER_RCV_STOP:
  5838                           
  5839                           
  5840                           ;i2c.c: 546: case S_MASTER_SEND_STOP:;i2c.c: 549: I2C_Stop(I2C_MESSAGE_COMPLETE);
  5841  0318  3000               	movlw	0
  5842  0319  2734               	fcall	_I2C_Stop
  5843                           
  5844                           ;i2c.c: 550: break;
  5845  031A  0008               	return
  5846  031B                     i1l1935:	
  5847                           ;i2c.c: 552: default:
  5848                           
  5849                           
  5850                           ;i2c.c: 556: i2c_object.i2cErrors++;
  5851  031B  3001               	movlw	1
  5852  031C  00F8               	movwf	??_I2C_ISR
  5853  031D  0878               	movf	??_I2C_ISR,w
  5854  031E  0021               	movlb	1	; select bank1
  5855  031F  07AA               	addwf	(_i2c_object^(0+128)+4),f
  5856                           
  5857                           ;i2c.c: 557: I2C_Stop(I2C_LOST_STATE);
  5858  0320  3006               	movlw	6
  5859  0321  2734               	fcall	_I2C_Stop
  5860                           
  5861                           ;i2c.c: 560: }
  5862                           
  5863                           ;i2c.c: 558: break;
  5864  0322  0008               	return
  5865  0323                     i1l1941:	
  5866  0323  0873               	movf	_i2c_state,w
  5867                           
  5868                           ; Switch size 1, requested type "space"
  5869                           ; Number of cases is 11, Range of values is 0 to 11
  5870                           ; switch strategies available:
  5871                           ; Name         Instructions Cycles
  5872                           ; direct_byte           30     6 (fixed)
  5873                           ; simple_byte           34    18 (average)
  5874                           ; jumptable            260     6 (fixed)
  5875                           ;	Chosen strategy is direct_byte
  5876  0324  0084               	movwf	4
  5877  0325  300C               	movlw	12
  5878  0326  0204               	subwf	4,w
  5879  0327  1803               	skipnc
  5880  0328  2B1B               	goto	i1l1935
  5881  0329  3187               	movlp	high i1S2533
  5882  032A  30A0               	movlw	low i1S2533
  5883  032B  0704               	addwf	4,w
  5884  032C  0082               	movwf	2
  5885  032D  0008               	return
  5886  032E                     __end_of_I2C_ISR:	
  5887                           
  5888                           	psect	swtext1
  5889  07A0                     __pswtext1:	
  5890  07A0                     i1S2533:	
  5891  07A0  2A10               	ljmp	i1l106
  5892  07A1  2A3B               	ljmp	i1l111
  5893  07A2  2A8A               	ljmp	i1l1861
  5894  07A3  2AAE               	ljmp	i1l128
  5895  07A4  2B18               	ljmp	i1l1933
  5896  07A5  2AE0               	ljmp	i1l135
  5897  07A6  2AF3               	ljmp	i1l1915
  5898  07A7  2B18               	ljmp	i1l1933
  5899  07A8  2AFA               	ljmp	i1l1919
  5900  07A9  2B1B               	ljmp	i1l1935
  5901  07AA  2A42               	ljmp	i1l112
  5902  07AB  2A62               	ljmp	i1l117
  5903                           
  5904                           	psect	text34
  5905  0734                     __ptext34:	
  5906 ;; *************** function _I2C_Stop *****************
  5907 ;; Defined at:
  5908 ;;		line 581 in file "mcc_generated_files/i2c.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  completion_c    1    wreg     enum E2207
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  completion_c    1    1[COMMON] enum E2207
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5922 ;;      Params:         0       0       0       0
  5923 ;;      Locals:         1       0       0       0
  5924 ;;      Temps:          1       0       0       0
  5925 ;;      Totals:         2       0       0       0
  5926 ;;Total ram usage:        2 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_I2C_ISR
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           
  5936                           ;psect for function _I2C_Stop
  5937  0734                     _I2C_Stop:	
  5938                           
  5939                           ;incstack = 0
  5940                           ; Regs used in _I2C_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  5941                           ;I2C_Stop@completion_code stored from wreg
  5942  0734  00F7               	movwf	I2C_Stop@completion_code
  5943                           
  5944                           ;i2c.c: 584: SSP1CON2bits.PEN = 1;
  5945  0735  0024               	movlb	4	; select bank4
  5946  0736  1516               	bsf	22,2	;volatile
  5947                           
  5948                           ;i2c.c: 587: if (p_i2c_current->pTrFlag != (0))
  5949  0737  0870               	movf	_p_i2c_current,w
  5950  0738  3E02               	addlw	2
  5951  0739  0086               	movwf	6
  5952  073A  0187               	clrf	7
  5953  073B  0801               	movf	1,w
  5954  073C  1903               	btfsc	3,2
  5955  073D  2F49               	goto	i1l1675
  5956                           
  5957                           ;i2c.c: 588: {;i2c.c: 590: *(p_i2c_current->pTrFlag) = completion_code;
  5958  073E  0877               	movf	I2C_Stop@completion_code,w
  5959  073F  00F6               	movwf	??_I2C_Stop
  5960  0740  0870               	movf	_p_i2c_current,w
  5961  0741  3E02               	addlw	2
  5962  0742  0086               	movwf	6
  5963  0743  0187               	clrf	7
  5964  0744  0801               	movf	1,w
  5965  0745  0086               	movwf	6
  5966  0746  0187               	clrf	7
  5967  0747  0876               	movf	??_I2C_Stop,w
  5968  0748  0081               	movwf	1
  5969  0749                     i1l1675:	
  5970                           
  5971                           ;i2c.c: 591: };i2c.c: 594: i2c_state = S_MASTER_IDLE;
  5972  0749  01F3               	clrf	_i2c_state
  5973  074A  0008               	return
  5974  074B                     __end_of_I2C_Stop:	
  5975                           
  5976                           	psect	text35
  5977  0781                     __ptext35:	
  5978 ;; *************** function _I2C_FunctionComplete *****************
  5979 ;; Defined at:
  5980 ;;		line 563 in file "mcc_generated_files/i2c.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5994 ;;      Params:         0       0       0       0
  5995 ;;      Locals:         0       0       0       0
  5996 ;;      Temps:          1       0       0       0
  5997 ;;      Totals:         1       0       0       0
  5998 ;;Total ram usage:        1 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_I2C_ISR
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function _I2C_FunctionComplete
  6009  0781                     _I2C_FunctionComplete:	
  6010                           
  6011                           ;i2c.c: 567: p_i2c_trb_current++;
  6012                           
  6013                           ;incstack = 0
  6014                           ; Regs used in _I2C_FunctionComplete: [wreg+status,2+status,0]
  6015  0781  3004               	movlw	4
  6016  0782  00F6               	movwf	??_I2C_FunctionComplete
  6017  0783  0876               	movf	??_I2C_FunctionComplete,w
  6018  0784  07F1               	addwf	_p_i2c_trb_current,f
  6019                           
  6020                           ;i2c.c: 570: if(--i2c_trb_count == 0)
  6021  0785  3001               	movlw	1
  6022  0786  02F2               	subwf	_i2c_trb_count,f
  6023  0787  1D03               	btfss	3,2
  6024  0788  2F8E               	goto	i1l147
  6025                           
  6026                           ;i2c.c: 571: {;i2c.c: 572: i2c_state = S_MASTER_SEND_STOP;
  6027  0789  3004               	movlw	4
  6028  078A  00F6               	movwf	??_I2C_FunctionComplete
  6029  078B  0876               	movf	??_I2C_FunctionComplete,w
  6030  078C  00F3               	movwf	_i2c_state
  6031                           
  6032                           ;i2c.c: 573: }
  6033  078D  0008               	return
  6034  078E                     i1l147:	
  6035                           
  6036                           ;i2c.c: 574: else;i2c.c: 575: {;i2c.c: 576: i2c_state = S_MASTER_RESTART;
  6037  078E  01F3               	clrf	_i2c_state
  6038  078F  0AF3               	incf	_i2c_state,f
  6039  0790  0008               	return
  6040  0791                     __end_of_I2C_FunctionComplete:	
  6041                           
  6042                           	psect	text36
  6043  07F9                     __ptext36:	
  6044 ;; *************** function _I2C_BusCollisionISR *****************
  6045 ;; Defined at:
  6046 ;;		line 728 in file "mcc_generated_files/i2c.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;		None
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		None
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6060 ;;      Params:         0       0       0       0
  6061 ;;      Locals:         0       0       0       0
  6062 ;;      Temps:          0       0       0       0
  6063 ;;      Totals:         0       0       0       0
  6064 ;;Total ram usage:        0 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_INTERRUPT_InterruptManager
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function _I2C_BusCollisionISR
  6075  07F9                     _I2C_BusCollisionISR:	
  6076                           
  6077                           ;incstack = 0
  6078                           ; Regs used in _I2C_BusCollisionISR: []
  6079  07F9  0008               	return
  6080  07FA                     __end_of_I2C_BusCollisionISR:	
  6081  007E                     btemp	set	126	;btemp
  6082  007E                     int$flags	set	126
  6083  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         43
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     75      79
    BANK1            80     13      59
    BANK2            80      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    i2c_tr_queue.pTrFlag	PTR enum E2207 size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    i2c_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK1[4]), I2C_MasterWrite@trBlock(BANK1[4]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TickISR(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), TickISR(), 

    BMP280_Read@pData	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), 

    BMP280_Read@pD	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), 

    I2C_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@writeBuffer(BANK0[2]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    I2C_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterWrite@trBlock(BANK1[4]), 

    I2C_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), 

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    I2C_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK1[4]), 

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    i2c_object.pTrTail.pTrFlag	PTR enum E2207 size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    i2c_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK1[4]), I2C_MasterWrite@trBlock(BANK1[4]), 

    I2C_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK1[4]), I2C_MasterWrite@trBlock(BANK1[4]), 

    I2C_MasterTRBInsert@pflag	PTR enum E2207 size(1) Largest target is 1
		 -> BMP280_Read@status(BANK0[1]), BMP280_Write8@status(BANK0[1]), 

    I2C_MasterRead@pflag	PTR enum E2207 size(1) Largest target is 1
		 -> BMP280_Read@status(BANK0[1]), 

    I2C_MasterRead@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), 

    F2316.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    I2C_MasterWrite@pflag	PTR enum E2207 size(1) Largest target is 1
		 -> BMP280_Read@status(BANK0[1]), BMP280_Write8@status(BANK0[1]), 

    I2C_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@writeBuffer(BANK0[2]), 

    F2311.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    p_i2c_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK1[4]), I2C_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E2207 size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    i2c_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK1[4]), I2C_MasterWrite@trBlock(BANK1[4]), 

    S119$pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    p_i2c_current.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    S131$pTrFlag	PTR enum E2207 size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    p_i2c_current.pTrFlag	PTR enum E2207 size(1) Largest target is 3
		 -> BMP280_read24_le@value(BANK0[3]), BMP280_read16@value(BANK0[2]), BMP280_read8@value(BANK0[1]), BMP280_Read@status(BANK0[1]), 
		 -> BMP280_Read@writeBuffer(BANK0[3]), BMP280_Write8@status(BANK0[1]), BMP280_Write8@writeBuffer(BANK0[2]), 

    S131$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK1[4]), I2C_MasterWrite@trBlock(BANK1[4]), 

    p_i2c_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C_MasterRead@trBlock(BANK1[4]), I2C_MasterWrite@trBlock(BANK1[4]), 

    p_i2c_current	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S142$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK1[3]), 

    i2c_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK1[3]), 

    S142$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK1[3]), 

    i2c_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c_tr_queue(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_Stop

Critical Paths under _main in BANK0

    _main->_BMP280_readTemperature
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _DisplayNum->___lwdiv
    _BMP280_readTemperature->_BMP280_read24_le
    ___lwdiv->___wmul
    _BMP280_read24_le->_BMP280_Read
    _BMP280_readCoefficients->_BMP280_readS16
    _BMP280_readS16->_BMP280_read16
    _BMP280_read16->_BMP280_Read
    _BMP280_read8->_BMP280_Read
    _BMP280_Read->_I2C_MasterRead
    _BMP280_Read->_I2C_MasterWrite
    _I2C_MasterRead->_I2C_MasterReadTRBBuild
    _BMP280_Write8->_I2C_MasterWrite
    _I2C_MasterWrite->_I2C_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_BMP280_readTemperature

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   22265
                                             74 BANK0      1     1      0
                                             10 BANK1      3     3      0
                      _BMP280_Write8
                       _BMP280_read8
            _BMP280_readCoefficients
             _BMP280_readTemperature
                         _DisplayNum
                     _I2C_Initialize
                  _SYSTEM_Initialize
                    _TMR2_Initialize
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     195
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0     161
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisplayNum                                           6     3      3    1807
                                             14 BANK0      6     3      3
                           _ShiftOut
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ShiftOut                                             3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              35    33      2    5692
                                             49 BANK0     25    23      2
                                              0 BANK1     10    10      0
                   _BMP280_read24_le
                             ___lmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     631
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     656
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _BMP280_read24_le                                    20    16      4    3972
                                             29 BANK0     20    16      4
                        _BMP280_Read
 ---------------------------------------------------------------------------------
 (1) _BMP280_readCoefficients                              0     0      0    7833
                      _BMP280_read16
                     _BMP280_readS16
 ---------------------------------------------------------------------------------
 (2) _BMP280_readS16                                       4     1      3    3932
                                             35 BANK0      4     1      3
                      _BMP280_read16
 ---------------------------------------------------------------------------------
 (3) _BMP280_read16                                        6     4      2    3901
                                             29 BANK0      6     4      2
                        _BMP280_Read
 ---------------------------------------------------------------------------------
 (1) _BMP280_read8                                         3     3      0    3901
                                             29 BANK0      3     3      0
                        _BMP280_Read
 ---------------------------------------------------------------------------------
 (3) _BMP280_Read                                         15    12      3    3787
                                             14 BANK0     15    12      3
                     _I2C_MasterRead
                    _I2C_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       7     3      4    1268
                                              7 BANK0      7     3      4
             _I2C_MasterReadTRBBuild
                _I2C_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterReadTRBBuild                               7     3      4     442
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _BMP280_Write8                                        7     6      1    1816
                                             14 BANK0      7     6      1
                    _I2C_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      7     3      4    1462
                                              7 BANK0      7     3      4
                _I2C_MasterTRBInsert
            _I2C_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWriteTRBBuild                              7     3      4     411
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterTRBInsert                                  4     2      2     446
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0      22
                _I2C_BusCollisionISR
                            _I2C_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _TickISR *
 ---------------------------------------------------------------------------------
 (10) _TickISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_ISR                                              4     4      0      22
                                              2 COMMON     4     4      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C_Stop                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _I2C_FunctionComplete                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_Write8
     _I2C_MasterWrite
       _I2C_MasterTRBInsert
       _I2C_MasterWriteTRBBuild
   _BMP280_read8
     _BMP280_Read
       _I2C_MasterRead
         _I2C_MasterReadTRBBuild
         _I2C_MasterTRBInsert
       _I2C_MasterWrite
         _I2C_MasterTRBInsert
         _I2C_MasterWriteTRBBuild
   _BMP280_readCoefficients
     _BMP280_read16
       _BMP280_Read
         _I2C_MasterRead
           _I2C_MasterReadTRBBuild
           _I2C_MasterTRBInsert
         _I2C_MasterWrite
           _I2C_MasterTRBInsert
           _I2C_MasterWriteTRBBuild
     _BMP280_readS16
       _BMP280_read16
         _BMP280_Read
           _I2C_MasterRead
             _I2C_MasterReadTRBBuild
             _I2C_MasterTRBInsert
           _I2C_MasterWrite
             _I2C_MasterTRBInsert
             _I2C_MasterWriteTRBBuild
   _BMP280_readTemperature
     _BMP280_read24_le
       _BMP280_Read
         _I2C_MasterRead
           _I2C_MasterReadTRBBuild
           _I2C_MasterTRBInsert
         _I2C_MasterWrite
           _I2C_MasterTRBInsert
           _I2C_MasterWriteTRBBuild
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _DisplayNum
     _ShiftOut
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
   _I2C_Initialize
   _SYSTEM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize
   _TMR2_Initialize
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
   ___lwdiv
     ___wmul (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TickISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      96       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4B      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      D      3B       8       73.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      96      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Aug 17 13:44:26 2018

        __end_of_TMR2_SetInterruptHandler 07D4                                         pc 0002  
                   I2C_ISR@i2c_bytes_left 006C                               __CFG_CP$OFF 0000  
                     ___wmul@multiplicand 0022                   ?_I2C_MasterReadTRBBuild 0020  
                             __CFG_LVP$ON 0000                                       l331 0614  
                                     l333 0616                                       l350 041F  
                                     l337 0621                                       l361 0463  
                                     l353 0422                                       l346 041C  
                                     l451 0706                                       l371 046C  
                                     l356 0425                                       l365 0466  
                                     l368 0469                                       _GIE 005F  
                                     _PR2 001B                           __end_of_I2C_ISR 032E  
                         _TMR2_Initialize 0770                              __CFG_BORV$LO 0000  
                                     wreg 0009                      __size_of_BMP280_Read 006F  
                                    l2201 040C                                      l2123 04BD  
                                    l2133 04D2                                      l2141 0693  
                                    l2205 03B2                                      l2127 04C4  
                                    l2129 04CA                                      l2411 06BC  
                                    l2403 06B2                                      l2147 066C  
                                    l2323 0700                                      l2315 0606  
                                    l2181 03F5                                      l2173 03C0  
                                    l2341 05B2                                      l2175 03E1  
                                    l2159 03CF                                      l2511 039C  
                                    l2337 05A8                                      l2361 057F  
                                    l2505 0374                                      l2195 03E6  
                                    l2371 059A                                      l2197 0407  
                                    l2461 046F                                      l2453 044F  
                                    l2445 0428                                      l2367 0591  
                                    l2359 0573                                      l2383 05D6  
                                    l2463 047B                                      l2447 0434  
                                    l2385 05E2                                      l2393 05F7  
                                    l2491 035B                                      l2389 05EE  
                                    l2489 0350                                      l2499 0366  
                                    u2105 0507                                      u2124 060B  
                                    u2205 05B3                                      u2125 060A  
                                    _LATA 010C                                      u2070 0568  
                                    _LATB 010D                                      u2215 05BA  
                                    _LATC 010E                                      u2065 03B8  
                                    u2315 05D9                                      u2245 0576  
                                    u2165 0707                                      u2405 00C5  
                                    u2095 04FB                                      u2175 070C  
                                    u2415 00E7                                      u2335 05E8  
                                    u2265 0580                                      u2425 0124  
                                    u2345 05EF                    ??_I2C_FunctionComplete 0076  
                                    u2275 058A                                      u2435 0135  
                                    u2285 0592                                      u2445 0158  
                                    u2455 0187                                      u2465 01D1  
                                    u2385 0059                                      u2395 0088  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                                      _main 032E  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                          __end_of_I2C_Stop 074B  
                           __CFG_BOREN$ON 0000                                      start 0025  
                        DisplayNum@decPos 0030           __size_of_BMP280_readTemperature 01BA  
                           __CFG_MCLRE$ON 0000                           __end_of_TickISR 07F4  
          __end_of_I2C_MasterReadTRBBuild 064C                I2C_MasterReadTRBBuild@ptrb 0026  
          __size_of_OSCILLATOR_Initialize 0006                          ?_I2C_MasterWrite 0027  
           __end_of_OSCILLATOR_Initialize 07EC                     __size_of_BMP280_read8 000F  
                                   ?_main 0076                             __CFG_WDTE$OFF 0000  
                           _i2c_trb_count 0072                                     _T2CON 001C  
                         __end_of___lwdiv 059F                                     i1l111 023B  
                                   i1l112 0242                                     i1l106 0210  
                                   i1l140 0312                                     i1l132 02CC  
                                   i1l117 0262                                     i1l118 026D  
                                   i1l135 02E0                                     i1l136 02ED  
                                   i1l128 02AE                                     i1l241 0023  
                                   i1l147 078E                                     i1l235 0010  
                                   i1l237 001A                           __end_of___lwmod 05FC  
             _BMP280_readTemperature$1161 00C2                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                     ___lmul@multiplicand 0024                                _DisplayNum 0419  
                        __end_of_TMR2_ISR 075E                            _WDT_Initialize 07EC  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR2_StartTimer 07F4  
                I2C_MasterTRBInsert@count 0023                  I2C_MasterTRBInsert@pflag 0021  
                              _i2c_object 00A6                           __initialization 0026  
                            _BMP280_read8 0791                              __end_of_main 03AA  
                        _BMP280_read24_le 04D7                                 ??_I2C_ISR 0078  
                 __end_of_TMR2_Initialize 0781                            __CFG_LPBOR$OFF 0000  
             ?_INTERRUPT_InterruptManager 0076                         DisplayNum@outChar 0032  
                _TMR2_SetInterruptHandler 07CB                                    ??_main 006A  
                     _I2C_MasterTRBInsert 0485                          __end_of_ShiftOut 0624  
                          __CFG_PLLEN$OFF 0000               I2C_MasterReadTRBBuild@pdata 0020  
                  _BMP280_readTemperature 0044                    __size_of_BMP280_Write8 0024  
                  __end_of_WDT_Initialize 07F0                  ?_I2C_MasterWriteTRBBuild 0020  
                  __size_of_BMP280_read16 0012                                    i1S2533 07A0  
                          __CFG_ZCDDIS$ON 0000                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l1903 02D3  
                                  i1l1841 024D                                    i1l1675 0749  
                                  i1l1931 0315                                    i1l1915 02F3  
                                  i1l1933 0318                                    i1l1861 028A  
                                  i1l1829 022F                                    i1l1941 0323  
                                  i1l1935 031B                                    i1l1919 02FA  
                                  i1l1847 025D                                    i1l1881 029F  
                                  i1l1895 02BB                                    i1l1887 02A9  
                                  _OSCCON 0099                                    _WDTCON 0097  
                    ?_I2C_MasterTRBInsert 0020                                    _Digits 00CF  
                        BMP280_Read@pData 002E                            __CFG_PWRTE$OFF 0000  
                   BMP280_read24_le@F2349 00AF                                 ??_TickISR 0076  
                                  ___lmul 059F                                    ___wmul 06FD  
                          __CFG_STVREN$ON 0000                   BMP280_readTemperature@T 00C6  
                               ??___lwdiv 002A                                 ??___lwmod 0024  
           I2C_MasterReadTRBBuild@address 0022                                    _t_fine 00AB  
                 __size_of_I2C_MasterRead 0027                   __size_of_I2C_Initialize 001B  
                   BMP280_read24_le@value 004E                           BMP280_read8@reg 003E  
                               ?_I2C_Stop 0076                           ?_WDT_Initialize 0076  
                             ?_DisplayNum 002E                   __end_of_TMR2_StartTimer 07F7  
TMR2_SetInterruptHandler@InterruptHandler 0020                         _SYSTEM_Initialize 07E0  
                 __end_of__initialization 0041                     ??_I2C_MasterTRBInsert 0022  
                   __end_of_TMR2_CallBack 07B7                      BMP280_Write8@address 0031  
                      ?_SYSTEM_Initialize 0076                             _BMP280_Write8 069A  
                           _BMP280_read16 075E                            __pcstackCOMMON 0076  
                            __pidataBANK0 07F7                              __pidataBANK1 07B7  
                     ??_SYSTEM_Initialize 0022                                 ?_TMR2_ISR 0076  
                        ?_TMR2_Initialize 0076           __end_of_I2C_MasterWriteTRBBuild 06DE  
                          _OPTION_REGbits 0095                                ??_I2C_Stop 0076  
                ?_BMP280_readCoefficients 0076                 __end_of_SYSTEM_Initialize 07E6  
                              __pbssBANK0 006B                                __pbssBANK1 00A0  
                      BMP280_Write8@pData 002E              I2C_MasterReadTRBBuild@length 0021  
                          ?_BMP280_Write8 002E              __size_of_I2C_BusCollisionISR 0001  
                          ?_BMP280_read16 003D                                 ?_ShiftOut 0076  
                              __pmaintext 032E                                   ?___lmul 0020  
                     __size_of_DisplayNum 006C                                   ?___wmul 0020  
                 __size_of_BMP280_readS16 000A                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR2_ISR 0076                                __pintentry 0004  
                                 _I2C_ISR 01FE                            ___lmul@product 0028  
             I2C_MasterWriteTRBBuild@ptrb 0026                             ??_BMP280_Read 0031  
                                 _OSCSTAT 009A                                   _OSCTUNE 0098  
                 I2C_Stop@completion_code 0077                                   _SSP1ADD 0212  
                                 _PPSLOCK 0E0F                                   _SSP1BUF 0211  
                        ?_TMR2_StartTimer 0076                  __end_of_BMP280_read24_le 0522  
                                 _Decimal 006E             __size_of_I2C_FunctionComplete 0010  
                       BMP280_Read@nCount 002F                                   _TickISR 07F0  
                              ??_ShiftOut 0020                ??_TMR2_SetInterruptHandler 0022  
                       BMP280_Read@status 003C                           __size_of___lmul 0030  
                         __size_of___wmul 001C                                   ___lwdiv 056A  
                                 ___lwmod 05CF                            _I2C_MasterRead 064C  
                          _I2C_Initialize 0719                   ?_BMP280_readTemperature 0051  
                                 __ptext1 07E0                                   __ptext2 07EC  
                                 __ptext3 0770                                   __ptext4 07F4  
                                 __ptext5 07CB                                   __ptext6 0522  
                                 __ptext7 07E6                                   __ptext8 0719  
                                 __ptext9 0419                                   _curTemp 00B4  
                   _OSCILLATOR_Initialize 07E6                                 _T2CONbits 001C  
         __end_of_BMP280_readCoefficients 06FD                  ??_PIN_MANAGER_Initialize 0020  
                __size_of_I2C_MasterWrite 0027                __size_of_SYSTEM_Initialize 0006  
                                 clrloop0 07DB                          BMP280_read16@reg 0040  
                    end_of_initialization 0041                       __end_of_BMP280_Read 0419  
                         ??_BMP280_Write8 002F                                   init_ram 07D4  
                                 initloop 07D5                           ??_BMP280_read16 003F  
                    I2C_MasterRead@length 0027          __size_of_I2C_MasterWriteTRBBuild 0020  
                  __end_of_I2C_MasterRead 0673                    __end_of_I2C_Initialize 0734  
                   I2C_MasterWrite@length 0027            __end_of_BMP280_readTemperature 01FE  
                        ??_WDT_Initialize 0020                        I2C_ISR@i2c_address 0074  
                        __CFG_FOSC$INTOSC 0000                              ??_DisplayNum 0031  
                       __size_of_I2C_Stop 0017          I2C_ISR@i2c_10bit_address_restart 006B  
                              main@chipId 00CE                  ??_I2C_MasterReadTRBBuild 0024  
                       _p_i2c_trb_current 0071                            _BMP280_readS16 07C1  
                         ?_I2C_MasterRead 0027                           ?_I2C_Initialize 0076  
    __end_of_TMR2_DefaultInterruptHandler 07F9     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 07F8                        __end_of_DisplayNum 0485  
                          __end_of___lmul 05CF                            __end_of___wmul 0719  
                            _i2c_tr_queue 00BF                            BMP280_Read@ret 0032  
                       __size_of_TMR2_ISR 0013                    ?_OSCILLATOR_Initialize 0076  
                     BMP280_read24_le@reg 004D                       _I2C_BusCollisionISR 07F9  
                     start_initialization 0026                               _BMP280_Read 03AA  
         __size_of_PIN_MANAGER_Initialize 0048                                 _i2c_state 0073  
             __end_of_I2C_MasterTRBInsert 04D7                                 ShiftOut@i 0022  
                       ??_I2C_MasterWrite 002B                  BMP280_Write8@writeBuffer 0032  
                    ?_I2C_BusCollisionISR 0076                    __end_of_BMP280_readS16 07CB  
        __size_of_BMP280_readCoefficients 001F                                  ??___lmul 0028  
                                ??___wmul 0024                         __size_of_ShiftOut 0028  
                             __pdataBANK0 006E                               __pdataBANK1 00CF  
                                ?_I2C_ISR 0076             ?_TMR2_DefaultInterruptHandler 0076  
                  __size_of_TMR2_CallBack 000B                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0020  
                           __pcstackBANK1 00C2                  __size_of_TMR2_Initialize 0011  
                     BMP280_Write8@status 0034                         ?_BMP280_read24_le 003D  
                      ??_BMP280_read24_le 0041                                 _checkTemp 00B6  
                 _I2C_MasterWriteTRBBuild 06BE                     ??_I2C_BusCollisionISR 0076  
                               __pnvBANK1 00D9                           ?_BMP280_readS16 0043  
                                ?_TickISR 0076                                 _main$1162 00CC  
                        ___lwdiv@dividend 0028                    _PIN_MANAGER_Initialize 0522  
         __size_of_I2C_MasterReadTRBBuild 0028                             ?_BMP280_read8 0076  
                                ?___lwdiv 0026                                  ?___lwmod 0020  
            __end_of_I2C_FunctionComplete 0791              ??_INTERRUPT_InterruptManager 007C  
                               __pswtext1 07A0               BMP280_readTemperature@adc_T 00C8  
                                _I2C_Stop 0734              I2C_MasterWriteTRBBuild@pdata 0020  
                        ___lwdiv@quotient 002C                             _p_i2c_current 0070  
                          ___wmul@product 0024                                  _LATCbits 010E  
                               clear_ram0 07DA                             _TMR2_CallBack 07AC  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                __size_of_TMR2_StartTimer 0003                            ??_BMP280_read8 003D  
                     I2C_MasterRead@pdata 002D                       I2C_MasterRead@pflag 002A  
     __size_of_INTERRUPT_InterruptManager 0021                                  _PIR1bits 0011  
                                _PIR2bits 0012                          ShiftOut@thisByte 0021  
                    I2C_MasterWrite@pdata 002D                      I2C_MasterWrite@pflag 002A  
                                _SSP1CON1 0215                                  _SSP1CON3 0217  
                                _TMR2_ISR 074B                       I2C_ISR@pi2c_buf_ptr 006D  
                                _SSP1STAT 0214                          __size_of_I2C_ISR 0130  
                       ___wmul@multiplier 0020                    _I2C_MasterReadTRBBuild 0624  
          ??_TMR2_DefaultInterruptHandler 0076         __size_of_TMR2_SetInterruptHandler 0009  
               ?_TMR2_SetInterruptHandler 0020                        BMP280_read16@value 0041  
                           BMP280_Read@pD 0039                         ___lmul@multiplier 0020  
                      BMP280_Read@address 0036                 ??_I2C_MasterWriteTRBBuild 0024  
                       ??_TMR2_Initialize 0022                            ?_TMR2_CallBack 0076  
                      BMP280_Read@counter 0037                     __end_of_BMP280_Write8 06BE  
                        ??_I2C_MasterRead 002B                          ??_I2C_Initialize 0020  
                 _BMP280_readCoefficients 06DE                     __end_of_BMP280_read16 0770  
                      BMP280_Read@timeOut 003A                                  _ShiftOut 05FC  
                        __size_of_TickISR 0004                   ??_OSCILLATOR_Initialize 0020  
                        __size_of___lwdiv 0035                          __size_of___lwmod 002D  
                            ?_BMP280_Read 002E                           _I2C_MasterWrite 0673  
                         ___lwdiv@divisor 0026                           ___lwdiv@counter 002B  
                                __ptext10 05CF                                  __ptext11 05FC  
                                __ptext20 0791                                  __ptext12 0044  
                                __ptext21 03AA                                  __ptext13 06FD  
                                __ptext30 07AC                                  __ptext22 064C  
                                __ptext14 056A                                  __ptext31 07F8  
                                __ptext23 0624                                  __ptext15 059F  
                                __ptext32 07F0                                  __ptext24 069A  
                                __ptext16 04D7                                  __ptext33 01FE  
                                __ptext25 0673                                  __ptext17 06DE  
                                __ptext34 0734                                  __ptext26 06BE  
                                __ptext18 07C1                                  __ptext35 0781  
                                __ptext27 0485                                  __ptext19 075E  
                                __ptext36 07F9                                  __ptext29 074B  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
            I2C_MasterTRBInsert@ptrb_list 0020                             __size_of_main 007C  
                    _I2C_FunctionComplete 0781                             _SSPDATPPSbits 0E21  
                              _RB4PPSbits 0E9C                                _RB6PPSbits 0E9E  
                           _SSPCLKPPSbits 0E20                                  int$flags 007E  
                       ??_TMR2_StartTimer 0020        __end_of_INTERRUPT_InterruptManager 0025  
              _INTERRUPT_InterruptManager 0004                             DisplayNum@val 002E  
             PIN_MANAGER_Initialize@state 0020                             __bmp280_calib 00A0  
                              _INTCONbits 000B                      __end_of_BMP280_read8 07A0  
                   I2C_MasterRead@address 0028                         BMP280_readS16@reg 0046  
                       BMP280_read8@value 003F                   __size_of_WDT_Initialize 0004  
                  BMP280_Read@writeBuffer 0033                                  intlevel1 0000  
                         ??_TMR2_CallBack 0076                          ??_BMP280_readS16 0046  
                   ?_I2C_FunctionComplete 0076                          ___lwmod@dividend 0022  
               ??_BMP280_readCoefficients 0047                   ?_PIN_MANAGER_Initialize 0076  
                   I2C_MasterRead@trBlock 00B7                         __CFG_CLKOUTEN$OFF 0000  
            __size_of_I2C_MasterTRBInsert 0052                               _PPSLOCKbits 0E0F  
                ??_BMP280_readTemperature 0053                    I2C_MasterWrite@address 0028  
               __size_of_BMP280_read24_le 004B                   __end_of_I2C_MasterWrite 069A  
                  I2C_MasterWrite@trBlock 00BB                           ___lwmod@divisor 0020  
                   TMR2_ISR@CountCallBack 00B2                           ___lwmod@counter 0025  
                             DisplayNum@i 0033               __end_of_I2C_BusCollisionISR 07FA  
          __end_of_PIN_MANAGER_Initialize 056A            I2C_MasterWriteTRBBuild@address 0022  
                   _TMR2_InterruptHandler 00D9             I2C_MasterWriteTRBBuild@length 0021  
